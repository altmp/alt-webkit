/*
 * Copyright (C) 2010 Google, Inc. All Rights Reserved.
 * Copyright (C) 2013 Apple Inc. All Rights Reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

// THIS FILE IS GENERATED BY WebCore/html/parser/create-html-entity-table
// DO NOT EDIT (unless you are a ninja)!

#include "config.h"
#include "HTMLEntityTable.h"

namespace WebCore {

namespace {
static const LChar AEligEntityName[] = "AElig";
static const LChar AEligSemicolonEntityName[] = "AElig;";
static const LChar AMPEntityName[] = "AMP";
static const LChar AMPSemicolonEntityName[] = "AMP;";
static const LChar AacuteEntityName[] = "Aacute";
static const LChar AacuteSemicolonEntityName[] = "Aacute;";
static const LChar AbreveSemicolonEntityName[] = "Abreve;";
static const LChar AcircEntityName[] = "Acirc";
static const LChar AcircSemicolonEntityName[] = "Acirc;";
static const LChar AcySemicolonEntityName[] = "Acy;";
static const LChar AfrSemicolonEntityName[] = "Afr;";
static const LChar AgraveEntityName[] = "Agrave";
static const LChar AgraveSemicolonEntityName[] = "Agrave;";
static const LChar AlphaSemicolonEntityName[] = "Alpha;";
static const LChar AmacrSemicolonEntityName[] = "Amacr;";
static const LChar AndSemicolonEntityName[] = "And;";
static const LChar AogonSemicolonEntityName[] = "Aogon;";
static const LChar AopfSemicolonEntityName[] = "Aopf;";
static const LChar ApplyFunctionSemicolonEntityName[] = "ApplyFunction;";
static const LChar AringEntityName[] = "Aring";
static const LChar AringSemicolonEntityName[] = "Aring;";
static const LChar AscrSemicolonEntityName[] = "Ascr;";
static const LChar AssignSemicolonEntityName[] = "Assign;";
static const LChar AtildeEntityName[] = "Atilde";
static const LChar AtildeSemicolonEntityName[] = "Atilde;";
static const LChar AumlEntityName[] = "Auml";
static const LChar AumlSemicolonEntityName[] = "Auml;";
static const LChar BackslashSemicolonEntityName[] = "Backslash;";
static const LChar BarvSemicolonEntityName[] = "Barv;";
static const LChar BarwedSemicolonEntityName[] = "Barwed;";
static const LChar BcySemicolonEntityName[] = "Bcy;";
static const LChar BecauseSemicolonEntityName[] = "Because;";
static const LChar BernoullisSemicolonEntityName[] = "Bernoullis;";
static const LChar BetaSemicolonEntityName[] = "Beta;";
static const LChar BfrSemicolonEntityName[] = "Bfr;";
static const LChar BopfSemicolonEntityName[] = "Bopf;";
static const LChar BreveSemicolonEntityName[] = "Breve;";
static const LChar BscrSemicolonEntityName[] = "Bscr;";
static const LChar BumpeqSemicolonEntityName[] = "Bumpeq;";
static const LChar CHcySemicolonEntityName[] = "CHcy;";
static const LChar COPYEntityName[] = "COPY";
static const LChar COPYSemicolonEntityName[] = "COPY;";
static const LChar CacuteSemicolonEntityName[] = "Cacute;";
static const LChar CapSemicolonEntityName[] = "Cap;";
static const LChar CapitalDifferentialDSemicolonEntityName[] = "CapitalDifferentialD;";
static const LChar CayleysSemicolonEntityName[] = "Cayleys;";
static const LChar CcaronSemicolonEntityName[] = "Ccaron;";
static const LChar CcedilEntityName[] = "Ccedil";
static const LChar CcedilSemicolonEntityName[] = "Ccedil;";
static const LChar CcircSemicolonEntityName[] = "Ccirc;";
static const LChar CconintSemicolonEntityName[] = "Cconint;";
static const LChar CdotSemicolonEntityName[] = "Cdot;";
static const LChar CedillaSemicolonEntityName[] = "Cedilla;";
static const LChar CenterDotSemicolonEntityName[] = "CenterDot;";
static const LChar CfrSemicolonEntityName[] = "Cfr;";
static const LChar ChiSemicolonEntityName[] = "Chi;";
static const LChar CircleDotSemicolonEntityName[] = "CircleDot;";
static const LChar CircleMinusSemicolonEntityName[] = "CircleMinus;";
static const LChar CirclePlusSemicolonEntityName[] = "CirclePlus;";
static const LChar CircleTimesSemicolonEntityName[] = "CircleTimes;";
static const LChar ClockwiseContourIntegralSemicolonEntityName[] = "ClockwiseContourIntegral;";
static const LChar CloseCurlyDoubleQuoteSemicolonEntityName[] = "CloseCurlyDoubleQuote;";
static const LChar CloseCurlyQuoteSemicolonEntityName[] = "CloseCurlyQuote;";
static const LChar ColonSemicolonEntityName[] = "Colon;";
static const LChar ColoneSemicolonEntityName[] = "Colone;";
static const LChar CongruentSemicolonEntityName[] = "Congruent;";
static const LChar ConintSemicolonEntityName[] = "Conint;";
static const LChar ContourIntegralSemicolonEntityName[] = "ContourIntegral;";
static const LChar CopfSemicolonEntityName[] = "Copf;";
static const LChar CoproductSemicolonEntityName[] = "Coproduct;";
static const LChar CounterClockwiseContourIntegralSemicolonEntityName[] = "CounterClockwiseContourIntegral;";
static const LChar CrossSemicolonEntityName[] = "Cross;";
static const LChar CscrSemicolonEntityName[] = "Cscr;";
static const LChar CupSemicolonEntityName[] = "Cup;";
static const LChar CupCapSemicolonEntityName[] = "CupCap;";
static const LChar DDSemicolonEntityName[] = "DD;";
static const LChar DDotrahdSemicolonEntityName[] = "DDotrahd;";
static const LChar DJcySemicolonEntityName[] = "DJcy;";
static const LChar DScySemicolonEntityName[] = "DScy;";
static const LChar DZcySemicolonEntityName[] = "DZcy;";
static const LChar DaggerSemicolonEntityName[] = "Dagger;";
static const LChar DarrSemicolonEntityName[] = "Darr;";
static const LChar DashvSemicolonEntityName[] = "Dashv;";
static const LChar DcaronSemicolonEntityName[] = "Dcaron;";
static const LChar DcySemicolonEntityName[] = "Dcy;";
static const LChar DelSemicolonEntityName[] = "Del;";
static const LChar DeltaSemicolonEntityName[] = "Delta;";
static const LChar DfrSemicolonEntityName[] = "Dfr;";
static const LChar DiacriticalAcuteSemicolonEntityName[] = "DiacriticalAcute;";
static const LChar DiacriticalDotSemicolonEntityName[] = "DiacriticalDot;";
static const LChar DiacriticalDoubleAcuteSemicolonEntityName[] = "DiacriticalDoubleAcute;";
static const LChar DiacriticalGraveSemicolonEntityName[] = "DiacriticalGrave;";
static const LChar DiacriticalTildeSemicolonEntityName[] = "DiacriticalTilde;";
static const LChar DiamondSemicolonEntityName[] = "Diamond;";
static const LChar DifferentialDSemicolonEntityName[] = "DifferentialD;";
static const LChar DopfSemicolonEntityName[] = "Dopf;";
static const LChar DotSemicolonEntityName[] = "Dot;";
static const LChar DotDotSemicolonEntityName[] = "DotDot;";
static const LChar DotEqualSemicolonEntityName[] = "DotEqual;";
static const LChar DoubleContourIntegralSemicolonEntityName[] = "DoubleContourIntegral;";
static const LChar DoubleDotSemicolonEntityName[] = "DoubleDot;";
static const LChar DoubleDownArrowSemicolonEntityName[] = "DoubleDownArrow;";
static const LChar DoubleLeftArrowSemicolonEntityName[] = "DoubleLeftArrow;";
static const LChar DoubleLeftRightArrowSemicolonEntityName[] = "DoubleLeftRightArrow;";
static const LChar DoubleLeftTeeSemicolonEntityName[] = "DoubleLeftTee;";
static const LChar DoubleLongLeftArrowSemicolonEntityName[] = "DoubleLongLeftArrow;";
static const LChar DoubleLongLeftRightArrowSemicolonEntityName[] = "DoubleLongLeftRightArrow;";
static const LChar DoubleLongRightArrowSemicolonEntityName[] = "DoubleLongRightArrow;";
static const LChar DoubleRightArrowSemicolonEntityName[] = "DoubleRightArrow;";
static const LChar DoubleRightTeeSemicolonEntityName[] = "DoubleRightTee;";
static const LChar DoubleUpArrowSemicolonEntityName[] = "DoubleUpArrow;";
static const LChar DoubleUpDownArrowSemicolonEntityName[] = "DoubleUpDownArrow;";
static const LChar DoubleVerticalBarSemicolonEntityName[] = "DoubleVerticalBar;";
static const LChar DownArrowSemicolonEntityName[] = "DownArrow;";
static const LChar DownArrowBarSemicolonEntityName[] = "DownArrowBar;";
static const LChar DownArrowUpArrowSemicolonEntityName[] = "DownArrowUpArrow;";
static const LChar DownBreveSemicolonEntityName[] = "DownBreve;";
static const LChar DownLeftRightVectorSemicolonEntityName[] = "DownLeftRightVector;";
static const LChar DownLeftTeeVectorSemicolonEntityName[] = "DownLeftTeeVector;";
static const LChar DownLeftVectorSemicolonEntityName[] = "DownLeftVector;";
static const LChar DownLeftVectorBarSemicolonEntityName[] = "DownLeftVectorBar;";
static const LChar DownRightTeeVectorSemicolonEntityName[] = "DownRightTeeVector;";
static const LChar DownRightVectorSemicolonEntityName[] = "DownRightVector;";
static const LChar DownRightVectorBarSemicolonEntityName[] = "DownRightVectorBar;";
static const LChar DownTeeSemicolonEntityName[] = "DownTee;";
static const LChar DownTeeArrowSemicolonEntityName[] = "DownTeeArrow;";
static const LChar DownarrowSemicolonEntityName[] = "Downarrow;";
static const LChar DscrSemicolonEntityName[] = "Dscr;";
static const LChar DstrokSemicolonEntityName[] = "Dstrok;";
static const LChar ENGSemicolonEntityName[] = "ENG;";
static const LChar ETHEntityName[] = "ETH";
static const LChar ETHSemicolonEntityName[] = "ETH;";
static const LChar EacuteEntityName[] = "Eacute";
static const LChar EacuteSemicolonEntityName[] = "Eacute;";
static const LChar EcaronSemicolonEntityName[] = "Ecaron;";
static const LChar EcircEntityName[] = "Ecirc";
static const LChar EcircSemicolonEntityName[] = "Ecirc;";
static const LChar EcySemicolonEntityName[] = "Ecy;";
static const LChar EdotSemicolonEntityName[] = "Edot;";
static const LChar EfrSemicolonEntityName[] = "Efr;";
static const LChar EgraveEntityName[] = "Egrave";
static const LChar EgraveSemicolonEntityName[] = "Egrave;";
static const LChar ElementSemicolonEntityName[] = "Element;";
static const LChar EmacrSemicolonEntityName[] = "Emacr;";
static const LChar EmptySmallSquareSemicolonEntityName[] = "EmptySmallSquare;";
static const LChar EmptyVerySmallSquareSemicolonEntityName[] = "EmptyVerySmallSquare;";
static const LChar EogonSemicolonEntityName[] = "Eogon;";
static const LChar EopfSemicolonEntityName[] = "Eopf;";
static const LChar EpsilonSemicolonEntityName[] = "Epsilon;";
static const LChar EqualSemicolonEntityName[] = "Equal;";
static const LChar EqualTildeSemicolonEntityName[] = "EqualTilde;";
static const LChar EquilibriumSemicolonEntityName[] = "Equilibrium;";
static const LChar EscrSemicolonEntityName[] = "Escr;";
static const LChar EsimSemicolonEntityName[] = "Esim;";
static const LChar EtaSemicolonEntityName[] = "Eta;";
static const LChar EumlEntityName[] = "Euml";
static const LChar EumlSemicolonEntityName[] = "Euml;";
static const LChar ExistsSemicolonEntityName[] = "Exists;";
static const LChar ExponentialESemicolonEntityName[] = "ExponentialE;";
static const LChar FcySemicolonEntityName[] = "Fcy;";
static const LChar FfrSemicolonEntityName[] = "Ffr;";
static const LChar FilledSmallSquareSemicolonEntityName[] = "FilledSmallSquare;";
static const LChar FilledVerySmallSquareSemicolonEntityName[] = "FilledVerySmallSquare;";
static const LChar FopfSemicolonEntityName[] = "Fopf;";
static const LChar ForAllSemicolonEntityName[] = "ForAll;";
static const LChar FouriertrfSemicolonEntityName[] = "Fouriertrf;";
static const LChar FscrSemicolonEntityName[] = "Fscr;";
static const LChar GJcySemicolonEntityName[] = "GJcy;";
static const LChar GTEntityName[] = "GT";
static const LChar GTSemicolonEntityName[] = "GT;";
static const LChar GammaSemicolonEntityName[] = "Gamma;";
static const LChar GammadSemicolonEntityName[] = "Gammad;";
static const LChar GbreveSemicolonEntityName[] = "Gbreve;";
static const LChar GcedilSemicolonEntityName[] = "Gcedil;";
static const LChar GcircSemicolonEntityName[] = "Gcirc;";
static const LChar GcySemicolonEntityName[] = "Gcy;";
static const LChar GdotSemicolonEntityName[] = "Gdot;";
static const LChar GfrSemicolonEntityName[] = "Gfr;";
static const LChar GgSemicolonEntityName[] = "Gg;";
static const LChar GopfSemicolonEntityName[] = "Gopf;";
static const LChar GreaterEqualSemicolonEntityName[] = "GreaterEqual;";
static const LChar GreaterEqualLessSemicolonEntityName[] = "GreaterEqualLess;";
static const LChar GreaterFullEqualSemicolonEntityName[] = "GreaterFullEqual;";
static const LChar GreaterGreaterSemicolonEntityName[] = "GreaterGreater;";
static const LChar GreaterLessSemicolonEntityName[] = "GreaterLess;";
static const LChar GreaterSlantEqualSemicolonEntityName[] = "GreaterSlantEqual;";
static const LChar GreaterTildeSemicolonEntityName[] = "GreaterTilde;";
static const LChar GscrSemicolonEntityName[] = "Gscr;";
static const LChar GtSemicolonEntityName[] = "Gt;";
static const LChar HARDcySemicolonEntityName[] = "HARDcy;";
static const LChar HacekSemicolonEntityName[] = "Hacek;";
static const LChar HatSemicolonEntityName[] = "Hat;";
static const LChar HcircSemicolonEntityName[] = "Hcirc;";
static const LChar HfrSemicolonEntityName[] = "Hfr;";
static const LChar HilbertSpaceSemicolonEntityName[] = "HilbertSpace;";
static const LChar HopfSemicolonEntityName[] = "Hopf;";
static const LChar HorizontalLineSemicolonEntityName[] = "HorizontalLine;";
static const LChar HscrSemicolonEntityName[] = "Hscr;";
static const LChar HstrokSemicolonEntityName[] = "Hstrok;";
static const LChar HumpDownHumpSemicolonEntityName[] = "HumpDownHump;";
static const LChar HumpEqualSemicolonEntityName[] = "HumpEqual;";
static const LChar IEcySemicolonEntityName[] = "IEcy;";
static const LChar IJligSemicolonEntityName[] = "IJlig;";
static const LChar IOcySemicolonEntityName[] = "IOcy;";
static const LChar IacuteEntityName[] = "Iacute";
static const LChar IacuteSemicolonEntityName[] = "Iacute;";
static const LChar IcircEntityName[] = "Icirc";
static const LChar IcircSemicolonEntityName[] = "Icirc;";
static const LChar IcySemicolonEntityName[] = "Icy;";
static const LChar IdotSemicolonEntityName[] = "Idot;";
static const LChar IfrSemicolonEntityName[] = "Ifr;";
static const LChar IgraveEntityName[] = "Igrave";
static const LChar IgraveSemicolonEntityName[] = "Igrave;";
static const LChar ImSemicolonEntityName[] = "Im;";
static const LChar ImacrSemicolonEntityName[] = "Imacr;";
static const LChar ImaginaryISemicolonEntityName[] = "ImaginaryI;";
static const LChar ImpliesSemicolonEntityName[] = "Implies;";
static const LChar IntSemicolonEntityName[] = "Int;";
static const LChar IntegralSemicolonEntityName[] = "Integral;";
static const LChar IntersectionSemicolonEntityName[] = "Intersection;";
static const LChar InvisibleCommaSemicolonEntityName[] = "InvisibleComma;";
static const LChar InvisibleTimesSemicolonEntityName[] = "InvisibleTimes;";
static const LChar IogonSemicolonEntityName[] = "Iogon;";
static const LChar IopfSemicolonEntityName[] = "Iopf;";
static const LChar IotaSemicolonEntityName[] = "Iota;";
static const LChar IscrSemicolonEntityName[] = "Iscr;";
static const LChar ItildeSemicolonEntityName[] = "Itilde;";
static const LChar IukcySemicolonEntityName[] = "Iukcy;";
static const LChar IumlEntityName[] = "Iuml";
static const LChar IumlSemicolonEntityName[] = "Iuml;";
static const LChar JcircSemicolonEntityName[] = "Jcirc;";
static const LChar JcySemicolonEntityName[] = "Jcy;";
static const LChar JfrSemicolonEntityName[] = "Jfr;";
static const LChar JopfSemicolonEntityName[] = "Jopf;";
static const LChar JscrSemicolonEntityName[] = "Jscr;";
static const LChar JsercySemicolonEntityName[] = "Jsercy;";
static const LChar JukcySemicolonEntityName[] = "Jukcy;";
static const LChar KHcySemicolonEntityName[] = "KHcy;";
static const LChar KJcySemicolonEntityName[] = "KJcy;";
static const LChar KappaSemicolonEntityName[] = "Kappa;";
static const LChar KcedilSemicolonEntityName[] = "Kcedil;";
static const LChar KcySemicolonEntityName[] = "Kcy;";
static const LChar KfrSemicolonEntityName[] = "Kfr;";
static const LChar KopfSemicolonEntityName[] = "Kopf;";
static const LChar KscrSemicolonEntityName[] = "Kscr;";
static const LChar LJcySemicolonEntityName[] = "LJcy;";
static const LChar LTEntityName[] = "LT";
static const LChar LTSemicolonEntityName[] = "LT;";
static const LChar LacuteSemicolonEntityName[] = "Lacute;";
static const LChar LambdaSemicolonEntityName[] = "Lambda;";
static const LChar LangSemicolonEntityName[] = "Lang;";
static const LChar LaplacetrfSemicolonEntityName[] = "Laplacetrf;";
static const LChar LarrSemicolonEntityName[] = "Larr;";
static const LChar LcaronSemicolonEntityName[] = "Lcaron;";
static const LChar LcedilSemicolonEntityName[] = "Lcedil;";
static const LChar LcySemicolonEntityName[] = "Lcy;";
static const LChar LeftAngleBracketSemicolonEntityName[] = "LeftAngleBracket;";
static const LChar LeftArrowSemicolonEntityName[] = "LeftArrow;";
static const LChar LeftArrowBarSemicolonEntityName[] = "LeftArrowBar;";
static const LChar LeftArrowRightArrowSemicolonEntityName[] = "LeftArrowRightArrow;";
static const LChar LeftCeilingSemicolonEntityName[] = "LeftCeiling;";
static const LChar LeftDoubleBracketSemicolonEntityName[] = "LeftDoubleBracket;";
static const LChar LeftDownTeeVectorSemicolonEntityName[] = "LeftDownTeeVector;";
static const LChar LeftDownVectorSemicolonEntityName[] = "LeftDownVector;";
static const LChar LeftDownVectorBarSemicolonEntityName[] = "LeftDownVectorBar;";
static const LChar LeftFloorSemicolonEntityName[] = "LeftFloor;";
static const LChar LeftRightArrowSemicolonEntityName[] = "LeftRightArrow;";
static const LChar LeftRightVectorSemicolonEntityName[] = "LeftRightVector;";
static const LChar LeftTeeSemicolonEntityName[] = "LeftTee;";
static const LChar LeftTeeArrowSemicolonEntityName[] = "LeftTeeArrow;";
static const LChar LeftTeeVectorSemicolonEntityName[] = "LeftTeeVector;";
static const LChar LeftTriangleSemicolonEntityName[] = "LeftTriangle;";
static const LChar LeftTriangleBarSemicolonEntityName[] = "LeftTriangleBar;";
static const LChar LeftTriangleEqualSemicolonEntityName[] = "LeftTriangleEqual;";
static const LChar LeftUpDownVectorSemicolonEntityName[] = "LeftUpDownVector;";
static const LChar LeftUpTeeVectorSemicolonEntityName[] = "LeftUpTeeVector;";
static const LChar LeftUpVectorSemicolonEntityName[] = "LeftUpVector;";
static const LChar LeftUpVectorBarSemicolonEntityName[] = "LeftUpVectorBar;";
static const LChar LeftVectorSemicolonEntityName[] = "LeftVector;";
static const LChar LeftVectorBarSemicolonEntityName[] = "LeftVectorBar;";
static const LChar LeftarrowSemicolonEntityName[] = "Leftarrow;";
static const LChar LeftrightarrowSemicolonEntityName[] = "Leftrightarrow;";
static const LChar LessEqualGreaterSemicolonEntityName[] = "LessEqualGreater;";
static const LChar LessFullEqualSemicolonEntityName[] = "LessFullEqual;";
static const LChar LessGreaterSemicolonEntityName[] = "LessGreater;";
static const LChar LessLessSemicolonEntityName[] = "LessLess;";
static const LChar LessSlantEqualSemicolonEntityName[] = "LessSlantEqual;";
static const LChar LessTildeSemicolonEntityName[] = "LessTilde;";
static const LChar LfrSemicolonEntityName[] = "Lfr;";
static const LChar LlSemicolonEntityName[] = "Ll;";
static const LChar LleftarrowSemicolonEntityName[] = "Lleftarrow;";
static const LChar LmidotSemicolonEntityName[] = "Lmidot;";
static const LChar LongLeftArrowSemicolonEntityName[] = "LongLeftArrow;";
static const LChar LongLeftRightArrowSemicolonEntityName[] = "LongLeftRightArrow;";
static const LChar LongRightArrowSemicolonEntityName[] = "LongRightArrow;";
static const LChar LongleftarrowSemicolonEntityName[] = "Longleftarrow;";
static const LChar LongleftrightarrowSemicolonEntityName[] = "Longleftrightarrow;";
static const LChar LongrightarrowSemicolonEntityName[] = "Longrightarrow;";
static const LChar LopfSemicolonEntityName[] = "Lopf;";
static const LChar LowerLeftArrowSemicolonEntityName[] = "LowerLeftArrow;";
static const LChar LowerRightArrowSemicolonEntityName[] = "LowerRightArrow;";
static const LChar LscrSemicolonEntityName[] = "Lscr;";
static const LChar LshSemicolonEntityName[] = "Lsh;";
static const LChar LstrokSemicolonEntityName[] = "Lstrok;";
static const LChar LtSemicolonEntityName[] = "Lt;";
static const LChar MapSemicolonEntityName[] = "Map;";
static const LChar McySemicolonEntityName[] = "Mcy;";
static const LChar MediumSpaceSemicolonEntityName[] = "MediumSpace;";
static const LChar MellintrfSemicolonEntityName[] = "Mellintrf;";
static const LChar MfrSemicolonEntityName[] = "Mfr;";
static const LChar MinusPlusSemicolonEntityName[] = "MinusPlus;";
static const LChar MopfSemicolonEntityName[] = "Mopf;";
static const LChar MscrSemicolonEntityName[] = "Mscr;";
static const LChar MuSemicolonEntityName[] = "Mu;";
static const LChar NJcySemicolonEntityName[] = "NJcy;";
static const LChar NacuteSemicolonEntityName[] = "Nacute;";
static const LChar NcaronSemicolonEntityName[] = "Ncaron;";
static const LChar NcedilSemicolonEntityName[] = "Ncedil;";
static const LChar NcySemicolonEntityName[] = "Ncy;";
static const LChar NegativeMediumSpaceSemicolonEntityName[] = "NegativeMediumSpace;";
static const LChar NegativeThickSpaceSemicolonEntityName[] = "NegativeThickSpace;";
static const LChar NegativeThinSpaceSemicolonEntityName[] = "NegativeThinSpace;";
static const LChar NegativeVeryThinSpaceSemicolonEntityName[] = "NegativeVeryThinSpace;";
static const LChar NestedGreaterGreaterSemicolonEntityName[] = "NestedGreaterGreater;";
static const LChar NestedLessLessSemicolonEntityName[] = "NestedLessLess;";
static const LChar NewLineSemicolonEntityName[] = "NewLine;";
static const LChar NfrSemicolonEntityName[] = "Nfr;";
static const LChar NoBreakSemicolonEntityName[] = "NoBreak;";
static const LChar NonBreakingSpaceSemicolonEntityName[] = "NonBreakingSpace;";
static const LChar NopfSemicolonEntityName[] = "Nopf;";
static const LChar NotSemicolonEntityName[] = "Not;";
static const LChar NotCongruentSemicolonEntityName[] = "NotCongruent;";
static const LChar NotCupCapSemicolonEntityName[] = "NotCupCap;";
static const LChar NotDoubleVerticalBarSemicolonEntityName[] = "NotDoubleVerticalBar;";
static const LChar NotElementSemicolonEntityName[] = "NotElement;";
static const LChar NotEqualSemicolonEntityName[] = "NotEqual;";
static const LChar NotEqualTildeSemicolonEntityName[] = "NotEqualTilde;";
static const LChar NotExistsSemicolonEntityName[] = "NotExists;";
static const LChar NotGreaterSemicolonEntityName[] = "NotGreater;";
static const LChar NotGreaterEqualSemicolonEntityName[] = "NotGreaterEqual;";
static const LChar NotGreaterFullEqualSemicolonEntityName[] = "NotGreaterFullEqual;";
static const LChar NotGreaterGreaterSemicolonEntityName[] = "NotGreaterGreater;";
static const LChar NotGreaterLessSemicolonEntityName[] = "NotGreaterLess;";
static const LChar NotGreaterSlantEqualSemicolonEntityName[] = "NotGreaterSlantEqual;";
static const LChar NotGreaterTildeSemicolonEntityName[] = "NotGreaterTilde;";
static const LChar NotHumpDownHumpSemicolonEntityName[] = "NotHumpDownHump;";
static const LChar NotHumpEqualSemicolonEntityName[] = "NotHumpEqual;";
static const LChar NotLeftTriangleSemicolonEntityName[] = "NotLeftTriangle;";
static const LChar NotLeftTriangleBarSemicolonEntityName[] = "NotLeftTriangleBar;";
static const LChar NotLeftTriangleEqualSemicolonEntityName[] = "NotLeftTriangleEqual;";
static const LChar NotLessSemicolonEntityName[] = "NotLess;";
static const LChar NotLessEqualSemicolonEntityName[] = "NotLessEqual;";
static const LChar NotLessGreaterSemicolonEntityName[] = "NotLessGreater;";
static const LChar NotLessLessSemicolonEntityName[] = "NotLessLess;";
static const LChar NotLessSlantEqualSemicolonEntityName[] = "NotLessSlantEqual;";
static const LChar NotLessTildeSemicolonEntityName[] = "NotLessTilde;";
static const LChar NotNestedGreaterGreaterSemicolonEntityName[] = "NotNestedGreaterGreater;";
static const LChar NotNestedLessLessSemicolonEntityName[] = "NotNestedLessLess;";
static const LChar NotPrecedesSemicolonEntityName[] = "NotPrecedes;";
static const LChar NotPrecedesEqualSemicolonEntityName[] = "NotPrecedesEqual;";
static const LChar NotPrecedesSlantEqualSemicolonEntityName[] = "NotPrecedesSlantEqual;";
static const LChar NotReverseElementSemicolonEntityName[] = "NotReverseElement;";
static const LChar NotRightTriangleSemicolonEntityName[] = "NotRightTriangle;";
static const LChar NotRightTriangleBarSemicolonEntityName[] = "NotRightTriangleBar;";
static const LChar NotRightTriangleEqualSemicolonEntityName[] = "NotRightTriangleEqual;";
static const LChar NotSquareSubsetSemicolonEntityName[] = "NotSquareSubset;";
static const LChar NotSquareSubsetEqualSemicolonEntityName[] = "NotSquareSubsetEqual;";
static const LChar NotSquareSupersetSemicolonEntityName[] = "NotSquareSuperset;";
static const LChar NotSquareSupersetEqualSemicolonEntityName[] = "NotSquareSupersetEqual;";
static const LChar NotSubsetSemicolonEntityName[] = "NotSubset;";
static const LChar NotSubsetEqualSemicolonEntityName[] = "NotSubsetEqual;";
static const LChar NotSucceedsSemicolonEntityName[] = "NotSucceeds;";
static const LChar NotSucceedsEqualSemicolonEntityName[] = "NotSucceedsEqual;";
static const LChar NotSucceedsSlantEqualSemicolonEntityName[] = "NotSucceedsSlantEqual;";
static const LChar NotSucceedsTildeSemicolonEntityName[] = "NotSucceedsTilde;";
static const LChar NotSupersetSemicolonEntityName[] = "NotSuperset;";
static const LChar NotSupersetEqualSemicolonEntityName[] = "NotSupersetEqual;";
static const LChar NotTildeSemicolonEntityName[] = "NotTilde;";
static const LChar NotTildeEqualSemicolonEntityName[] = "NotTildeEqual;";
static const LChar NotTildeFullEqualSemicolonEntityName[] = "NotTildeFullEqual;";
static const LChar NotTildeTildeSemicolonEntityName[] = "NotTildeTilde;";
static const LChar NotVerticalBarSemicolonEntityName[] = "NotVerticalBar;";
static const LChar NscrSemicolonEntityName[] = "Nscr;";
static const LChar NtildeEntityName[] = "Ntilde";
static const LChar NtildeSemicolonEntityName[] = "Ntilde;";
static const LChar NuSemicolonEntityName[] = "Nu;";
static const LChar OEligSemicolonEntityName[] = "OElig;";
static const LChar OacuteEntityName[] = "Oacute";
static const LChar OacuteSemicolonEntityName[] = "Oacute;";
static const LChar OcircEntityName[] = "Ocirc";
static const LChar OcircSemicolonEntityName[] = "Ocirc;";
static const LChar OcySemicolonEntityName[] = "Ocy;";
static const LChar OdblacSemicolonEntityName[] = "Odblac;";
static const LChar OfrSemicolonEntityName[] = "Ofr;";
static const LChar OgraveEntityName[] = "Ograve";
static const LChar OgraveSemicolonEntityName[] = "Ograve;";
static const LChar OmacrSemicolonEntityName[] = "Omacr;";
static const LChar OmegaSemicolonEntityName[] = "Omega;";
static const LChar OmicronSemicolonEntityName[] = "Omicron;";
static const LChar OopfSemicolonEntityName[] = "Oopf;";
static const LChar OpenCurlyDoubleQuoteSemicolonEntityName[] = "OpenCurlyDoubleQuote;";
static const LChar OpenCurlyQuoteSemicolonEntityName[] = "OpenCurlyQuote;";
static const LChar OrSemicolonEntityName[] = "Or;";
static const LChar OscrSemicolonEntityName[] = "Oscr;";
static const LChar OslashEntityName[] = "Oslash";
static const LChar OslashSemicolonEntityName[] = "Oslash;";
static const LChar OtildeEntityName[] = "Otilde";
static const LChar OtildeSemicolonEntityName[] = "Otilde;";
static const LChar OtimesSemicolonEntityName[] = "Otimes;";
static const LChar OumlEntityName[] = "Ouml";
static const LChar OumlSemicolonEntityName[] = "Ouml;";
static const LChar OverBarSemicolonEntityName[] = "OverBar;";
static const LChar OverBraceSemicolonEntityName[] = "OverBrace;";
static const LChar OverBracketSemicolonEntityName[] = "OverBracket;";
static const LChar OverParenthesisSemicolonEntityName[] = "OverParenthesis;";
static const LChar PartialDSemicolonEntityName[] = "PartialD;";
static const LChar PcySemicolonEntityName[] = "Pcy;";
static const LChar PfrSemicolonEntityName[] = "Pfr;";
static const LChar PhiSemicolonEntityName[] = "Phi;";
static const LChar PiSemicolonEntityName[] = "Pi;";
static const LChar PlusMinusSemicolonEntityName[] = "PlusMinus;";
static const LChar PoincareplaneSemicolonEntityName[] = "Poincareplane;";
static const LChar PopfSemicolonEntityName[] = "Popf;";
static const LChar PrSemicolonEntityName[] = "Pr;";
static const LChar PrecedesSemicolonEntityName[] = "Precedes;";
static const LChar PrecedesEqualSemicolonEntityName[] = "PrecedesEqual;";
static const LChar PrecedesSlantEqualSemicolonEntityName[] = "PrecedesSlantEqual;";
static const LChar PrecedesTildeSemicolonEntityName[] = "PrecedesTilde;";
static const LChar PrimeSemicolonEntityName[] = "Prime;";
static const LChar ProductSemicolonEntityName[] = "Product;";
static const LChar ProportionSemicolonEntityName[] = "Proportion;";
static const LChar ProportionalSemicolonEntityName[] = "Proportional;";
static const LChar PscrSemicolonEntityName[] = "Pscr;";
static const LChar PsiSemicolonEntityName[] = "Psi;";
static const LChar QUOTEntityName[] = "QUOT";
static const LChar QUOTSemicolonEntityName[] = "QUOT;";
static const LChar QfrSemicolonEntityName[] = "Qfr;";
static const LChar QopfSemicolonEntityName[] = "Qopf;";
static const LChar QscrSemicolonEntityName[] = "Qscr;";
static const LChar RBarrSemicolonEntityName[] = "RBarr;";
static const LChar REGEntityName[] = "REG";
static const LChar REGSemicolonEntityName[] = "REG;";
static const LChar RacuteSemicolonEntityName[] = "Racute;";
static const LChar RangSemicolonEntityName[] = "Rang;";
static const LChar RarrSemicolonEntityName[] = "Rarr;";
static const LChar RarrtlSemicolonEntityName[] = "Rarrtl;";
static const LChar RcaronSemicolonEntityName[] = "Rcaron;";
static const LChar RcedilSemicolonEntityName[] = "Rcedil;";
static const LChar RcySemicolonEntityName[] = "Rcy;";
static const LChar ReSemicolonEntityName[] = "Re;";
static const LChar ReverseElementSemicolonEntityName[] = "ReverseElement;";
static const LChar ReverseEquilibriumSemicolonEntityName[] = "ReverseEquilibrium;";
static const LChar ReverseUpEquilibriumSemicolonEntityName[] = "ReverseUpEquilibrium;";
static const LChar RfrSemicolonEntityName[] = "Rfr;";
static const LChar RhoSemicolonEntityName[] = "Rho;";
static const LChar RightAngleBracketSemicolonEntityName[] = "RightAngleBracket;";
static const LChar RightArrowSemicolonEntityName[] = "RightArrow;";
static const LChar RightArrowBarSemicolonEntityName[] = "RightArrowBar;";
static const LChar RightArrowLeftArrowSemicolonEntityName[] = "RightArrowLeftArrow;";
static const LChar RightCeilingSemicolonEntityName[] = "RightCeiling;";
static const LChar RightDoubleBracketSemicolonEntityName[] = "RightDoubleBracket;";
static const LChar RightDownTeeVectorSemicolonEntityName[] = "RightDownTeeVector;";
static const LChar RightDownVectorSemicolonEntityName[] = "RightDownVector;";
static const LChar RightDownVectorBarSemicolonEntityName[] = "RightDownVectorBar;";
static const LChar RightFloorSemicolonEntityName[] = "RightFloor;";
static const LChar RightTeeSemicolonEntityName[] = "RightTee;";
static const LChar RightTeeArrowSemicolonEntityName[] = "RightTeeArrow;";
static const LChar RightTeeVectorSemicolonEntityName[] = "RightTeeVector;";
static const LChar RightTriangleSemicolonEntityName[] = "RightTriangle;";
static const LChar RightTriangleBarSemicolonEntityName[] = "RightTriangleBar;";
static const LChar RightTriangleEqualSemicolonEntityName[] = "RightTriangleEqual;";
static const LChar RightUpDownVectorSemicolonEntityName[] = "RightUpDownVector;";
static const LChar RightUpTeeVectorSemicolonEntityName[] = "RightUpTeeVector;";
static const LChar RightUpVectorSemicolonEntityName[] = "RightUpVector;";
static const LChar RightUpVectorBarSemicolonEntityName[] = "RightUpVectorBar;";
static const LChar RightVectorSemicolonEntityName[] = "RightVector;";
static const LChar RightVectorBarSemicolonEntityName[] = "RightVectorBar;";
static const LChar RightarrowSemicolonEntityName[] = "Rightarrow;";
static const LChar RopfSemicolonEntityName[] = "Ropf;";
static const LChar RoundImpliesSemicolonEntityName[] = "RoundImplies;";
static const LChar RrightarrowSemicolonEntityName[] = "Rrightarrow;";
static const LChar RscrSemicolonEntityName[] = "Rscr;";
static const LChar RshSemicolonEntityName[] = "Rsh;";
static const LChar RuleDelayedSemicolonEntityName[] = "RuleDelayed;";
static const LChar SHCHcySemicolonEntityName[] = "SHCHcy;";
static const LChar SHcySemicolonEntityName[] = "SHcy;";
static const LChar SOFTcySemicolonEntityName[] = "SOFTcy;";
static const LChar SacuteSemicolonEntityName[] = "Sacute;";
static const LChar ScSemicolonEntityName[] = "Sc;";
static const LChar ScaronSemicolonEntityName[] = "Scaron;";
static const LChar ScedilSemicolonEntityName[] = "Scedil;";
static const LChar ScircSemicolonEntityName[] = "Scirc;";
static const LChar ScySemicolonEntityName[] = "Scy;";
static const LChar SfrSemicolonEntityName[] = "Sfr;";
static const LChar ShortDownArrowSemicolonEntityName[] = "ShortDownArrow;";
static const LChar ShortLeftArrowSemicolonEntityName[] = "ShortLeftArrow;";
static const LChar ShortRightArrowSemicolonEntityName[] = "ShortRightArrow;";
static const LChar ShortUpArrowSemicolonEntityName[] = "ShortUpArrow;";
static const LChar SigmaSemicolonEntityName[] = "Sigma;";
static const LChar SmallCircleSemicolonEntityName[] = "SmallCircle;";
static const LChar SopfSemicolonEntityName[] = "Sopf;";
static const LChar SqrtSemicolonEntityName[] = "Sqrt;";
static const LChar SquareSemicolonEntityName[] = "Square;";
static const LChar SquareIntersectionSemicolonEntityName[] = "SquareIntersection;";
static const LChar SquareSubsetSemicolonEntityName[] = "SquareSubset;";
static const LChar SquareSubsetEqualSemicolonEntityName[] = "SquareSubsetEqual;";
static const LChar SquareSupersetSemicolonEntityName[] = "SquareSuperset;";
static const LChar SquareSupersetEqualSemicolonEntityName[] = "SquareSupersetEqual;";
static const LChar SquareUnionSemicolonEntityName[] = "SquareUnion;";
static const LChar SscrSemicolonEntityName[] = "Sscr;";
static const LChar StarSemicolonEntityName[] = "Star;";
static const LChar SubSemicolonEntityName[] = "Sub;";
static const LChar SubsetSemicolonEntityName[] = "Subset;";
static const LChar SubsetEqualSemicolonEntityName[] = "SubsetEqual;";
static const LChar SucceedsSemicolonEntityName[] = "Succeeds;";
static const LChar SucceedsEqualSemicolonEntityName[] = "SucceedsEqual;";
static const LChar SucceedsSlantEqualSemicolonEntityName[] = "SucceedsSlantEqual;";
static const LChar SucceedsTildeSemicolonEntityName[] = "SucceedsTilde;";
static const LChar SuchThatSemicolonEntityName[] = "SuchThat;";
static const LChar SumSemicolonEntityName[] = "Sum;";
static const LChar SupSemicolonEntityName[] = "Sup;";
static const LChar SupersetSemicolonEntityName[] = "Superset;";
static const LChar SupersetEqualSemicolonEntityName[] = "SupersetEqual;";
static const LChar SupsetSemicolonEntityName[] = "Supset;";
static const LChar THORNEntityName[] = "THORN";
static const LChar THORNSemicolonEntityName[] = "THORN;";
static const LChar TRADESemicolonEntityName[] = "TRADE;";
static const LChar TSHcySemicolonEntityName[] = "TSHcy;";
static const LChar TScySemicolonEntityName[] = "TScy;";
static const LChar TabSemicolonEntityName[] = "Tab;";
static const LChar TauSemicolonEntityName[] = "Tau;";
static const LChar TcaronSemicolonEntityName[] = "Tcaron;";
static const LChar TcedilSemicolonEntityName[] = "Tcedil;";
static const LChar TcySemicolonEntityName[] = "Tcy;";
static const LChar TfrSemicolonEntityName[] = "Tfr;";
static const LChar ThereforeSemicolonEntityName[] = "Therefore;";
static const LChar ThetaSemicolonEntityName[] = "Theta;";
static const LChar ThickSpaceSemicolonEntityName[] = "ThickSpace;";
static const LChar ThinSpaceSemicolonEntityName[] = "ThinSpace;";
static const LChar TildeSemicolonEntityName[] = "Tilde;";
static const LChar TildeEqualSemicolonEntityName[] = "TildeEqual;";
static const LChar TildeFullEqualSemicolonEntityName[] = "TildeFullEqual;";
static const LChar TildeTildeSemicolonEntityName[] = "TildeTilde;";
static const LChar TopfSemicolonEntityName[] = "Topf;";
static const LChar TripleDotSemicolonEntityName[] = "TripleDot;";
static const LChar TscrSemicolonEntityName[] = "Tscr;";
static const LChar TstrokSemicolonEntityName[] = "Tstrok;";
static const LChar UacuteEntityName[] = "Uacute";
static const LChar UacuteSemicolonEntityName[] = "Uacute;";
static const LChar UarrSemicolonEntityName[] = "Uarr;";
static const LChar UarrocirSemicolonEntityName[] = "Uarrocir;";
static const LChar UbrcySemicolonEntityName[] = "Ubrcy;";
static const LChar UbreveSemicolonEntityName[] = "Ubreve;";
static const LChar UcircEntityName[] = "Ucirc";
static const LChar UcircSemicolonEntityName[] = "Ucirc;";
static const LChar UcySemicolonEntityName[] = "Ucy;";
static const LChar UdblacSemicolonEntityName[] = "Udblac;";
static const LChar UfrSemicolonEntityName[] = "Ufr;";
static const LChar UgraveEntityName[] = "Ugrave";
static const LChar UgraveSemicolonEntityName[] = "Ugrave;";
static const LChar UmacrSemicolonEntityName[] = "Umacr;";
static const LChar UnderBarSemicolonEntityName[] = "UnderBar;";
static const LChar UnderBraceSemicolonEntityName[] = "UnderBrace;";
static const LChar UnderBracketSemicolonEntityName[] = "UnderBracket;";
static const LChar UnderParenthesisSemicolonEntityName[] = "UnderParenthesis;";
static const LChar UnionSemicolonEntityName[] = "Union;";
static const LChar UnionPlusSemicolonEntityName[] = "UnionPlus;";
static const LChar UogonSemicolonEntityName[] = "Uogon;";
static const LChar UopfSemicolonEntityName[] = "Uopf;";
static const LChar UpArrowSemicolonEntityName[] = "UpArrow;";
static const LChar UpArrowBarSemicolonEntityName[] = "UpArrowBar;";
static const LChar UpArrowDownArrowSemicolonEntityName[] = "UpArrowDownArrow;";
static const LChar UpDownArrowSemicolonEntityName[] = "UpDownArrow;";
static const LChar UpEquilibriumSemicolonEntityName[] = "UpEquilibrium;";
static const LChar UpTeeSemicolonEntityName[] = "UpTee;";
static const LChar UpTeeArrowSemicolonEntityName[] = "UpTeeArrow;";
static const LChar UparrowSemicolonEntityName[] = "Uparrow;";
static const LChar UpdownarrowSemicolonEntityName[] = "Updownarrow;";
static const LChar UpperLeftArrowSemicolonEntityName[] = "UpperLeftArrow;";
static const LChar UpperRightArrowSemicolonEntityName[] = "UpperRightArrow;";
static const LChar UpsiSemicolonEntityName[] = "Upsi;";
static const LChar UpsilonSemicolonEntityName[] = "Upsilon;";
static const LChar UringSemicolonEntityName[] = "Uring;";
static const LChar UscrSemicolonEntityName[] = "Uscr;";
static const LChar UtildeSemicolonEntityName[] = "Utilde;";
static const LChar UumlEntityName[] = "Uuml";
static const LChar UumlSemicolonEntityName[] = "Uuml;";
static const LChar VDashSemicolonEntityName[] = "VDash;";
static const LChar VbarSemicolonEntityName[] = "Vbar;";
static const LChar VcySemicolonEntityName[] = "Vcy;";
static const LChar VdashSemicolonEntityName[] = "Vdash;";
static const LChar VdashlSemicolonEntityName[] = "Vdashl;";
static const LChar VeeSemicolonEntityName[] = "Vee;";
static const LChar VerbarSemicolonEntityName[] = "Verbar;";
static const LChar VertSemicolonEntityName[] = "Vert;";
static const LChar VerticalBarSemicolonEntityName[] = "VerticalBar;";
static const LChar VerticalLineSemicolonEntityName[] = "VerticalLine;";
static const LChar VerticalSeparatorSemicolonEntityName[] = "VerticalSeparator;";
static const LChar VerticalTildeSemicolonEntityName[] = "VerticalTilde;";
static const LChar VeryThinSpaceSemicolonEntityName[] = "VeryThinSpace;";
static const LChar VfrSemicolonEntityName[] = "Vfr;";
static const LChar VopfSemicolonEntityName[] = "Vopf;";
static const LChar VscrSemicolonEntityName[] = "Vscr;";
static const LChar VvdashSemicolonEntityName[] = "Vvdash;";
static const LChar WcircSemicolonEntityName[] = "Wcirc;";
static const LChar WedgeSemicolonEntityName[] = "Wedge;";
static const LChar WfrSemicolonEntityName[] = "Wfr;";
static const LChar WopfSemicolonEntityName[] = "Wopf;";
static const LChar WscrSemicolonEntityName[] = "Wscr;";
static const LChar XfrSemicolonEntityName[] = "Xfr;";
static const LChar XiSemicolonEntityName[] = "Xi;";
static const LChar XopfSemicolonEntityName[] = "Xopf;";
static const LChar XscrSemicolonEntityName[] = "Xscr;";
static const LChar YAcySemicolonEntityName[] = "YAcy;";
static const LChar YIcySemicolonEntityName[] = "YIcy;";
static const LChar YUcySemicolonEntityName[] = "YUcy;";
static const LChar YacuteEntityName[] = "Yacute";
static const LChar YacuteSemicolonEntityName[] = "Yacute;";
static const LChar YcircSemicolonEntityName[] = "Ycirc;";
static const LChar YcySemicolonEntityName[] = "Ycy;";
static const LChar YfrSemicolonEntityName[] = "Yfr;";
static const LChar YopfSemicolonEntityName[] = "Yopf;";
static const LChar YscrSemicolonEntityName[] = "Yscr;";
static const LChar YumlSemicolonEntityName[] = "Yuml;";
static const LChar ZHcySemicolonEntityName[] = "ZHcy;";
static const LChar ZacuteSemicolonEntityName[] = "Zacute;";
static const LChar ZcaronSemicolonEntityName[] = "Zcaron;";
static const LChar ZcySemicolonEntityName[] = "Zcy;";
static const LChar ZdotSemicolonEntityName[] = "Zdot;";
static const LChar ZeroWidthSpaceSemicolonEntityName[] = "ZeroWidthSpace;";
static const LChar ZetaSemicolonEntityName[] = "Zeta;";
static const LChar ZfrSemicolonEntityName[] = "Zfr;";
static const LChar ZopfSemicolonEntityName[] = "Zopf;";
static const LChar ZscrSemicolonEntityName[] = "Zscr;";
static const LChar aacuteEntityName[] = "aacute";
static const LChar aacuteSemicolonEntityName[] = "aacute;";
static const LChar abreveSemicolonEntityName[] = "abreve;";
static const LChar acSemicolonEntityName[] = "ac;";
static const LChar acESemicolonEntityName[] = "acE;";
static const LChar acdSemicolonEntityName[] = "acd;";
static const LChar acircEntityName[] = "acirc";
static const LChar acircSemicolonEntityName[] = "acirc;";
static const LChar acuteEntityName[] = "acute";
static const LChar acuteSemicolonEntityName[] = "acute;";
static const LChar acySemicolonEntityName[] = "acy;";
static const LChar aeligEntityName[] = "aelig";
static const LChar aeligSemicolonEntityName[] = "aelig;";
static const LChar afSemicolonEntityName[] = "af;";
static const LChar afrSemicolonEntityName[] = "afr;";
static const LChar agraveEntityName[] = "agrave";
static const LChar agraveSemicolonEntityName[] = "agrave;";
static const LChar alefsymSemicolonEntityName[] = "alefsym;";
static const LChar alephSemicolonEntityName[] = "aleph;";
static const LChar alphaSemicolonEntityName[] = "alpha;";
static const LChar amacrSemicolonEntityName[] = "amacr;";
static const LChar amalgSemicolonEntityName[] = "amalg;";
static const LChar ampEntityName[] = "amp";
static const LChar ampSemicolonEntityName[] = "amp;";
static const LChar andSemicolonEntityName[] = "and;";
static const LChar andandSemicolonEntityName[] = "andand;";
static const LChar anddSemicolonEntityName[] = "andd;";
static const LChar andslopeSemicolonEntityName[] = "andslope;";
static const LChar andvSemicolonEntityName[] = "andv;";
static const LChar angSemicolonEntityName[] = "ang;";
static const LChar angeSemicolonEntityName[] = "ange;";
static const LChar angleSemicolonEntityName[] = "angle;";
static const LChar angmsdSemicolonEntityName[] = "angmsd;";
static const LChar angmsdaaSemicolonEntityName[] = "angmsdaa;";
static const LChar angmsdabSemicolonEntityName[] = "angmsdab;";
static const LChar angmsdacSemicolonEntityName[] = "angmsdac;";
static const LChar angmsdadSemicolonEntityName[] = "angmsdad;";
static const LChar angmsdaeSemicolonEntityName[] = "angmsdae;";
static const LChar angmsdafSemicolonEntityName[] = "angmsdaf;";
static const LChar angmsdagSemicolonEntityName[] = "angmsdag;";
static const LChar angmsdahSemicolonEntityName[] = "angmsdah;";
static const LChar angrtSemicolonEntityName[] = "angrt;";
static const LChar angrtvbSemicolonEntityName[] = "angrtvb;";
static const LChar angrtvbdSemicolonEntityName[] = "angrtvbd;";
static const LChar angsphSemicolonEntityName[] = "angsph;";
static const LChar angstSemicolonEntityName[] = "angst;";
static const LChar angzarrSemicolonEntityName[] = "angzarr;";
static const LChar aogonSemicolonEntityName[] = "aogon;";
static const LChar aopfSemicolonEntityName[] = "aopf;";
static const LChar apSemicolonEntityName[] = "ap;";
static const LChar apESemicolonEntityName[] = "apE;";
static const LChar apacirSemicolonEntityName[] = "apacir;";
static const LChar apeSemicolonEntityName[] = "ape;";
static const LChar apidSemicolonEntityName[] = "apid;";
static const LChar aposSemicolonEntityName[] = "apos;";
static const LChar approxSemicolonEntityName[] = "approx;";
static const LChar approxeqSemicolonEntityName[] = "approxeq;";
static const LChar aringEntityName[] = "aring";
static const LChar aringSemicolonEntityName[] = "aring;";
static const LChar ascrSemicolonEntityName[] = "ascr;";
static const LChar astSemicolonEntityName[] = "ast;";
static const LChar asympSemicolonEntityName[] = "asymp;";
static const LChar asympeqSemicolonEntityName[] = "asympeq;";
static const LChar atildeEntityName[] = "atilde";
static const LChar atildeSemicolonEntityName[] = "atilde;";
static const LChar aumlEntityName[] = "auml";
static const LChar aumlSemicolonEntityName[] = "auml;";
static const LChar awconintSemicolonEntityName[] = "awconint;";
static const LChar awintSemicolonEntityName[] = "awint;";
static const LChar bNotSemicolonEntityName[] = "bNot;";
static const LChar backcongSemicolonEntityName[] = "backcong;";
static const LChar backepsilonSemicolonEntityName[] = "backepsilon;";
static const LChar backprimeSemicolonEntityName[] = "backprime;";
static const LChar backsimSemicolonEntityName[] = "backsim;";
static const LChar backsimeqSemicolonEntityName[] = "backsimeq;";
static const LChar barveeSemicolonEntityName[] = "barvee;";
static const LChar barwedSemicolonEntityName[] = "barwed;";
static const LChar barwedgeSemicolonEntityName[] = "barwedge;";
static const LChar bbrkSemicolonEntityName[] = "bbrk;";
static const LChar bbrktbrkSemicolonEntityName[] = "bbrktbrk;";
static const LChar bcongSemicolonEntityName[] = "bcong;";
static const LChar bcySemicolonEntityName[] = "bcy;";
static const LChar bdquoSemicolonEntityName[] = "bdquo;";
static const LChar becausSemicolonEntityName[] = "becaus;";
static const LChar becauseSemicolonEntityName[] = "because;";
static const LChar bemptyvSemicolonEntityName[] = "bemptyv;";
static const LChar bepsiSemicolonEntityName[] = "bepsi;";
static const LChar bernouSemicolonEntityName[] = "bernou;";
static const LChar betaSemicolonEntityName[] = "beta;";
static const LChar bethSemicolonEntityName[] = "beth;";
static const LChar betweenSemicolonEntityName[] = "between;";
static const LChar bfrSemicolonEntityName[] = "bfr;";
static const LChar bigcapSemicolonEntityName[] = "bigcap;";
static const LChar bigcircSemicolonEntityName[] = "bigcirc;";
static const LChar bigcupSemicolonEntityName[] = "bigcup;";
static const LChar bigodotSemicolonEntityName[] = "bigodot;";
static const LChar bigoplusSemicolonEntityName[] = "bigoplus;";
static const LChar bigotimesSemicolonEntityName[] = "bigotimes;";
static const LChar bigsqcupSemicolonEntityName[] = "bigsqcup;";
static const LChar bigstarSemicolonEntityName[] = "bigstar;";
static const LChar bigtriangledownSemicolonEntityName[] = "bigtriangledown;";
static const LChar bigtriangleupSemicolonEntityName[] = "bigtriangleup;";
static const LChar biguplusSemicolonEntityName[] = "biguplus;";
static const LChar bigveeSemicolonEntityName[] = "bigvee;";
static const LChar bigwedgeSemicolonEntityName[] = "bigwedge;";
static const LChar bkarowSemicolonEntityName[] = "bkarow;";
static const LChar blacklozengeSemicolonEntityName[] = "blacklozenge;";
static const LChar blacksquareSemicolonEntityName[] = "blacksquare;";
static const LChar blacktriangleSemicolonEntityName[] = "blacktriangle;";
static const LChar blacktriangledownSemicolonEntityName[] = "blacktriangledown;";
static const LChar blacktriangleleftSemicolonEntityName[] = "blacktriangleleft;";
static const LChar blacktrianglerightSemicolonEntityName[] = "blacktriangleright;";
static const LChar blankSemicolonEntityName[] = "blank;";
static const LChar blk12SemicolonEntityName[] = "blk12;";
static const LChar blk14SemicolonEntityName[] = "blk14;";
static const LChar blk34SemicolonEntityName[] = "blk34;";
static const LChar blockSemicolonEntityName[] = "block;";
static const LChar bneSemicolonEntityName[] = "bne;";
static const LChar bnequivSemicolonEntityName[] = "bnequiv;";
static const LChar bnotSemicolonEntityName[] = "bnot;";
static const LChar bopfSemicolonEntityName[] = "bopf;";
static const LChar botSemicolonEntityName[] = "bot;";
static const LChar bottomSemicolonEntityName[] = "bottom;";
static const LChar bowtieSemicolonEntityName[] = "bowtie;";
static const LChar boxDLSemicolonEntityName[] = "boxDL;";
static const LChar boxDRSemicolonEntityName[] = "boxDR;";
static const LChar boxDlSemicolonEntityName[] = "boxDl;";
static const LChar boxDrSemicolonEntityName[] = "boxDr;";
static const LChar boxHSemicolonEntityName[] = "boxH;";
static const LChar boxHDSemicolonEntityName[] = "boxHD;";
static const LChar boxHUSemicolonEntityName[] = "boxHU;";
static const LChar boxHdSemicolonEntityName[] = "boxHd;";
static const LChar boxHuSemicolonEntityName[] = "boxHu;";
static const LChar boxULSemicolonEntityName[] = "boxUL;";
static const LChar boxURSemicolonEntityName[] = "boxUR;";
static const LChar boxUlSemicolonEntityName[] = "boxUl;";
static const LChar boxUrSemicolonEntityName[] = "boxUr;";
static const LChar boxVSemicolonEntityName[] = "boxV;";
static const LChar boxVHSemicolonEntityName[] = "boxVH;";
static const LChar boxVLSemicolonEntityName[] = "boxVL;";
static const LChar boxVRSemicolonEntityName[] = "boxVR;";
static const LChar boxVhSemicolonEntityName[] = "boxVh;";
static const LChar boxVlSemicolonEntityName[] = "boxVl;";
static const LChar boxVrSemicolonEntityName[] = "boxVr;";
static const LChar boxboxSemicolonEntityName[] = "boxbox;";
static const LChar boxdLSemicolonEntityName[] = "boxdL;";
static const LChar boxdRSemicolonEntityName[] = "boxdR;";
static const LChar boxdlSemicolonEntityName[] = "boxdl;";
static const LChar boxdrSemicolonEntityName[] = "boxdr;";
static const LChar boxhSemicolonEntityName[] = "boxh;";
static const LChar boxhDSemicolonEntityName[] = "boxhD;";
static const LChar boxhUSemicolonEntityName[] = "boxhU;";
static const LChar boxhdSemicolonEntityName[] = "boxhd;";
static const LChar boxhuSemicolonEntityName[] = "boxhu;";
static const LChar boxminusSemicolonEntityName[] = "boxminus;";
static const LChar boxplusSemicolonEntityName[] = "boxplus;";
static const LChar boxtimesSemicolonEntityName[] = "boxtimes;";
static const LChar boxuLSemicolonEntityName[] = "boxuL;";
static const LChar boxuRSemicolonEntityName[] = "boxuR;";
static const LChar boxulSemicolonEntityName[] = "boxul;";
static const LChar boxurSemicolonEntityName[] = "boxur;";
static const LChar boxvSemicolonEntityName[] = "boxv;";
static const LChar boxvHSemicolonEntityName[] = "boxvH;";
static const LChar boxvLSemicolonEntityName[] = "boxvL;";
static const LChar boxvRSemicolonEntityName[] = "boxvR;";
static const LChar boxvhSemicolonEntityName[] = "boxvh;";
static const LChar boxvlSemicolonEntityName[] = "boxvl;";
static const LChar boxvrSemicolonEntityName[] = "boxvr;";
static const LChar bprimeSemicolonEntityName[] = "bprime;";
static const LChar breveSemicolonEntityName[] = "breve;";
static const LChar brvbarEntityName[] = "brvbar";
static const LChar brvbarSemicolonEntityName[] = "brvbar;";
static const LChar bscrSemicolonEntityName[] = "bscr;";
static const LChar bsemiSemicolonEntityName[] = "bsemi;";
static const LChar bsimSemicolonEntityName[] = "bsim;";
static const LChar bsimeSemicolonEntityName[] = "bsime;";
static const LChar bsolSemicolonEntityName[] = "bsol;";
static const LChar bsolbSemicolonEntityName[] = "bsolb;";
static const LChar bsolhsubSemicolonEntityName[] = "bsolhsub;";
static const LChar bullSemicolonEntityName[] = "bull;";
static const LChar bulletSemicolonEntityName[] = "bullet;";
static const LChar bumpSemicolonEntityName[] = "bump;";
static const LChar bumpESemicolonEntityName[] = "bumpE;";
static const LChar bumpeSemicolonEntityName[] = "bumpe;";
static const LChar bumpeqSemicolonEntityName[] = "bumpeq;";
static const LChar cacuteSemicolonEntityName[] = "cacute;";
static const LChar capSemicolonEntityName[] = "cap;";
static const LChar capandSemicolonEntityName[] = "capand;";
static const LChar capbrcupSemicolonEntityName[] = "capbrcup;";
static const LChar capcapSemicolonEntityName[] = "capcap;";
static const LChar capcupSemicolonEntityName[] = "capcup;";
static const LChar capdotSemicolonEntityName[] = "capdot;";
static const LChar capsSemicolonEntityName[] = "caps;";
static const LChar caretSemicolonEntityName[] = "caret;";
static const LChar caronSemicolonEntityName[] = "caron;";
static const LChar ccapsSemicolonEntityName[] = "ccaps;";
static const LChar ccaronSemicolonEntityName[] = "ccaron;";
static const LChar ccedilEntityName[] = "ccedil";
static const LChar ccedilSemicolonEntityName[] = "ccedil;";
static const LChar ccircSemicolonEntityName[] = "ccirc;";
static const LChar ccupsSemicolonEntityName[] = "ccups;";
static const LChar ccupssmSemicolonEntityName[] = "ccupssm;";
static const LChar cdotSemicolonEntityName[] = "cdot;";
static const LChar cedilEntityName[] = "cedil";
static const LChar cedilSemicolonEntityName[] = "cedil;";
static const LChar cemptyvSemicolonEntityName[] = "cemptyv;";
static const LChar centEntityName[] = "cent";
static const LChar centSemicolonEntityName[] = "cent;";
static const LChar centerdotSemicolonEntityName[] = "centerdot;";
static const LChar cfrSemicolonEntityName[] = "cfr;";
static const LChar chcySemicolonEntityName[] = "chcy;";
static const LChar checkSemicolonEntityName[] = "check;";
static const LChar checkmarkSemicolonEntityName[] = "checkmark;";
static const LChar chiSemicolonEntityName[] = "chi;";
static const LChar cirSemicolonEntityName[] = "cir;";
static const LChar cirESemicolonEntityName[] = "cirE;";
static const LChar circSemicolonEntityName[] = "circ;";
static const LChar circeqSemicolonEntityName[] = "circeq;";
static const LChar circlearrowleftSemicolonEntityName[] = "circlearrowleft;";
static const LChar circlearrowrightSemicolonEntityName[] = "circlearrowright;";
static const LChar circledRSemicolonEntityName[] = "circledR;";
static const LChar circledSSemicolonEntityName[] = "circledS;";
static const LChar circledastSemicolonEntityName[] = "circledast;";
static const LChar circledcircSemicolonEntityName[] = "circledcirc;";
static const LChar circleddashSemicolonEntityName[] = "circleddash;";
static const LChar cireSemicolonEntityName[] = "cire;";
static const LChar cirfnintSemicolonEntityName[] = "cirfnint;";
static const LChar cirmidSemicolonEntityName[] = "cirmid;";
static const LChar cirscirSemicolonEntityName[] = "cirscir;";
static const LChar clubsSemicolonEntityName[] = "clubs;";
static const LChar clubsuitSemicolonEntityName[] = "clubsuit;";
static const LChar colonSemicolonEntityName[] = "colon;";
static const LChar coloneSemicolonEntityName[] = "colone;";
static const LChar coloneqSemicolonEntityName[] = "coloneq;";
static const LChar commaSemicolonEntityName[] = "comma;";
static const LChar commatSemicolonEntityName[] = "commat;";
static const LChar compSemicolonEntityName[] = "comp;";
static const LChar compfnSemicolonEntityName[] = "compfn;";
static const LChar complementSemicolonEntityName[] = "complement;";
static const LChar complexesSemicolonEntityName[] = "complexes;";
static const LChar congSemicolonEntityName[] = "cong;";
static const LChar congdotSemicolonEntityName[] = "congdot;";
static const LChar conintSemicolonEntityName[] = "conint;";
static const LChar copfSemicolonEntityName[] = "copf;";
static const LChar coprodSemicolonEntityName[] = "coprod;";
static const LChar copyEntityName[] = "copy";
static const LChar copySemicolonEntityName[] = "copy;";
static const LChar copysrSemicolonEntityName[] = "copysr;";
static const LChar crarrSemicolonEntityName[] = "crarr;";
static const LChar crossSemicolonEntityName[] = "cross;";
static const LChar cscrSemicolonEntityName[] = "cscr;";
static const LChar csubSemicolonEntityName[] = "csub;";
static const LChar csubeSemicolonEntityName[] = "csube;";
static const LChar csupSemicolonEntityName[] = "csup;";
static const LChar csupeSemicolonEntityName[] = "csupe;";
static const LChar ctdotSemicolonEntityName[] = "ctdot;";
static const LChar cudarrlSemicolonEntityName[] = "cudarrl;";
static const LChar cudarrrSemicolonEntityName[] = "cudarrr;";
static const LChar cueprSemicolonEntityName[] = "cuepr;";
static const LChar cuescSemicolonEntityName[] = "cuesc;";
static const LChar cularrSemicolonEntityName[] = "cularr;";
static const LChar cularrpSemicolonEntityName[] = "cularrp;";
static const LChar cupSemicolonEntityName[] = "cup;";
static const LChar cupbrcapSemicolonEntityName[] = "cupbrcap;";
static const LChar cupcapSemicolonEntityName[] = "cupcap;";
static const LChar cupcupSemicolonEntityName[] = "cupcup;";
static const LChar cupdotSemicolonEntityName[] = "cupdot;";
static const LChar cuporSemicolonEntityName[] = "cupor;";
static const LChar cupsSemicolonEntityName[] = "cups;";
static const LChar curarrSemicolonEntityName[] = "curarr;";
static const LChar curarrmSemicolonEntityName[] = "curarrm;";
static const LChar curlyeqprecSemicolonEntityName[] = "curlyeqprec;";
static const LChar curlyeqsuccSemicolonEntityName[] = "curlyeqsucc;";
static const LChar curlyveeSemicolonEntityName[] = "curlyvee;";
static const LChar curlywedgeSemicolonEntityName[] = "curlywedge;";
static const LChar currenEntityName[] = "curren";
static const LChar currenSemicolonEntityName[] = "curren;";
static const LChar curvearrowleftSemicolonEntityName[] = "curvearrowleft;";
static const LChar curvearrowrightSemicolonEntityName[] = "curvearrowright;";
static const LChar cuveeSemicolonEntityName[] = "cuvee;";
static const LChar cuwedSemicolonEntityName[] = "cuwed;";
static const LChar cwconintSemicolonEntityName[] = "cwconint;";
static const LChar cwintSemicolonEntityName[] = "cwint;";
static const LChar cylctySemicolonEntityName[] = "cylcty;";
static const LChar dArrSemicolonEntityName[] = "dArr;";
static const LChar dHarSemicolonEntityName[] = "dHar;";
static const LChar daggerSemicolonEntityName[] = "dagger;";
static const LChar dalethSemicolonEntityName[] = "daleth;";
static const LChar darrSemicolonEntityName[] = "darr;";
static const LChar dashSemicolonEntityName[] = "dash;";
static const LChar dashvSemicolonEntityName[] = "dashv;";
static const LChar dbkarowSemicolonEntityName[] = "dbkarow;";
static const LChar dblacSemicolonEntityName[] = "dblac;";
static const LChar dcaronSemicolonEntityName[] = "dcaron;";
static const LChar dcySemicolonEntityName[] = "dcy;";
static const LChar ddSemicolonEntityName[] = "dd;";
static const LChar ddaggerSemicolonEntityName[] = "ddagger;";
static const LChar ddarrSemicolonEntityName[] = "ddarr;";
static const LChar ddotseqSemicolonEntityName[] = "ddotseq;";
static const LChar degEntityName[] = "deg";
static const LChar degSemicolonEntityName[] = "deg;";
static const LChar deltaSemicolonEntityName[] = "delta;";
static const LChar demptyvSemicolonEntityName[] = "demptyv;";
static const LChar dfishtSemicolonEntityName[] = "dfisht;";
static const LChar dfrSemicolonEntityName[] = "dfr;";
static const LChar dharlSemicolonEntityName[] = "dharl;";
static const LChar dharrSemicolonEntityName[] = "dharr;";
static const LChar diamSemicolonEntityName[] = "diam;";
static const LChar diamondSemicolonEntityName[] = "diamond;";
static const LChar diamondsuitSemicolonEntityName[] = "diamondsuit;";
static const LChar diamsSemicolonEntityName[] = "diams;";
static const LChar dieSemicolonEntityName[] = "die;";
static const LChar digammaSemicolonEntityName[] = "digamma;";
static const LChar disinSemicolonEntityName[] = "disin;";
static const LChar divSemicolonEntityName[] = "div;";
static const LChar divideEntityName[] = "divide";
static const LChar divideSemicolonEntityName[] = "divide;";
static const LChar divideontimesSemicolonEntityName[] = "divideontimes;";
static const LChar divonxSemicolonEntityName[] = "divonx;";
static const LChar djcySemicolonEntityName[] = "djcy;";
static const LChar dlcornSemicolonEntityName[] = "dlcorn;";
static const LChar dlcropSemicolonEntityName[] = "dlcrop;";
static const LChar dollarSemicolonEntityName[] = "dollar;";
static const LChar dopfSemicolonEntityName[] = "dopf;";
static const LChar dotSemicolonEntityName[] = "dot;";
static const LChar doteqSemicolonEntityName[] = "doteq;";
static const LChar doteqdotSemicolonEntityName[] = "doteqdot;";
static const LChar dotminusSemicolonEntityName[] = "dotminus;";
static const LChar dotplusSemicolonEntityName[] = "dotplus;";
static const LChar dotsquareSemicolonEntityName[] = "dotsquare;";
static const LChar doublebarwedgeSemicolonEntityName[] = "doublebarwedge;";
static const LChar downarrowSemicolonEntityName[] = "downarrow;";
static const LChar downdownarrowsSemicolonEntityName[] = "downdownarrows;";
static const LChar downharpoonleftSemicolonEntityName[] = "downharpoonleft;";
static const LChar downharpoonrightSemicolonEntityName[] = "downharpoonright;";
static const LChar drbkarowSemicolonEntityName[] = "drbkarow;";
static const LChar drcornSemicolonEntityName[] = "drcorn;";
static const LChar drcropSemicolonEntityName[] = "drcrop;";
static const LChar dscrSemicolonEntityName[] = "dscr;";
static const LChar dscySemicolonEntityName[] = "dscy;";
static const LChar dsolSemicolonEntityName[] = "dsol;";
static const LChar dstrokSemicolonEntityName[] = "dstrok;";
static const LChar dtdotSemicolonEntityName[] = "dtdot;";
static const LChar dtriSemicolonEntityName[] = "dtri;";
static const LChar dtrifSemicolonEntityName[] = "dtrif;";
static const LChar duarrSemicolonEntityName[] = "duarr;";
static const LChar duharSemicolonEntityName[] = "duhar;";
static const LChar dwangleSemicolonEntityName[] = "dwangle;";
static const LChar dzcySemicolonEntityName[] = "dzcy;";
static const LChar dzigrarrSemicolonEntityName[] = "dzigrarr;";
static const LChar eDDotSemicolonEntityName[] = "eDDot;";
static const LChar eDotSemicolonEntityName[] = "eDot;";
static const LChar eacuteEntityName[] = "eacute";
static const LChar eacuteSemicolonEntityName[] = "eacute;";
static const LChar easterSemicolonEntityName[] = "easter;";
static const LChar ecaronSemicolonEntityName[] = "ecaron;";
static const LChar ecirSemicolonEntityName[] = "ecir;";
static const LChar ecircEntityName[] = "ecirc";
static const LChar ecircSemicolonEntityName[] = "ecirc;";
static const LChar ecolonSemicolonEntityName[] = "ecolon;";
static const LChar ecySemicolonEntityName[] = "ecy;";
static const LChar edotSemicolonEntityName[] = "edot;";
static const LChar eeSemicolonEntityName[] = "ee;";
static const LChar efDotSemicolonEntityName[] = "efDot;";
static const LChar efrSemicolonEntityName[] = "efr;";
static const LChar egSemicolonEntityName[] = "eg;";
static const LChar egraveEntityName[] = "egrave";
static const LChar egraveSemicolonEntityName[] = "egrave;";
static const LChar egsSemicolonEntityName[] = "egs;";
static const LChar egsdotSemicolonEntityName[] = "egsdot;";
static const LChar elSemicolonEntityName[] = "el;";
static const LChar elintersSemicolonEntityName[] = "elinters;";
static const LChar ellSemicolonEntityName[] = "ell;";
static const LChar elsSemicolonEntityName[] = "els;";
static const LChar elsdotSemicolonEntityName[] = "elsdot;";
static const LChar emacrSemicolonEntityName[] = "emacr;";
static const LChar emptySemicolonEntityName[] = "empty;";
static const LChar emptysetSemicolonEntityName[] = "emptyset;";
static const LChar emptyvSemicolonEntityName[] = "emptyv;";
static const LChar emsp13SemicolonEntityName[] = "emsp13;";
static const LChar emsp14SemicolonEntityName[] = "emsp14;";
static const LChar emspSemicolonEntityName[] = "emsp;";
static const LChar engSemicolonEntityName[] = "eng;";
static const LChar enspSemicolonEntityName[] = "ensp;";
static const LChar eogonSemicolonEntityName[] = "eogon;";
static const LChar eopfSemicolonEntityName[] = "eopf;";
static const LChar eparSemicolonEntityName[] = "epar;";
static const LChar eparslSemicolonEntityName[] = "eparsl;";
static const LChar eplusSemicolonEntityName[] = "eplus;";
static const LChar epsiSemicolonEntityName[] = "epsi;";
static const LChar epsilonSemicolonEntityName[] = "epsilon;";
static const LChar epsivSemicolonEntityName[] = "epsiv;";
static const LChar eqcircSemicolonEntityName[] = "eqcirc;";
static const LChar eqcolonSemicolonEntityName[] = "eqcolon;";
static const LChar eqsimSemicolonEntityName[] = "eqsim;";
static const LChar eqslantgtrSemicolonEntityName[] = "eqslantgtr;";
static const LChar eqslantlessSemicolonEntityName[] = "eqslantless;";
static const LChar equalsSemicolonEntityName[] = "equals;";
static const LChar equestSemicolonEntityName[] = "equest;";
static const LChar equivSemicolonEntityName[] = "equiv;";
static const LChar equivDDSemicolonEntityName[] = "equivDD;";
static const LChar eqvparslSemicolonEntityName[] = "eqvparsl;";
static const LChar erDotSemicolonEntityName[] = "erDot;";
static const LChar erarrSemicolonEntityName[] = "erarr;";
static const LChar escrSemicolonEntityName[] = "escr;";
static const LChar esdotSemicolonEntityName[] = "esdot;";
static const LChar esimSemicolonEntityName[] = "esim;";
static const LChar etaSemicolonEntityName[] = "eta;";
static const LChar ethEntityName[] = "eth";
static const LChar ethSemicolonEntityName[] = "eth;";
static const LChar eumlEntityName[] = "euml";
static const LChar eumlSemicolonEntityName[] = "euml;";
static const LChar euroSemicolonEntityName[] = "euro;";
static const LChar exclSemicolonEntityName[] = "excl;";
static const LChar existSemicolonEntityName[] = "exist;";
static const LChar expectationSemicolonEntityName[] = "expectation;";
static const LChar exponentialeSemicolonEntityName[] = "exponentiale;";
static const LChar fallingdotseqSemicolonEntityName[] = "fallingdotseq;";
static const LChar fcySemicolonEntityName[] = "fcy;";
static const LChar femaleSemicolonEntityName[] = "female;";
static const LChar ffiligSemicolonEntityName[] = "ffilig;";
static const LChar ffligSemicolonEntityName[] = "fflig;";
static const LChar fflligSemicolonEntityName[] = "ffllig;";
static const LChar ffrSemicolonEntityName[] = "ffr;";
static const LChar filigSemicolonEntityName[] = "filig;";
static const LChar fjligSemicolonEntityName[] = "fjlig;";
static const LChar flatSemicolonEntityName[] = "flat;";
static const LChar flligSemicolonEntityName[] = "fllig;";
static const LChar fltnsSemicolonEntityName[] = "fltns;";
static const LChar fnofSemicolonEntityName[] = "fnof;";
static const LChar fopfSemicolonEntityName[] = "fopf;";
static const LChar forallSemicolonEntityName[] = "forall;";
static const LChar forkSemicolonEntityName[] = "fork;";
static const LChar forkvSemicolonEntityName[] = "forkv;";
static const LChar fpartintSemicolonEntityName[] = "fpartint;";
static const LChar frac12EntityName[] = "frac12";
static const LChar frac12SemicolonEntityName[] = "frac12;";
static const LChar frac13SemicolonEntityName[] = "frac13;";
static const LChar frac14EntityName[] = "frac14";
static const LChar frac14SemicolonEntityName[] = "frac14;";
static const LChar frac15SemicolonEntityName[] = "frac15;";
static const LChar frac16SemicolonEntityName[] = "frac16;";
static const LChar frac18SemicolonEntityName[] = "frac18;";
static const LChar frac23SemicolonEntityName[] = "frac23;";
static const LChar frac25SemicolonEntityName[] = "frac25;";
static const LChar frac34EntityName[] = "frac34";
static const LChar frac34SemicolonEntityName[] = "frac34;";
static const LChar frac35SemicolonEntityName[] = "frac35;";
static const LChar frac38SemicolonEntityName[] = "frac38;";
static const LChar frac45SemicolonEntityName[] = "frac45;";
static const LChar frac56SemicolonEntityName[] = "frac56;";
static const LChar frac58SemicolonEntityName[] = "frac58;";
static const LChar frac78SemicolonEntityName[] = "frac78;";
static const LChar fraslSemicolonEntityName[] = "frasl;";
static const LChar frownSemicolonEntityName[] = "frown;";
static const LChar fscrSemicolonEntityName[] = "fscr;";
static const LChar gESemicolonEntityName[] = "gE;";
static const LChar gElSemicolonEntityName[] = "gEl;";
static const LChar gacuteSemicolonEntityName[] = "gacute;";
static const LChar gammaSemicolonEntityName[] = "gamma;";
static const LChar gammadSemicolonEntityName[] = "gammad;";
static const LChar gapSemicolonEntityName[] = "gap;";
static const LChar gbreveSemicolonEntityName[] = "gbreve;";
static const LChar gcircSemicolonEntityName[] = "gcirc;";
static const LChar gcySemicolonEntityName[] = "gcy;";
static const LChar gdotSemicolonEntityName[] = "gdot;";
static const LChar geSemicolonEntityName[] = "ge;";
static const LChar gelSemicolonEntityName[] = "gel;";
static const LChar geqSemicolonEntityName[] = "geq;";
static const LChar geqqSemicolonEntityName[] = "geqq;";
static const LChar geqslantSemicolonEntityName[] = "geqslant;";
static const LChar gesSemicolonEntityName[] = "ges;";
static const LChar gesccSemicolonEntityName[] = "gescc;";
static const LChar gesdotSemicolonEntityName[] = "gesdot;";
static const LChar gesdotoSemicolonEntityName[] = "gesdoto;";
static const LChar gesdotolSemicolonEntityName[] = "gesdotol;";
static const LChar geslSemicolonEntityName[] = "gesl;";
static const LChar geslesSemicolonEntityName[] = "gesles;";
static const LChar gfrSemicolonEntityName[] = "gfr;";
static const LChar ggSemicolonEntityName[] = "gg;";
static const LChar gggSemicolonEntityName[] = "ggg;";
static const LChar gimelSemicolonEntityName[] = "gimel;";
static const LChar gjcySemicolonEntityName[] = "gjcy;";
static const LChar glSemicolonEntityName[] = "gl;";
static const LChar glESemicolonEntityName[] = "glE;";
static const LChar glaSemicolonEntityName[] = "gla;";
static const LChar gljSemicolonEntityName[] = "glj;";
static const LChar gnESemicolonEntityName[] = "gnE;";
static const LChar gnapSemicolonEntityName[] = "gnap;";
static const LChar gnapproxSemicolonEntityName[] = "gnapprox;";
static const LChar gneSemicolonEntityName[] = "gne;";
static const LChar gneqSemicolonEntityName[] = "gneq;";
static const LChar gneqqSemicolonEntityName[] = "gneqq;";
static const LChar gnsimSemicolonEntityName[] = "gnsim;";
static const LChar gopfSemicolonEntityName[] = "gopf;";
static const LChar graveSemicolonEntityName[] = "grave;";
static const LChar gscrSemicolonEntityName[] = "gscr;";
static const LChar gsimSemicolonEntityName[] = "gsim;";
static const LChar gsimeSemicolonEntityName[] = "gsime;";
static const LChar gsimlSemicolonEntityName[] = "gsiml;";
static const LChar gtEntityName[] = "gt";
static const LChar gtSemicolonEntityName[] = "gt;";
static const LChar gtccSemicolonEntityName[] = "gtcc;";
static const LChar gtcirSemicolonEntityName[] = "gtcir;";
static const LChar gtdotSemicolonEntityName[] = "gtdot;";
static const LChar gtlParSemicolonEntityName[] = "gtlPar;";
static const LChar gtquestSemicolonEntityName[] = "gtquest;";
static const LChar gtrapproxSemicolonEntityName[] = "gtrapprox;";
static const LChar gtrarrSemicolonEntityName[] = "gtrarr;";
static const LChar gtrdotSemicolonEntityName[] = "gtrdot;";
static const LChar gtreqlessSemicolonEntityName[] = "gtreqless;";
static const LChar gtreqqlessSemicolonEntityName[] = "gtreqqless;";
static const LChar gtrlessSemicolonEntityName[] = "gtrless;";
static const LChar gtrsimSemicolonEntityName[] = "gtrsim;";
static const LChar gvertneqqSemicolonEntityName[] = "gvertneqq;";
static const LChar gvnESemicolonEntityName[] = "gvnE;";
static const LChar hArrSemicolonEntityName[] = "hArr;";
static const LChar hairspSemicolonEntityName[] = "hairsp;";
static const LChar halfSemicolonEntityName[] = "half;";
static const LChar hamiltSemicolonEntityName[] = "hamilt;";
static const LChar hardcySemicolonEntityName[] = "hardcy;";
static const LChar harrSemicolonEntityName[] = "harr;";
static const LChar harrcirSemicolonEntityName[] = "harrcir;";
static const LChar harrwSemicolonEntityName[] = "harrw;";
static const LChar hbarSemicolonEntityName[] = "hbar;";
static const LChar hcircSemicolonEntityName[] = "hcirc;";
static const LChar heartsSemicolonEntityName[] = "hearts;";
static const LChar heartsuitSemicolonEntityName[] = "heartsuit;";
static const LChar hellipSemicolonEntityName[] = "hellip;";
static const LChar herconSemicolonEntityName[] = "hercon;";
static const LChar hfrSemicolonEntityName[] = "hfr;";
static const LChar hksearowSemicolonEntityName[] = "hksearow;";
static const LChar hkswarowSemicolonEntityName[] = "hkswarow;";
static const LChar hoarrSemicolonEntityName[] = "hoarr;";
static const LChar homthtSemicolonEntityName[] = "homtht;";
static const LChar hookleftarrowSemicolonEntityName[] = "hookleftarrow;";
static const LChar hookrightarrowSemicolonEntityName[] = "hookrightarrow;";
static const LChar hopfSemicolonEntityName[] = "hopf;";
static const LChar horbarSemicolonEntityName[] = "horbar;";
static const LChar hscrSemicolonEntityName[] = "hscr;";
static const LChar hslashSemicolonEntityName[] = "hslash;";
static const LChar hstrokSemicolonEntityName[] = "hstrok;";
static const LChar hybullSemicolonEntityName[] = "hybull;";
static const LChar hyphenSemicolonEntityName[] = "hyphen;";
static const LChar iacuteEntityName[] = "iacute";
static const LChar iacuteSemicolonEntityName[] = "iacute;";
static const LChar icSemicolonEntityName[] = "ic;";
static const LChar icircEntityName[] = "icirc";
static const LChar icircSemicolonEntityName[] = "icirc;";
static const LChar icySemicolonEntityName[] = "icy;";
static const LChar iecySemicolonEntityName[] = "iecy;";
static const LChar iexclEntityName[] = "iexcl";
static const LChar iexclSemicolonEntityName[] = "iexcl;";
static const LChar iffSemicolonEntityName[] = "iff;";
static const LChar ifrSemicolonEntityName[] = "ifr;";
static const LChar igraveEntityName[] = "igrave";
static const LChar igraveSemicolonEntityName[] = "igrave;";
static const LChar iiSemicolonEntityName[] = "ii;";
static const LChar iiiintSemicolonEntityName[] = "iiiint;";
static const LChar iiintSemicolonEntityName[] = "iiint;";
static const LChar iinfinSemicolonEntityName[] = "iinfin;";
static const LChar iiotaSemicolonEntityName[] = "iiota;";
static const LChar ijligSemicolonEntityName[] = "ijlig;";
static const LChar imacrSemicolonEntityName[] = "imacr;";
static const LChar imageSemicolonEntityName[] = "image;";
static const LChar imaglineSemicolonEntityName[] = "imagline;";
static const LChar imagpartSemicolonEntityName[] = "imagpart;";
static const LChar imathSemicolonEntityName[] = "imath;";
static const LChar imofSemicolonEntityName[] = "imof;";
static const LChar impedSemicolonEntityName[] = "imped;";
static const LChar inSemicolonEntityName[] = "in;";
static const LChar incareSemicolonEntityName[] = "incare;";
static const LChar infinSemicolonEntityName[] = "infin;";
static const LChar infintieSemicolonEntityName[] = "infintie;";
static const LChar inodotSemicolonEntityName[] = "inodot;";
static const LChar intSemicolonEntityName[] = "int;";
static const LChar intcalSemicolonEntityName[] = "intcal;";
static const LChar integersSemicolonEntityName[] = "integers;";
static const LChar intercalSemicolonEntityName[] = "intercal;";
static const LChar intlarhkSemicolonEntityName[] = "intlarhk;";
static const LChar intprodSemicolonEntityName[] = "intprod;";
static const LChar iocySemicolonEntityName[] = "iocy;";
static const LChar iogonSemicolonEntityName[] = "iogon;";
static const LChar iopfSemicolonEntityName[] = "iopf;";
static const LChar iotaSemicolonEntityName[] = "iota;";
static const LChar iprodSemicolonEntityName[] = "iprod;";
static const LChar iquestEntityName[] = "iquest";
static const LChar iquestSemicolonEntityName[] = "iquest;";
static const LChar iscrSemicolonEntityName[] = "iscr;";
static const LChar isinSemicolonEntityName[] = "isin;";
static const LChar isinESemicolonEntityName[] = "isinE;";
static const LChar isindotSemicolonEntityName[] = "isindot;";
static const LChar isinsSemicolonEntityName[] = "isins;";
static const LChar isinsvSemicolonEntityName[] = "isinsv;";
static const LChar isinvSemicolonEntityName[] = "isinv;";
static const LChar itSemicolonEntityName[] = "it;";
static const LChar itildeSemicolonEntityName[] = "itilde;";
static const LChar iukcySemicolonEntityName[] = "iukcy;";
static const LChar iumlEntityName[] = "iuml";
static const LChar iumlSemicolonEntityName[] = "iuml;";
static const LChar jcircSemicolonEntityName[] = "jcirc;";
static const LChar jcySemicolonEntityName[] = "jcy;";
static const LChar jfrSemicolonEntityName[] = "jfr;";
static const LChar jmathSemicolonEntityName[] = "jmath;";
static const LChar jopfSemicolonEntityName[] = "jopf;";
static const LChar jscrSemicolonEntityName[] = "jscr;";
static const LChar jsercySemicolonEntityName[] = "jsercy;";
static const LChar jukcySemicolonEntityName[] = "jukcy;";
static const LChar kappaSemicolonEntityName[] = "kappa;";
static const LChar kappavSemicolonEntityName[] = "kappav;";
static const LChar kcedilSemicolonEntityName[] = "kcedil;";
static const LChar kcySemicolonEntityName[] = "kcy;";
static const LChar kfrSemicolonEntityName[] = "kfr;";
static const LChar kgreenSemicolonEntityName[] = "kgreen;";
static const LChar khcySemicolonEntityName[] = "khcy;";
static const LChar kjcySemicolonEntityName[] = "kjcy;";
static const LChar kopfSemicolonEntityName[] = "kopf;";
static const LChar kscrSemicolonEntityName[] = "kscr;";
static const LChar lAarrSemicolonEntityName[] = "lAarr;";
static const LChar lArrSemicolonEntityName[] = "lArr;";
static const LChar lAtailSemicolonEntityName[] = "lAtail;";
static const LChar lBarrSemicolonEntityName[] = "lBarr;";
static const LChar lESemicolonEntityName[] = "lE;";
static const LChar lEgSemicolonEntityName[] = "lEg;";
static const LChar lHarSemicolonEntityName[] = "lHar;";
static const LChar lacuteSemicolonEntityName[] = "lacute;";
static const LChar laemptyvSemicolonEntityName[] = "laemptyv;";
static const LChar lagranSemicolonEntityName[] = "lagran;";
static const LChar lambdaSemicolonEntityName[] = "lambda;";
static const LChar langSemicolonEntityName[] = "lang;";
static const LChar langdSemicolonEntityName[] = "langd;";
static const LChar langleSemicolonEntityName[] = "langle;";
static const LChar lapSemicolonEntityName[] = "lap;";
static const LChar laquoEntityName[] = "laquo";
static const LChar laquoSemicolonEntityName[] = "laquo;";
static const LChar larrSemicolonEntityName[] = "larr;";
static const LChar larrbSemicolonEntityName[] = "larrb;";
static const LChar larrbfsSemicolonEntityName[] = "larrbfs;";
static const LChar larrfsSemicolonEntityName[] = "larrfs;";
static const LChar larrhkSemicolonEntityName[] = "larrhk;";
static const LChar larrlpSemicolonEntityName[] = "larrlp;";
static const LChar larrplSemicolonEntityName[] = "larrpl;";
static const LChar larrsimSemicolonEntityName[] = "larrsim;";
static const LChar larrtlSemicolonEntityName[] = "larrtl;";
static const LChar latSemicolonEntityName[] = "lat;";
static const LChar latailSemicolonEntityName[] = "latail;";
static const LChar lateSemicolonEntityName[] = "late;";
static const LChar latesSemicolonEntityName[] = "lates;";
static const LChar lbarrSemicolonEntityName[] = "lbarr;";
static const LChar lbbrkSemicolonEntityName[] = "lbbrk;";
static const LChar lbraceSemicolonEntityName[] = "lbrace;";
static const LChar lbrackSemicolonEntityName[] = "lbrack;";
static const LChar lbrkeSemicolonEntityName[] = "lbrke;";
static const LChar lbrksldSemicolonEntityName[] = "lbrksld;";
static const LChar lbrksluSemicolonEntityName[] = "lbrkslu;";
static const LChar lcaronSemicolonEntityName[] = "lcaron;";
static const LChar lcedilSemicolonEntityName[] = "lcedil;";
static const LChar lceilSemicolonEntityName[] = "lceil;";
static const LChar lcubSemicolonEntityName[] = "lcub;";
static const LChar lcySemicolonEntityName[] = "lcy;";
static const LChar ldcaSemicolonEntityName[] = "ldca;";
static const LChar ldquoSemicolonEntityName[] = "ldquo;";
static const LChar ldquorSemicolonEntityName[] = "ldquor;";
static const LChar ldrdharSemicolonEntityName[] = "ldrdhar;";
static const LChar ldrusharSemicolonEntityName[] = "ldrushar;";
static const LChar ldshSemicolonEntityName[] = "ldsh;";
static const LChar leSemicolonEntityName[] = "le;";
static const LChar leftarrowSemicolonEntityName[] = "leftarrow;";
static const LChar leftarrowtailSemicolonEntityName[] = "leftarrowtail;";
static const LChar leftharpoondownSemicolonEntityName[] = "leftharpoondown;";
static const LChar leftharpoonupSemicolonEntityName[] = "leftharpoonup;";
static const LChar leftleftarrowsSemicolonEntityName[] = "leftleftarrows;";
static const LChar leftrightarrowSemicolonEntityName[] = "leftrightarrow;";
static const LChar leftrightarrowsSemicolonEntityName[] = "leftrightarrows;";
static const LChar leftrightharpoonsSemicolonEntityName[] = "leftrightharpoons;";
static const LChar leftrightsquigarrowSemicolonEntityName[] = "leftrightsquigarrow;";
static const LChar leftthreetimesSemicolonEntityName[] = "leftthreetimes;";
static const LChar legSemicolonEntityName[] = "leg;";
static const LChar leqSemicolonEntityName[] = "leq;";
static const LChar leqqSemicolonEntityName[] = "leqq;";
static const LChar leqslantSemicolonEntityName[] = "leqslant;";
static const LChar lesSemicolonEntityName[] = "les;";
static const LChar lesccSemicolonEntityName[] = "lescc;";
static const LChar lesdotSemicolonEntityName[] = "lesdot;";
static const LChar lesdotoSemicolonEntityName[] = "lesdoto;";
static const LChar lesdotorSemicolonEntityName[] = "lesdotor;";
static const LChar lesgSemicolonEntityName[] = "lesg;";
static const LChar lesgesSemicolonEntityName[] = "lesges;";
static const LChar lessapproxSemicolonEntityName[] = "lessapprox;";
static const LChar lessdotSemicolonEntityName[] = "lessdot;";
static const LChar lesseqgtrSemicolonEntityName[] = "lesseqgtr;";
static const LChar lesseqqgtrSemicolonEntityName[] = "lesseqqgtr;";
static const LChar lessgtrSemicolonEntityName[] = "lessgtr;";
static const LChar lesssimSemicolonEntityName[] = "lesssim;";
static const LChar lfishtSemicolonEntityName[] = "lfisht;";
static const LChar lfloorSemicolonEntityName[] = "lfloor;";
static const LChar lfrSemicolonEntityName[] = "lfr;";
static const LChar lgSemicolonEntityName[] = "lg;";
static const LChar lgESemicolonEntityName[] = "lgE;";
static const LChar lhardSemicolonEntityName[] = "lhard;";
static const LChar lharuSemicolonEntityName[] = "lharu;";
static const LChar lharulSemicolonEntityName[] = "lharul;";
static const LChar lhblkSemicolonEntityName[] = "lhblk;";
static const LChar ljcySemicolonEntityName[] = "ljcy;";
static const LChar llSemicolonEntityName[] = "ll;";
static const LChar llarrSemicolonEntityName[] = "llarr;";
static const LChar llcornerSemicolonEntityName[] = "llcorner;";
static const LChar llhardSemicolonEntityName[] = "llhard;";
static const LChar lltriSemicolonEntityName[] = "lltri;";
static const LChar lmidotSemicolonEntityName[] = "lmidot;";
static const LChar lmoustSemicolonEntityName[] = "lmoust;";
static const LChar lmoustacheSemicolonEntityName[] = "lmoustache;";
static const LChar lnESemicolonEntityName[] = "lnE;";
static const LChar lnapSemicolonEntityName[] = "lnap;";
static const LChar lnapproxSemicolonEntityName[] = "lnapprox;";
static const LChar lneSemicolonEntityName[] = "lne;";
static const LChar lneqSemicolonEntityName[] = "lneq;";
static const LChar lneqqSemicolonEntityName[] = "lneqq;";
static const LChar lnsimSemicolonEntityName[] = "lnsim;";
static const LChar loangSemicolonEntityName[] = "loang;";
static const LChar loarrSemicolonEntityName[] = "loarr;";
static const LChar lobrkSemicolonEntityName[] = "lobrk;";
static const LChar longleftarrowSemicolonEntityName[] = "longleftarrow;";
static const LChar longleftrightarrowSemicolonEntityName[] = "longleftrightarrow;";
static const LChar longmapstoSemicolonEntityName[] = "longmapsto;";
static const LChar longrightarrowSemicolonEntityName[] = "longrightarrow;";
static const LChar looparrowleftSemicolonEntityName[] = "looparrowleft;";
static const LChar looparrowrightSemicolonEntityName[] = "looparrowright;";
static const LChar loparSemicolonEntityName[] = "lopar;";
static const LChar lopfSemicolonEntityName[] = "lopf;";
static const LChar loplusSemicolonEntityName[] = "loplus;";
static const LChar lotimesSemicolonEntityName[] = "lotimes;";
static const LChar lowastSemicolonEntityName[] = "lowast;";
static const LChar lowbarSemicolonEntityName[] = "lowbar;";
static const LChar lozSemicolonEntityName[] = "loz;";
static const LChar lozengeSemicolonEntityName[] = "lozenge;";
static const LChar lozfSemicolonEntityName[] = "lozf;";
static const LChar lparSemicolonEntityName[] = "lpar;";
static const LChar lparltSemicolonEntityName[] = "lparlt;";
static const LChar lrarrSemicolonEntityName[] = "lrarr;";
static const LChar lrcornerSemicolonEntityName[] = "lrcorner;";
static const LChar lrharSemicolonEntityName[] = "lrhar;";
static const LChar lrhardSemicolonEntityName[] = "lrhard;";
static const LChar lrmSemicolonEntityName[] = "lrm;";
static const LChar lrtriSemicolonEntityName[] = "lrtri;";
static const LChar lsaquoSemicolonEntityName[] = "lsaquo;";
static const LChar lscrSemicolonEntityName[] = "lscr;";
static const LChar lshSemicolonEntityName[] = "lsh;";
static const LChar lsimSemicolonEntityName[] = "lsim;";
static const LChar lsimeSemicolonEntityName[] = "lsime;";
static const LChar lsimgSemicolonEntityName[] = "lsimg;";
static const LChar lsqbSemicolonEntityName[] = "lsqb;";
static const LChar lsquoSemicolonEntityName[] = "lsquo;";
static const LChar lsquorSemicolonEntityName[] = "lsquor;";
static const LChar lstrokSemicolonEntityName[] = "lstrok;";
static const LChar ltEntityName[] = "lt";
static const LChar ltSemicolonEntityName[] = "lt;";
static const LChar ltccSemicolonEntityName[] = "ltcc;";
static const LChar ltcirSemicolonEntityName[] = "ltcir;";
static const LChar ltdotSemicolonEntityName[] = "ltdot;";
static const LChar lthreeSemicolonEntityName[] = "lthree;";
static const LChar ltimesSemicolonEntityName[] = "ltimes;";
static const LChar ltlarrSemicolonEntityName[] = "ltlarr;";
static const LChar ltquestSemicolonEntityName[] = "ltquest;";
static const LChar ltrParSemicolonEntityName[] = "ltrPar;";
static const LChar ltriSemicolonEntityName[] = "ltri;";
static const LChar ltrieSemicolonEntityName[] = "ltrie;";
static const LChar ltrifSemicolonEntityName[] = "ltrif;";
static const LChar lurdsharSemicolonEntityName[] = "lurdshar;";
static const LChar luruharSemicolonEntityName[] = "luruhar;";
static const LChar lvertneqqSemicolonEntityName[] = "lvertneqq;";
static const LChar lvnESemicolonEntityName[] = "lvnE;";
static const LChar mDDotSemicolonEntityName[] = "mDDot;";
static const LChar macrEntityName[] = "macr";
static const LChar macrSemicolonEntityName[] = "macr;";
static const LChar maleSemicolonEntityName[] = "male;";
static const LChar maltSemicolonEntityName[] = "malt;";
static const LChar malteseSemicolonEntityName[] = "maltese;";
static const LChar mapSemicolonEntityName[] = "map;";
static const LChar mapstoSemicolonEntityName[] = "mapsto;";
static const LChar mapstodownSemicolonEntityName[] = "mapstodown;";
static const LChar mapstoleftSemicolonEntityName[] = "mapstoleft;";
static const LChar mapstoupSemicolonEntityName[] = "mapstoup;";
static const LChar markerSemicolonEntityName[] = "marker;";
static const LChar mcommaSemicolonEntityName[] = "mcomma;";
static const LChar mcySemicolonEntityName[] = "mcy;";
static const LChar mdashSemicolonEntityName[] = "mdash;";
static const LChar measuredangleSemicolonEntityName[] = "measuredangle;";
static const LChar mfrSemicolonEntityName[] = "mfr;";
static const LChar mhoSemicolonEntityName[] = "mho;";
static const LChar microEntityName[] = "micro";
static const LChar microSemicolonEntityName[] = "micro;";
static const LChar midSemicolonEntityName[] = "mid;";
static const LChar midastSemicolonEntityName[] = "midast;";
static const LChar midcirSemicolonEntityName[] = "midcir;";
static const LChar middotEntityName[] = "middot";
static const LChar middotSemicolonEntityName[] = "middot;";
static const LChar minusSemicolonEntityName[] = "minus;";
static const LChar minusbSemicolonEntityName[] = "minusb;";
static const LChar minusdSemicolonEntityName[] = "minusd;";
static const LChar minusduSemicolonEntityName[] = "minusdu;";
static const LChar mlcpSemicolonEntityName[] = "mlcp;";
static const LChar mldrSemicolonEntityName[] = "mldr;";
static const LChar mnplusSemicolonEntityName[] = "mnplus;";
static const LChar modelsSemicolonEntityName[] = "models;";
static const LChar mopfSemicolonEntityName[] = "mopf;";
static const LChar mpSemicolonEntityName[] = "mp;";
static const LChar mscrSemicolonEntityName[] = "mscr;";
static const LChar mstposSemicolonEntityName[] = "mstpos;";
static const LChar muSemicolonEntityName[] = "mu;";
static const LChar multimapSemicolonEntityName[] = "multimap;";
static const LChar mumapSemicolonEntityName[] = "mumap;";
static const LChar nGgSemicolonEntityName[] = "nGg;";
static const LChar nGtSemicolonEntityName[] = "nGt;";
static const LChar nGtvSemicolonEntityName[] = "nGtv;";
static const LChar nLeftarrowSemicolonEntityName[] = "nLeftarrow;";
static const LChar nLeftrightarrowSemicolonEntityName[] = "nLeftrightarrow;";
static const LChar nLlSemicolonEntityName[] = "nLl;";
static const LChar nLtSemicolonEntityName[] = "nLt;";
static const LChar nLtvSemicolonEntityName[] = "nLtv;";
static const LChar nRightarrowSemicolonEntityName[] = "nRightarrow;";
static const LChar nVDashSemicolonEntityName[] = "nVDash;";
static const LChar nVdashSemicolonEntityName[] = "nVdash;";
static const LChar nablaSemicolonEntityName[] = "nabla;";
static const LChar nacuteSemicolonEntityName[] = "nacute;";
static const LChar nangSemicolonEntityName[] = "nang;";
static const LChar napSemicolonEntityName[] = "nap;";
static const LChar napESemicolonEntityName[] = "napE;";
static const LChar napidSemicolonEntityName[] = "napid;";
static const LChar naposSemicolonEntityName[] = "napos;";
static const LChar napproxSemicolonEntityName[] = "napprox;";
static const LChar naturSemicolonEntityName[] = "natur;";
static const LChar naturalSemicolonEntityName[] = "natural;";
static const LChar naturalsSemicolonEntityName[] = "naturals;";
static const LChar nbspEntityName[] = "nbsp";
static const LChar nbspSemicolonEntityName[] = "nbsp;";
static const LChar nbumpSemicolonEntityName[] = "nbump;";
static const LChar nbumpeSemicolonEntityName[] = "nbumpe;";
static const LChar ncapSemicolonEntityName[] = "ncap;";
static const LChar ncaronSemicolonEntityName[] = "ncaron;";
static const LChar ncedilSemicolonEntityName[] = "ncedil;";
static const LChar ncongSemicolonEntityName[] = "ncong;";
static const LChar ncongdotSemicolonEntityName[] = "ncongdot;";
static const LChar ncupSemicolonEntityName[] = "ncup;";
static const LChar ncySemicolonEntityName[] = "ncy;";
static const LChar ndashSemicolonEntityName[] = "ndash;";
static const LChar neSemicolonEntityName[] = "ne;";
static const LChar neArrSemicolonEntityName[] = "neArr;";
static const LChar nearhkSemicolonEntityName[] = "nearhk;";
static const LChar nearrSemicolonEntityName[] = "nearr;";
static const LChar nearrowSemicolonEntityName[] = "nearrow;";
static const LChar nedotSemicolonEntityName[] = "nedot;";
static const LChar nequivSemicolonEntityName[] = "nequiv;";
static const LChar nesearSemicolonEntityName[] = "nesear;";
static const LChar nesimSemicolonEntityName[] = "nesim;";
static const LChar nexistSemicolonEntityName[] = "nexist;";
static const LChar nexistsSemicolonEntityName[] = "nexists;";
static const LChar nfrSemicolonEntityName[] = "nfr;";
static const LChar ngESemicolonEntityName[] = "ngE;";
static const LChar ngeSemicolonEntityName[] = "nge;";
static const LChar ngeqSemicolonEntityName[] = "ngeq;";
static const LChar ngeqqSemicolonEntityName[] = "ngeqq;";
static const LChar ngeqslantSemicolonEntityName[] = "ngeqslant;";
static const LChar ngesSemicolonEntityName[] = "nges;";
static const LChar ngsimSemicolonEntityName[] = "ngsim;";
static const LChar ngtSemicolonEntityName[] = "ngt;";
static const LChar ngtrSemicolonEntityName[] = "ngtr;";
static const LChar nhArrSemicolonEntityName[] = "nhArr;";
static const LChar nharrSemicolonEntityName[] = "nharr;";
static const LChar nhparSemicolonEntityName[] = "nhpar;";
static const LChar niSemicolonEntityName[] = "ni;";
static const LChar nisSemicolonEntityName[] = "nis;";
static const LChar nisdSemicolonEntityName[] = "nisd;";
static const LChar nivSemicolonEntityName[] = "niv;";
static const LChar njcySemicolonEntityName[] = "njcy;";
static const LChar nlArrSemicolonEntityName[] = "nlArr;";
static const LChar nlESemicolonEntityName[] = "nlE;";
static const LChar nlarrSemicolonEntityName[] = "nlarr;";
static const LChar nldrSemicolonEntityName[] = "nldr;";
static const LChar nleSemicolonEntityName[] = "nle;";
static const LChar nleftarrowSemicolonEntityName[] = "nleftarrow;";
static const LChar nleftrightarrowSemicolonEntityName[] = "nleftrightarrow;";
static const LChar nleqSemicolonEntityName[] = "nleq;";
static const LChar nleqqSemicolonEntityName[] = "nleqq;";
static const LChar nleqslantSemicolonEntityName[] = "nleqslant;";
static const LChar nlesSemicolonEntityName[] = "nles;";
static const LChar nlessSemicolonEntityName[] = "nless;";
static const LChar nlsimSemicolonEntityName[] = "nlsim;";
static const LChar nltSemicolonEntityName[] = "nlt;";
static const LChar nltriSemicolonEntityName[] = "nltri;";
static const LChar nltrieSemicolonEntityName[] = "nltrie;";
static const LChar nmidSemicolonEntityName[] = "nmid;";
static const LChar nopfSemicolonEntityName[] = "nopf;";
static const LChar notEntityName[] = "not";
static const LChar notSemicolonEntityName[] = "not;";
static const LChar notinSemicolonEntityName[] = "notin;";
static const LChar notinESemicolonEntityName[] = "notinE;";
static const LChar notindotSemicolonEntityName[] = "notindot;";
static const LChar notinvaSemicolonEntityName[] = "notinva;";
static const LChar notinvbSemicolonEntityName[] = "notinvb;";
static const LChar notinvcSemicolonEntityName[] = "notinvc;";
static const LChar notniSemicolonEntityName[] = "notni;";
static const LChar notnivaSemicolonEntityName[] = "notniva;";
static const LChar notnivbSemicolonEntityName[] = "notnivb;";
static const LChar notnivcSemicolonEntityName[] = "notnivc;";
static const LChar nparSemicolonEntityName[] = "npar;";
static const LChar nparallelSemicolonEntityName[] = "nparallel;";
static const LChar nparslSemicolonEntityName[] = "nparsl;";
static const LChar npartSemicolonEntityName[] = "npart;";
static const LChar npolintSemicolonEntityName[] = "npolint;";
static const LChar nprSemicolonEntityName[] = "npr;";
static const LChar nprcueSemicolonEntityName[] = "nprcue;";
static const LChar npreSemicolonEntityName[] = "npre;";
static const LChar nprecSemicolonEntityName[] = "nprec;";
static const LChar npreceqSemicolonEntityName[] = "npreceq;";
static const LChar nrArrSemicolonEntityName[] = "nrArr;";
static const LChar nrarrSemicolonEntityName[] = "nrarr;";
static const LChar nrarrcSemicolonEntityName[] = "nrarrc;";
static const LChar nrarrwSemicolonEntityName[] = "nrarrw;";
static const LChar nrightarrowSemicolonEntityName[] = "nrightarrow;";
static const LChar nrtriSemicolonEntityName[] = "nrtri;";
static const LChar nrtrieSemicolonEntityName[] = "nrtrie;";
static const LChar nscSemicolonEntityName[] = "nsc;";
static const LChar nsccueSemicolonEntityName[] = "nsccue;";
static const LChar nsceSemicolonEntityName[] = "nsce;";
static const LChar nscrSemicolonEntityName[] = "nscr;";
static const LChar nshortmidSemicolonEntityName[] = "nshortmid;";
static const LChar nshortparallelSemicolonEntityName[] = "nshortparallel;";
static const LChar nsimSemicolonEntityName[] = "nsim;";
static const LChar nsimeSemicolonEntityName[] = "nsime;";
static const LChar nsimeqSemicolonEntityName[] = "nsimeq;";
static const LChar nsmidSemicolonEntityName[] = "nsmid;";
static const LChar nsparSemicolonEntityName[] = "nspar;";
static const LChar nsqsubeSemicolonEntityName[] = "nsqsube;";
static const LChar nsqsupeSemicolonEntityName[] = "nsqsupe;";
static const LChar nsubSemicolonEntityName[] = "nsub;";
static const LChar nsubESemicolonEntityName[] = "nsubE;";
static const LChar nsubeSemicolonEntityName[] = "nsube;";
static const LChar nsubsetSemicolonEntityName[] = "nsubset;";
static const LChar nsubseteqSemicolonEntityName[] = "nsubseteq;";
static const LChar nsubseteqqSemicolonEntityName[] = "nsubseteqq;";
static const LChar nsuccSemicolonEntityName[] = "nsucc;";
static const LChar nsucceqSemicolonEntityName[] = "nsucceq;";
static const LChar nsupSemicolonEntityName[] = "nsup;";
static const LChar nsupESemicolonEntityName[] = "nsupE;";
static const LChar nsupeSemicolonEntityName[] = "nsupe;";
static const LChar nsupsetSemicolonEntityName[] = "nsupset;";
static const LChar nsupseteqSemicolonEntityName[] = "nsupseteq;";
static const LChar nsupseteqqSemicolonEntityName[] = "nsupseteqq;";
static const LChar ntglSemicolonEntityName[] = "ntgl;";
static const LChar ntildeEntityName[] = "ntilde";
static const LChar ntildeSemicolonEntityName[] = "ntilde;";
static const LChar ntlgSemicolonEntityName[] = "ntlg;";
static const LChar ntriangleleftSemicolonEntityName[] = "ntriangleleft;";
static const LChar ntrianglelefteqSemicolonEntityName[] = "ntrianglelefteq;";
static const LChar ntrianglerightSemicolonEntityName[] = "ntriangleright;";
static const LChar ntrianglerighteqSemicolonEntityName[] = "ntrianglerighteq;";
static const LChar nuSemicolonEntityName[] = "nu;";
static const LChar numSemicolonEntityName[] = "num;";
static const LChar numeroSemicolonEntityName[] = "numero;";
static const LChar numspSemicolonEntityName[] = "numsp;";
static const LChar nvDashSemicolonEntityName[] = "nvDash;";
static const LChar nvHarrSemicolonEntityName[] = "nvHarr;";
static const LChar nvapSemicolonEntityName[] = "nvap;";
static const LChar nvdashSemicolonEntityName[] = "nvdash;";
static const LChar nvgeSemicolonEntityName[] = "nvge;";
static const LChar nvgtSemicolonEntityName[] = "nvgt;";
static const LChar nvinfinSemicolonEntityName[] = "nvinfin;";
static const LChar nvlArrSemicolonEntityName[] = "nvlArr;";
static const LChar nvleSemicolonEntityName[] = "nvle;";
static const LChar nvltSemicolonEntityName[] = "nvlt;";
static const LChar nvltrieSemicolonEntityName[] = "nvltrie;";
static const LChar nvrArrSemicolonEntityName[] = "nvrArr;";
static const LChar nvrtrieSemicolonEntityName[] = "nvrtrie;";
static const LChar nvsimSemicolonEntityName[] = "nvsim;";
static const LChar nwArrSemicolonEntityName[] = "nwArr;";
static const LChar nwarhkSemicolonEntityName[] = "nwarhk;";
static const LChar nwarrSemicolonEntityName[] = "nwarr;";
static const LChar nwarrowSemicolonEntityName[] = "nwarrow;";
static const LChar nwnearSemicolonEntityName[] = "nwnear;";
static const LChar oSSemicolonEntityName[] = "oS;";
static const LChar oacuteEntityName[] = "oacute";
static const LChar oacuteSemicolonEntityName[] = "oacute;";
static const LChar oastSemicolonEntityName[] = "oast;";
static const LChar ocirSemicolonEntityName[] = "ocir;";
static const LChar ocircEntityName[] = "ocirc";
static const LChar ocircSemicolonEntityName[] = "ocirc;";
static const LChar ocySemicolonEntityName[] = "ocy;";
static const LChar odashSemicolonEntityName[] = "odash;";
static const LChar odblacSemicolonEntityName[] = "odblac;";
static const LChar odivSemicolonEntityName[] = "odiv;";
static const LChar odotSemicolonEntityName[] = "odot;";
static const LChar odsoldSemicolonEntityName[] = "odsold;";
static const LChar oeligSemicolonEntityName[] = "oelig;";
static const LChar ofcirSemicolonEntityName[] = "ofcir;";
static const LChar ofrSemicolonEntityName[] = "ofr;";
static const LChar ogonSemicolonEntityName[] = "ogon;";
static const LChar ograveEntityName[] = "ograve";
static const LChar ograveSemicolonEntityName[] = "ograve;";
static const LChar ogtSemicolonEntityName[] = "ogt;";
static const LChar ohbarSemicolonEntityName[] = "ohbar;";
static const LChar ohmSemicolonEntityName[] = "ohm;";
static const LChar ointSemicolonEntityName[] = "oint;";
static const LChar olarrSemicolonEntityName[] = "olarr;";
static const LChar olcirSemicolonEntityName[] = "olcir;";
static const LChar olcrossSemicolonEntityName[] = "olcross;";
static const LChar olineSemicolonEntityName[] = "oline;";
static const LChar oltSemicolonEntityName[] = "olt;";
static const LChar omacrSemicolonEntityName[] = "omacr;";
static const LChar omegaSemicolonEntityName[] = "omega;";
static const LChar omicronSemicolonEntityName[] = "omicron;";
static const LChar omidSemicolonEntityName[] = "omid;";
static const LChar ominusSemicolonEntityName[] = "ominus;";
static const LChar oopfSemicolonEntityName[] = "oopf;";
static const LChar oparSemicolonEntityName[] = "opar;";
static const LChar operpSemicolonEntityName[] = "operp;";
static const LChar oplusSemicolonEntityName[] = "oplus;";
static const LChar orSemicolonEntityName[] = "or;";
static const LChar orarrSemicolonEntityName[] = "orarr;";
static const LChar ordSemicolonEntityName[] = "ord;";
static const LChar orderSemicolonEntityName[] = "order;";
static const LChar orderofSemicolonEntityName[] = "orderof;";
static const LChar ordfEntityName[] = "ordf";
static const LChar ordfSemicolonEntityName[] = "ordf;";
static const LChar ordmEntityName[] = "ordm";
static const LChar ordmSemicolonEntityName[] = "ordm;";
static const LChar origofSemicolonEntityName[] = "origof;";
static const LChar ororSemicolonEntityName[] = "oror;";
static const LChar orslopeSemicolonEntityName[] = "orslope;";
static const LChar orvSemicolonEntityName[] = "orv;";
static const LChar oscrSemicolonEntityName[] = "oscr;";
static const LChar oslashEntityName[] = "oslash";
static const LChar oslashSemicolonEntityName[] = "oslash;";
static const LChar osolSemicolonEntityName[] = "osol;";
static const LChar otildeEntityName[] = "otilde";
static const LChar otildeSemicolonEntityName[] = "otilde;";
static const LChar otimesSemicolonEntityName[] = "otimes;";
static const LChar otimesasSemicolonEntityName[] = "otimesas;";
static const LChar oumlEntityName[] = "ouml";
static const LChar oumlSemicolonEntityName[] = "ouml;";
static const LChar ovbarSemicolonEntityName[] = "ovbar;";
static const LChar parSemicolonEntityName[] = "par;";
static const LChar paraEntityName[] = "para";
static const LChar paraSemicolonEntityName[] = "para;";
static const LChar parallelSemicolonEntityName[] = "parallel;";
static const LChar parsimSemicolonEntityName[] = "parsim;";
static const LChar parslSemicolonEntityName[] = "parsl;";
static const LChar partSemicolonEntityName[] = "part;";
static const LChar pcySemicolonEntityName[] = "pcy;";
static const LChar percntSemicolonEntityName[] = "percnt;";
static const LChar periodSemicolonEntityName[] = "period;";
static const LChar permilSemicolonEntityName[] = "permil;";
static const LChar perpSemicolonEntityName[] = "perp;";
static const LChar pertenkSemicolonEntityName[] = "pertenk;";
static const LChar pfrSemicolonEntityName[] = "pfr;";
static const LChar phiSemicolonEntityName[] = "phi;";
static const LChar phivSemicolonEntityName[] = "phiv;";
static const LChar phmmatSemicolonEntityName[] = "phmmat;";
static const LChar phoneSemicolonEntityName[] = "phone;";
static const LChar piSemicolonEntityName[] = "pi;";
static const LChar pitchforkSemicolonEntityName[] = "pitchfork;";
static const LChar pivSemicolonEntityName[] = "piv;";
static const LChar planckSemicolonEntityName[] = "planck;";
static const LChar planckhSemicolonEntityName[] = "planckh;";
static const LChar plankvSemicolonEntityName[] = "plankv;";
static const LChar plusSemicolonEntityName[] = "plus;";
static const LChar plusacirSemicolonEntityName[] = "plusacir;";
static const LChar plusbSemicolonEntityName[] = "plusb;";
static const LChar pluscirSemicolonEntityName[] = "pluscir;";
static const LChar plusdoSemicolonEntityName[] = "plusdo;";
static const LChar plusduSemicolonEntityName[] = "plusdu;";
static const LChar pluseSemicolonEntityName[] = "pluse;";
static const LChar plusmnEntityName[] = "plusmn";
static const LChar plusmnSemicolonEntityName[] = "plusmn;";
static const LChar plussimSemicolonEntityName[] = "plussim;";
static const LChar plustwoSemicolonEntityName[] = "plustwo;";
static const LChar pmSemicolonEntityName[] = "pm;";
static const LChar pointintSemicolonEntityName[] = "pointint;";
static const LChar popfSemicolonEntityName[] = "popf;";
static const LChar poundEntityName[] = "pound";
static const LChar poundSemicolonEntityName[] = "pound;";
static const LChar prSemicolonEntityName[] = "pr;";
static const LChar prESemicolonEntityName[] = "prE;";
static const LChar prapSemicolonEntityName[] = "prap;";
static const LChar prcueSemicolonEntityName[] = "prcue;";
static const LChar preSemicolonEntityName[] = "pre;";
static const LChar precSemicolonEntityName[] = "prec;";
static const LChar precapproxSemicolonEntityName[] = "precapprox;";
static const LChar preccurlyeqSemicolonEntityName[] = "preccurlyeq;";
static const LChar preceqSemicolonEntityName[] = "preceq;";
static const LChar precnapproxSemicolonEntityName[] = "precnapprox;";
static const LChar precneqqSemicolonEntityName[] = "precneqq;";
static const LChar precnsimSemicolonEntityName[] = "precnsim;";
static const LChar precsimSemicolonEntityName[] = "precsim;";
static const LChar primeSemicolonEntityName[] = "prime;";
static const LChar primesSemicolonEntityName[] = "primes;";
static const LChar prnESemicolonEntityName[] = "prnE;";
static const LChar prnapSemicolonEntityName[] = "prnap;";
static const LChar prnsimSemicolonEntityName[] = "prnsim;";
static const LChar prodSemicolonEntityName[] = "prod;";
static const LChar profalarSemicolonEntityName[] = "profalar;";
static const LChar proflineSemicolonEntityName[] = "profline;";
static const LChar profsurfSemicolonEntityName[] = "profsurf;";
static const LChar propSemicolonEntityName[] = "prop;";
static const LChar proptoSemicolonEntityName[] = "propto;";
static const LChar prsimSemicolonEntityName[] = "prsim;";
static const LChar prurelSemicolonEntityName[] = "prurel;";
static const LChar pscrSemicolonEntityName[] = "pscr;";
static const LChar psiSemicolonEntityName[] = "psi;";
static const LChar puncspSemicolonEntityName[] = "puncsp;";
static const LChar qfrSemicolonEntityName[] = "qfr;";
static const LChar qintSemicolonEntityName[] = "qint;";
static const LChar qopfSemicolonEntityName[] = "qopf;";
static const LChar qprimeSemicolonEntityName[] = "qprime;";
static const LChar qscrSemicolonEntityName[] = "qscr;";
static const LChar quaternionsSemicolonEntityName[] = "quaternions;";
static const LChar quatintSemicolonEntityName[] = "quatint;";
static const LChar questSemicolonEntityName[] = "quest;";
static const LChar questeqSemicolonEntityName[] = "questeq;";
static const LChar quotEntityName[] = "quot";
static const LChar quotSemicolonEntityName[] = "quot;";
static const LChar rAarrSemicolonEntityName[] = "rAarr;";
static const LChar rArrSemicolonEntityName[] = "rArr;";
static const LChar rAtailSemicolonEntityName[] = "rAtail;";
static const LChar rBarrSemicolonEntityName[] = "rBarr;";
static const LChar rHarSemicolonEntityName[] = "rHar;";
static const LChar raceSemicolonEntityName[] = "race;";
static const LChar racuteSemicolonEntityName[] = "racute;";
static const LChar radicSemicolonEntityName[] = "radic;";
static const LChar raemptyvSemicolonEntityName[] = "raemptyv;";
static const LChar rangSemicolonEntityName[] = "rang;";
static const LChar rangdSemicolonEntityName[] = "rangd;";
static const LChar rangeSemicolonEntityName[] = "range;";
static const LChar rangleSemicolonEntityName[] = "rangle;";
static const LChar raquoEntityName[] = "raquo";
static const LChar raquoSemicolonEntityName[] = "raquo;";
static const LChar rarrSemicolonEntityName[] = "rarr;";
static const LChar rarrapSemicolonEntityName[] = "rarrap;";
static const LChar rarrbSemicolonEntityName[] = "rarrb;";
static const LChar rarrbfsSemicolonEntityName[] = "rarrbfs;";
static const LChar rarrcSemicolonEntityName[] = "rarrc;";
static const LChar rarrfsSemicolonEntityName[] = "rarrfs;";
static const LChar rarrhkSemicolonEntityName[] = "rarrhk;";
static const LChar rarrlpSemicolonEntityName[] = "rarrlp;";
static const LChar rarrplSemicolonEntityName[] = "rarrpl;";
static const LChar rarrsimSemicolonEntityName[] = "rarrsim;";
static const LChar rarrtlSemicolonEntityName[] = "rarrtl;";
static const LChar rarrwSemicolonEntityName[] = "rarrw;";
static const LChar ratailSemicolonEntityName[] = "ratail;";
static const LChar ratioSemicolonEntityName[] = "ratio;";
static const LChar rationalsSemicolonEntityName[] = "rationals;";
static const LChar rbarrSemicolonEntityName[] = "rbarr;";
static const LChar rbbrkSemicolonEntityName[] = "rbbrk;";
static const LChar rbraceSemicolonEntityName[] = "rbrace;";
static const LChar rbrackSemicolonEntityName[] = "rbrack;";
static const LChar rbrkeSemicolonEntityName[] = "rbrke;";
static const LChar rbrksldSemicolonEntityName[] = "rbrksld;";
static const LChar rbrksluSemicolonEntityName[] = "rbrkslu;";
static const LChar rcaronSemicolonEntityName[] = "rcaron;";
static const LChar rcedilSemicolonEntityName[] = "rcedil;";
static const LChar rceilSemicolonEntityName[] = "rceil;";
static const LChar rcubSemicolonEntityName[] = "rcub;";
static const LChar rcySemicolonEntityName[] = "rcy;";
static const LChar rdcaSemicolonEntityName[] = "rdca;";
static const LChar rdldharSemicolonEntityName[] = "rdldhar;";
static const LChar rdquoSemicolonEntityName[] = "rdquo;";
static const LChar rdquorSemicolonEntityName[] = "rdquor;";
static const LChar rdshSemicolonEntityName[] = "rdsh;";
static const LChar realSemicolonEntityName[] = "real;";
static const LChar realineSemicolonEntityName[] = "realine;";
static const LChar realpartSemicolonEntityName[] = "realpart;";
static const LChar realsSemicolonEntityName[] = "reals;";
static const LChar rectSemicolonEntityName[] = "rect;";
static const LChar regEntityName[] = "reg";
static const LChar regSemicolonEntityName[] = "reg;";
static const LChar rfishtSemicolonEntityName[] = "rfisht;";
static const LChar rfloorSemicolonEntityName[] = "rfloor;";
static const LChar rfrSemicolonEntityName[] = "rfr;";
static const LChar rhardSemicolonEntityName[] = "rhard;";
static const LChar rharuSemicolonEntityName[] = "rharu;";
static const LChar rharulSemicolonEntityName[] = "rharul;";
static const LChar rhoSemicolonEntityName[] = "rho;";
static const LChar rhovSemicolonEntityName[] = "rhov;";
static const LChar rightarrowSemicolonEntityName[] = "rightarrow;";
static const LChar rightarrowtailSemicolonEntityName[] = "rightarrowtail;";
static const LChar rightharpoondownSemicolonEntityName[] = "rightharpoondown;";
static const LChar rightharpoonupSemicolonEntityName[] = "rightharpoonup;";
static const LChar rightleftarrowsSemicolonEntityName[] = "rightleftarrows;";
static const LChar rightleftharpoonsSemicolonEntityName[] = "rightleftharpoons;";
static const LChar rightrightarrowsSemicolonEntityName[] = "rightrightarrows;";
static const LChar rightsquigarrowSemicolonEntityName[] = "rightsquigarrow;";
static const LChar rightthreetimesSemicolonEntityName[] = "rightthreetimes;";
static const LChar ringSemicolonEntityName[] = "ring;";
static const LChar risingdotseqSemicolonEntityName[] = "risingdotseq;";
static const LChar rlarrSemicolonEntityName[] = "rlarr;";
static const LChar rlharSemicolonEntityName[] = "rlhar;";
static const LChar rlmSemicolonEntityName[] = "rlm;";
static const LChar rmoustSemicolonEntityName[] = "rmoust;";
static const LChar rmoustacheSemicolonEntityName[] = "rmoustache;";
static const LChar rnmidSemicolonEntityName[] = "rnmid;";
static const LChar roangSemicolonEntityName[] = "roang;";
static const LChar roarrSemicolonEntityName[] = "roarr;";
static const LChar robrkSemicolonEntityName[] = "robrk;";
static const LChar roparSemicolonEntityName[] = "ropar;";
static const LChar ropfSemicolonEntityName[] = "ropf;";
static const LChar roplusSemicolonEntityName[] = "roplus;";
static const LChar rotimesSemicolonEntityName[] = "rotimes;";
static const LChar rparSemicolonEntityName[] = "rpar;";
static const LChar rpargtSemicolonEntityName[] = "rpargt;";
static const LChar rppolintSemicolonEntityName[] = "rppolint;";
static const LChar rrarrSemicolonEntityName[] = "rrarr;";
static const LChar rsaquoSemicolonEntityName[] = "rsaquo;";
static const LChar rscrSemicolonEntityName[] = "rscr;";
static const LChar rshSemicolonEntityName[] = "rsh;";
static const LChar rsqbSemicolonEntityName[] = "rsqb;";
static const LChar rsquoSemicolonEntityName[] = "rsquo;";
static const LChar rsquorSemicolonEntityName[] = "rsquor;";
static const LChar rthreeSemicolonEntityName[] = "rthree;";
static const LChar rtimesSemicolonEntityName[] = "rtimes;";
static const LChar rtriSemicolonEntityName[] = "rtri;";
static const LChar rtrieSemicolonEntityName[] = "rtrie;";
static const LChar rtrifSemicolonEntityName[] = "rtrif;";
static const LChar rtriltriSemicolonEntityName[] = "rtriltri;";
static const LChar ruluharSemicolonEntityName[] = "ruluhar;";
static const LChar rxSemicolonEntityName[] = "rx;";
static const LChar sacuteSemicolonEntityName[] = "sacute;";
static const LChar sbquoSemicolonEntityName[] = "sbquo;";
static const LChar scSemicolonEntityName[] = "sc;";
static const LChar scESemicolonEntityName[] = "scE;";
static const LChar scapSemicolonEntityName[] = "scap;";
static const LChar scaronSemicolonEntityName[] = "scaron;";
static const LChar sccueSemicolonEntityName[] = "sccue;";
static const LChar sceSemicolonEntityName[] = "sce;";
static const LChar scedilSemicolonEntityName[] = "scedil;";
static const LChar scircSemicolonEntityName[] = "scirc;";
static const LChar scnESemicolonEntityName[] = "scnE;";
static const LChar scnapSemicolonEntityName[] = "scnap;";
static const LChar scnsimSemicolonEntityName[] = "scnsim;";
static const LChar scpolintSemicolonEntityName[] = "scpolint;";
static const LChar scsimSemicolonEntityName[] = "scsim;";
static const LChar scySemicolonEntityName[] = "scy;";
static const LChar sdotSemicolonEntityName[] = "sdot;";
static const LChar sdotbSemicolonEntityName[] = "sdotb;";
static const LChar sdoteSemicolonEntityName[] = "sdote;";
static const LChar seArrSemicolonEntityName[] = "seArr;";
static const LChar searhkSemicolonEntityName[] = "searhk;";
static const LChar searrSemicolonEntityName[] = "searr;";
static const LChar searrowSemicolonEntityName[] = "searrow;";
static const LChar sectEntityName[] = "sect";
static const LChar sectSemicolonEntityName[] = "sect;";
static const LChar semiSemicolonEntityName[] = "semi;";
static const LChar seswarSemicolonEntityName[] = "seswar;";
static const LChar setminusSemicolonEntityName[] = "setminus;";
static const LChar setmnSemicolonEntityName[] = "setmn;";
static const LChar sextSemicolonEntityName[] = "sext;";
static const LChar sfrSemicolonEntityName[] = "sfr;";
static const LChar sfrownSemicolonEntityName[] = "sfrown;";
static const LChar sharpSemicolonEntityName[] = "sharp;";
static const LChar shchcySemicolonEntityName[] = "shchcy;";
static const LChar shcySemicolonEntityName[] = "shcy;";
static const LChar shortmidSemicolonEntityName[] = "shortmid;";
static const LChar shortparallelSemicolonEntityName[] = "shortparallel;";
static const LChar shyEntityName[] = "shy";
static const LChar shySemicolonEntityName[] = "shy;";
static const LChar sigmaSemicolonEntityName[] = "sigma;";
static const LChar sigmafSemicolonEntityName[] = "sigmaf;";
static const LChar sigmavSemicolonEntityName[] = "sigmav;";
static const LChar simSemicolonEntityName[] = "sim;";
static const LChar simdotSemicolonEntityName[] = "simdot;";
static const LChar simeSemicolonEntityName[] = "sime;";
static const LChar simeqSemicolonEntityName[] = "simeq;";
static const LChar simgSemicolonEntityName[] = "simg;";
static const LChar simgESemicolonEntityName[] = "simgE;";
static const LChar simlSemicolonEntityName[] = "siml;";
static const LChar simlESemicolonEntityName[] = "simlE;";
static const LChar simneSemicolonEntityName[] = "simne;";
static const LChar simplusSemicolonEntityName[] = "simplus;";
static const LChar simrarrSemicolonEntityName[] = "simrarr;";
static const LChar slarrSemicolonEntityName[] = "slarr;";
static const LChar smallsetminusSemicolonEntityName[] = "smallsetminus;";
static const LChar smashpSemicolonEntityName[] = "smashp;";
static const LChar smeparslSemicolonEntityName[] = "smeparsl;";
static const LChar smidSemicolonEntityName[] = "smid;";
static const LChar smileSemicolonEntityName[] = "smile;";
static const LChar smtSemicolonEntityName[] = "smt;";
static const LChar smteSemicolonEntityName[] = "smte;";
static const LChar smtesSemicolonEntityName[] = "smtes;";
static const LChar softcySemicolonEntityName[] = "softcy;";
static const LChar solSemicolonEntityName[] = "sol;";
static const LChar solbSemicolonEntityName[] = "solb;";
static const LChar solbarSemicolonEntityName[] = "solbar;";
static const LChar sopfSemicolonEntityName[] = "sopf;";
static const LChar spadesSemicolonEntityName[] = "spades;";
static const LChar spadesuitSemicolonEntityName[] = "spadesuit;";
static const LChar sparSemicolonEntityName[] = "spar;";
static const LChar sqcapSemicolonEntityName[] = "sqcap;";
static const LChar sqcapsSemicolonEntityName[] = "sqcaps;";
static const LChar sqcupSemicolonEntityName[] = "sqcup;";
static const LChar sqcupsSemicolonEntityName[] = "sqcups;";
static const LChar sqsubSemicolonEntityName[] = "sqsub;";
static const LChar sqsubeSemicolonEntityName[] = "sqsube;";
static const LChar sqsubsetSemicolonEntityName[] = "sqsubset;";
static const LChar sqsubseteqSemicolonEntityName[] = "sqsubseteq;";
static const LChar sqsupSemicolonEntityName[] = "sqsup;";
static const LChar sqsupeSemicolonEntityName[] = "sqsupe;";
static const LChar sqsupsetSemicolonEntityName[] = "sqsupset;";
static const LChar sqsupseteqSemicolonEntityName[] = "sqsupseteq;";
static const LChar squSemicolonEntityName[] = "squ;";
static const LChar squareSemicolonEntityName[] = "square;";
static const LChar squarfSemicolonEntityName[] = "squarf;";
static const LChar squfSemicolonEntityName[] = "squf;";
static const LChar srarrSemicolonEntityName[] = "srarr;";
static const LChar sscrSemicolonEntityName[] = "sscr;";
static const LChar ssetmnSemicolonEntityName[] = "ssetmn;";
static const LChar ssmileSemicolonEntityName[] = "ssmile;";
static const LChar sstarfSemicolonEntityName[] = "sstarf;";
static const LChar starSemicolonEntityName[] = "star;";
static const LChar starfSemicolonEntityName[] = "starf;";
static const LChar straightepsilonSemicolonEntityName[] = "straightepsilon;";
static const LChar straightphiSemicolonEntityName[] = "straightphi;";
static const LChar strnsSemicolonEntityName[] = "strns;";
static const LChar subSemicolonEntityName[] = "sub;";
static const LChar subESemicolonEntityName[] = "subE;";
static const LChar subdotSemicolonEntityName[] = "subdot;";
static const LChar subeSemicolonEntityName[] = "sube;";
static const LChar subedotSemicolonEntityName[] = "subedot;";
static const LChar submultSemicolonEntityName[] = "submult;";
static const LChar subnESemicolonEntityName[] = "subnE;";
static const LChar subneSemicolonEntityName[] = "subne;";
static const LChar subplusSemicolonEntityName[] = "subplus;";
static const LChar subrarrSemicolonEntityName[] = "subrarr;";
static const LChar subsetSemicolonEntityName[] = "subset;";
static const LChar subseteqSemicolonEntityName[] = "subseteq;";
static const LChar subseteqqSemicolonEntityName[] = "subseteqq;";
static const LChar subsetneqSemicolonEntityName[] = "subsetneq;";
static const LChar subsetneqqSemicolonEntityName[] = "subsetneqq;";
static const LChar subsimSemicolonEntityName[] = "subsim;";
static const LChar subsubSemicolonEntityName[] = "subsub;";
static const LChar subsupSemicolonEntityName[] = "subsup;";
static const LChar succSemicolonEntityName[] = "succ;";
static const LChar succapproxSemicolonEntityName[] = "succapprox;";
static const LChar succcurlyeqSemicolonEntityName[] = "succcurlyeq;";
static const LChar succeqSemicolonEntityName[] = "succeq;";
static const LChar succnapproxSemicolonEntityName[] = "succnapprox;";
static const LChar succneqqSemicolonEntityName[] = "succneqq;";
static const LChar succnsimSemicolonEntityName[] = "succnsim;";
static const LChar succsimSemicolonEntityName[] = "succsim;";
static const LChar sumSemicolonEntityName[] = "sum;";
static const LChar sungSemicolonEntityName[] = "sung;";
static const LChar sup1EntityName[] = "sup1";
static const LChar sup1SemicolonEntityName[] = "sup1;";
static const LChar sup2EntityName[] = "sup2";
static const LChar sup2SemicolonEntityName[] = "sup2;";
static const LChar sup3EntityName[] = "sup3";
static const LChar sup3SemicolonEntityName[] = "sup3;";
static const LChar supSemicolonEntityName[] = "sup;";
static const LChar supESemicolonEntityName[] = "supE;";
static const LChar supdotSemicolonEntityName[] = "supdot;";
static const LChar supdsubSemicolonEntityName[] = "supdsub;";
static const LChar supeSemicolonEntityName[] = "supe;";
static const LChar supedotSemicolonEntityName[] = "supedot;";
static const LChar suphsolSemicolonEntityName[] = "suphsol;";
static const LChar suphsubSemicolonEntityName[] = "suphsub;";
static const LChar suplarrSemicolonEntityName[] = "suplarr;";
static const LChar supmultSemicolonEntityName[] = "supmult;";
static const LChar supnESemicolonEntityName[] = "supnE;";
static const LChar supneSemicolonEntityName[] = "supne;";
static const LChar supplusSemicolonEntityName[] = "supplus;";
static const LChar supsetSemicolonEntityName[] = "supset;";
static const LChar supseteqSemicolonEntityName[] = "supseteq;";
static const LChar supseteqqSemicolonEntityName[] = "supseteqq;";
static const LChar supsetneqSemicolonEntityName[] = "supsetneq;";
static const LChar supsetneqqSemicolonEntityName[] = "supsetneqq;";
static const LChar supsimSemicolonEntityName[] = "supsim;";
static const LChar supsubSemicolonEntityName[] = "supsub;";
static const LChar supsupSemicolonEntityName[] = "supsup;";
static const LChar swArrSemicolonEntityName[] = "swArr;";
static const LChar swarhkSemicolonEntityName[] = "swarhk;";
static const LChar swarrSemicolonEntityName[] = "swarr;";
static const LChar swarrowSemicolonEntityName[] = "swarrow;";
static const LChar swnwarSemicolonEntityName[] = "swnwar;";
static const LChar szligEntityName[] = "szlig";
static const LChar szligSemicolonEntityName[] = "szlig;";
static const LChar targetSemicolonEntityName[] = "target;";
static const LChar tauSemicolonEntityName[] = "tau;";
static const LChar tbrkSemicolonEntityName[] = "tbrk;";
static const LChar tcaronSemicolonEntityName[] = "tcaron;";
static const LChar tcedilSemicolonEntityName[] = "tcedil;";
static const LChar tcySemicolonEntityName[] = "tcy;";
static const LChar tdotSemicolonEntityName[] = "tdot;";
static const LChar telrecSemicolonEntityName[] = "telrec;";
static const LChar tfrSemicolonEntityName[] = "tfr;";
static const LChar there4SemicolonEntityName[] = "there4;";
static const LChar thereforeSemicolonEntityName[] = "therefore;";
static const LChar thetaSemicolonEntityName[] = "theta;";
static const LChar thetasymSemicolonEntityName[] = "thetasym;";
static const LChar thetavSemicolonEntityName[] = "thetav;";
static const LChar thickapproxSemicolonEntityName[] = "thickapprox;";
static const LChar thicksimSemicolonEntityName[] = "thicksim;";
static const LChar thinspSemicolonEntityName[] = "thinsp;";
static const LChar thkapSemicolonEntityName[] = "thkap;";
static const LChar thksimSemicolonEntityName[] = "thksim;";
static const LChar thornEntityName[] = "thorn";
static const LChar thornSemicolonEntityName[] = "thorn;";
static const LChar tildeSemicolonEntityName[] = "tilde;";
static const LChar timesEntityName[] = "times";
static const LChar timesSemicolonEntityName[] = "times;";
static const LChar timesbSemicolonEntityName[] = "timesb;";
static const LChar timesbarSemicolonEntityName[] = "timesbar;";
static const LChar timesdSemicolonEntityName[] = "timesd;";
static const LChar tintSemicolonEntityName[] = "tint;";
static const LChar toeaSemicolonEntityName[] = "toea;";
static const LChar topSemicolonEntityName[] = "top;";
static const LChar topbotSemicolonEntityName[] = "topbot;";
static const LChar topcirSemicolonEntityName[] = "topcir;";
static const LChar topfSemicolonEntityName[] = "topf;";
static const LChar topforkSemicolonEntityName[] = "topfork;";
static const LChar tosaSemicolonEntityName[] = "tosa;";
static const LChar tprimeSemicolonEntityName[] = "tprime;";
static const LChar tradeSemicolonEntityName[] = "trade;";
static const LChar triangleSemicolonEntityName[] = "triangle;";
static const LChar triangledownSemicolonEntityName[] = "triangledown;";
static const LChar triangleleftSemicolonEntityName[] = "triangleleft;";
static const LChar trianglelefteqSemicolonEntityName[] = "trianglelefteq;";
static const LChar triangleqSemicolonEntityName[] = "triangleq;";
static const LChar trianglerightSemicolonEntityName[] = "triangleright;";
static const LChar trianglerighteqSemicolonEntityName[] = "trianglerighteq;";
static const LChar tridotSemicolonEntityName[] = "tridot;";
static const LChar trieSemicolonEntityName[] = "trie;";
static const LChar triminusSemicolonEntityName[] = "triminus;";
static const LChar triplusSemicolonEntityName[] = "triplus;";
static const LChar trisbSemicolonEntityName[] = "trisb;";
static const LChar tritimeSemicolonEntityName[] = "tritime;";
static const LChar trpeziumSemicolonEntityName[] = "trpezium;";
static const LChar tscrSemicolonEntityName[] = "tscr;";
static const LChar tscySemicolonEntityName[] = "tscy;";
static const LChar tshcySemicolonEntityName[] = "tshcy;";
static const LChar tstrokSemicolonEntityName[] = "tstrok;";
static const LChar twixtSemicolonEntityName[] = "twixt;";
static const LChar twoheadleftarrowSemicolonEntityName[] = "twoheadleftarrow;";
static const LChar twoheadrightarrowSemicolonEntityName[] = "twoheadrightarrow;";
static const LChar uArrSemicolonEntityName[] = "uArr;";
static const LChar uHarSemicolonEntityName[] = "uHar;";
static const LChar uacuteEntityName[] = "uacute";
static const LChar uacuteSemicolonEntityName[] = "uacute;";
static const LChar uarrSemicolonEntityName[] = "uarr;";
static const LChar ubrcySemicolonEntityName[] = "ubrcy;";
static const LChar ubreveSemicolonEntityName[] = "ubreve;";
static const LChar ucircEntityName[] = "ucirc";
static const LChar ucircSemicolonEntityName[] = "ucirc;";
static const LChar ucySemicolonEntityName[] = "ucy;";
static const LChar udarrSemicolonEntityName[] = "udarr;";
static const LChar udblacSemicolonEntityName[] = "udblac;";
static const LChar udharSemicolonEntityName[] = "udhar;";
static const LChar ufishtSemicolonEntityName[] = "ufisht;";
static const LChar ufrSemicolonEntityName[] = "ufr;";
static const LChar ugraveEntityName[] = "ugrave";
static const LChar ugraveSemicolonEntityName[] = "ugrave;";
static const LChar uharlSemicolonEntityName[] = "uharl;";
static const LChar uharrSemicolonEntityName[] = "uharr;";
static const LChar uhblkSemicolonEntityName[] = "uhblk;";
static const LChar ulcornSemicolonEntityName[] = "ulcorn;";
static const LChar ulcornerSemicolonEntityName[] = "ulcorner;";
static const LChar ulcropSemicolonEntityName[] = "ulcrop;";
static const LChar ultriSemicolonEntityName[] = "ultri;";
static const LChar umacrSemicolonEntityName[] = "umacr;";
static const LChar umlEntityName[] = "uml";
static const LChar umlSemicolonEntityName[] = "uml;";
static const LChar uogonSemicolonEntityName[] = "uogon;";
static const LChar uopfSemicolonEntityName[] = "uopf;";
static const LChar uparrowSemicolonEntityName[] = "uparrow;";
static const LChar updownarrowSemicolonEntityName[] = "updownarrow;";
static const LChar upharpoonleftSemicolonEntityName[] = "upharpoonleft;";
static const LChar upharpoonrightSemicolonEntityName[] = "upharpoonright;";
static const LChar uplusSemicolonEntityName[] = "uplus;";
static const LChar upsiSemicolonEntityName[] = "upsi;";
static const LChar upsihSemicolonEntityName[] = "upsih;";
static const LChar upsilonSemicolonEntityName[] = "upsilon;";
static const LChar upuparrowsSemicolonEntityName[] = "upuparrows;";
static const LChar urcornSemicolonEntityName[] = "urcorn;";
static const LChar urcornerSemicolonEntityName[] = "urcorner;";
static const LChar urcropSemicolonEntityName[] = "urcrop;";
static const LChar uringSemicolonEntityName[] = "uring;";
static const LChar urtriSemicolonEntityName[] = "urtri;";
static const LChar uscrSemicolonEntityName[] = "uscr;";
static const LChar utdotSemicolonEntityName[] = "utdot;";
static const LChar utildeSemicolonEntityName[] = "utilde;";
static const LChar utriSemicolonEntityName[] = "utri;";
static const LChar utrifSemicolonEntityName[] = "utrif;";
static const LChar uuarrSemicolonEntityName[] = "uuarr;";
static const LChar uumlEntityName[] = "uuml";
static const LChar uumlSemicolonEntityName[] = "uuml;";
static const LChar uwangleSemicolonEntityName[] = "uwangle;";
static const LChar vArrSemicolonEntityName[] = "vArr;";
static const LChar vBarSemicolonEntityName[] = "vBar;";
static const LChar vBarvSemicolonEntityName[] = "vBarv;";
static const LChar vDashSemicolonEntityName[] = "vDash;";
static const LChar vangrtSemicolonEntityName[] = "vangrt;";
static const LChar varepsilonSemicolonEntityName[] = "varepsilon;";
static const LChar varkappaSemicolonEntityName[] = "varkappa;";
static const LChar varnothingSemicolonEntityName[] = "varnothing;";
static const LChar varphiSemicolonEntityName[] = "varphi;";
static const LChar varpiSemicolonEntityName[] = "varpi;";
static const LChar varproptoSemicolonEntityName[] = "varpropto;";
static const LChar varrSemicolonEntityName[] = "varr;";
static const LChar varrhoSemicolonEntityName[] = "varrho;";
static const LChar varsigmaSemicolonEntityName[] = "varsigma;";
static const LChar varsubsetneqSemicolonEntityName[] = "varsubsetneq;";
static const LChar varsubsetneqqSemicolonEntityName[] = "varsubsetneqq;";
static const LChar varsupsetneqSemicolonEntityName[] = "varsupsetneq;";
static const LChar varsupsetneqqSemicolonEntityName[] = "varsupsetneqq;";
static const LChar varthetaSemicolonEntityName[] = "vartheta;";
static const LChar vartriangleleftSemicolonEntityName[] = "vartriangleleft;";
static const LChar vartrianglerightSemicolonEntityName[] = "vartriangleright;";
static const LChar vcySemicolonEntityName[] = "vcy;";
static const LChar vdashSemicolonEntityName[] = "vdash;";
static const LChar veeSemicolonEntityName[] = "vee;";
static const LChar veebarSemicolonEntityName[] = "veebar;";
static const LChar veeeqSemicolonEntityName[] = "veeeq;";
static const LChar vellipSemicolonEntityName[] = "vellip;";
static const LChar verbarSemicolonEntityName[] = "verbar;";
static const LChar vertSemicolonEntityName[] = "vert;";
static const LChar vfrSemicolonEntityName[] = "vfr;";
static const LChar vltriSemicolonEntityName[] = "vltri;";
static const LChar vnsubSemicolonEntityName[] = "vnsub;";
static const LChar vnsupSemicolonEntityName[] = "vnsup;";
static const LChar vopfSemicolonEntityName[] = "vopf;";
static const LChar vpropSemicolonEntityName[] = "vprop;";
static const LChar vrtriSemicolonEntityName[] = "vrtri;";
static const LChar vscrSemicolonEntityName[] = "vscr;";
static const LChar vsubnESemicolonEntityName[] = "vsubnE;";
static const LChar vsubneSemicolonEntityName[] = "vsubne;";
static const LChar vsupnESemicolonEntityName[] = "vsupnE;";
static const LChar vsupneSemicolonEntityName[] = "vsupne;";
static const LChar vzigzagSemicolonEntityName[] = "vzigzag;";
static const LChar wcircSemicolonEntityName[] = "wcirc;";
static const LChar wedbarSemicolonEntityName[] = "wedbar;";
static const LChar wedgeSemicolonEntityName[] = "wedge;";
static const LChar wedgeqSemicolonEntityName[] = "wedgeq;";
static const LChar weierpSemicolonEntityName[] = "weierp;";
static const LChar wfrSemicolonEntityName[] = "wfr;";
static const LChar wopfSemicolonEntityName[] = "wopf;";
static const LChar wpSemicolonEntityName[] = "wp;";
static const LChar wrSemicolonEntityName[] = "wr;";
static const LChar wreathSemicolonEntityName[] = "wreath;";
static const LChar wscrSemicolonEntityName[] = "wscr;";
static const LChar xcapSemicolonEntityName[] = "xcap;";
static const LChar xcircSemicolonEntityName[] = "xcirc;";
static const LChar xcupSemicolonEntityName[] = "xcup;";
static const LChar xdtriSemicolonEntityName[] = "xdtri;";
static const LChar xfrSemicolonEntityName[] = "xfr;";
static const LChar xhArrSemicolonEntityName[] = "xhArr;";
static const LChar xharrSemicolonEntityName[] = "xharr;";
static const LChar xiSemicolonEntityName[] = "xi;";
static const LChar xlArrSemicolonEntityName[] = "xlArr;";
static const LChar xlarrSemicolonEntityName[] = "xlarr;";
static const LChar xmapSemicolonEntityName[] = "xmap;";
static const LChar xnisSemicolonEntityName[] = "xnis;";
static const LChar xodotSemicolonEntityName[] = "xodot;";
static const LChar xopfSemicolonEntityName[] = "xopf;";
static const LChar xoplusSemicolonEntityName[] = "xoplus;";
static const LChar xotimeSemicolonEntityName[] = "xotime;";
static const LChar xrArrSemicolonEntityName[] = "xrArr;";
static const LChar xrarrSemicolonEntityName[] = "xrarr;";
static const LChar xscrSemicolonEntityName[] = "xscr;";
static const LChar xsqcupSemicolonEntityName[] = "xsqcup;";
static const LChar xuplusSemicolonEntityName[] = "xuplus;";
static const LChar xutriSemicolonEntityName[] = "xutri;";
static const LChar xveeSemicolonEntityName[] = "xvee;";
static const LChar xwedgeSemicolonEntityName[] = "xwedge;";
static const LChar yacuteEntityName[] = "yacute";
static const LChar yacuteSemicolonEntityName[] = "yacute;";
static const LChar yacySemicolonEntityName[] = "yacy;";
static const LChar ycircSemicolonEntityName[] = "ycirc;";
static const LChar ycySemicolonEntityName[] = "ycy;";
static const LChar yenEntityName[] = "yen";
static const LChar yenSemicolonEntityName[] = "yen;";
static const LChar yfrSemicolonEntityName[] = "yfr;";
static const LChar yicySemicolonEntityName[] = "yicy;";
static const LChar yopfSemicolonEntityName[] = "yopf;";
static const LChar yscrSemicolonEntityName[] = "yscr;";
static const LChar yucySemicolonEntityName[] = "yucy;";
static const LChar yumlEntityName[] = "yuml";
static const LChar yumlSemicolonEntityName[] = "yuml;";
static const LChar zacuteSemicolonEntityName[] = "zacute;";
static const LChar zcaronSemicolonEntityName[] = "zcaron;";
static const LChar zcySemicolonEntityName[] = "zcy;";
static const LChar zdotSemicolonEntityName[] = "zdot;";
static const LChar zeetrfSemicolonEntityName[] = "zeetrf;";
static const LChar zetaSemicolonEntityName[] = "zeta;";
static const LChar zfrSemicolonEntityName[] = "zfr;";
static const LChar zhcySemicolonEntityName[] = "zhcy;";
static const LChar zigrarrSemicolonEntityName[] = "zigrarr;";
static const LChar zopfSemicolonEntityName[] = "zopf;";
static const LChar zscrSemicolonEntityName[] = "zscr;";
static const LChar zwjSemicolonEntityName[] = "zwj;";
static const LChar zwnjSemicolonEntityName[] = "zwnj;";

static const HTMLEntityTableEntry staticEntityTable[2231] = {
    { AEligEntityName, 5, 0x000C6, 0 },
    { AEligSemicolonEntityName, 6, 0x000C6, 0 },
    { AMPEntityName, 3, 0x00026, 0 },
    { AMPSemicolonEntityName, 4, 0x00026, 0 },
    { AacuteEntityName, 6, 0x000C1, 0 },
    { AacuteSemicolonEntityName, 7, 0x000C1, 0 },
    { AbreveSemicolonEntityName, 7, 0x00102, 0 },
    { AcircEntityName, 5, 0x000C2, 0 },
    { AcircSemicolonEntityName, 6, 0x000C2, 0 },
    { AcySemicolonEntityName, 4, 0x00410, 0 },
    { AfrSemicolonEntityName, 4, 0x1D504, 0 },
    { AgraveEntityName, 6, 0x000C0, 0 },
    { AgraveSemicolonEntityName, 7, 0x000C0, 0 },
    { AlphaSemicolonEntityName, 6, 0x00391, 0 },
    { AmacrSemicolonEntityName, 6, 0x00100, 0 },
    { AndSemicolonEntityName, 4, 0x02A53, 0 },
    { AogonSemicolonEntityName, 6, 0x00104, 0 },
    { AopfSemicolonEntityName, 5, 0x1D538, 0 },
    { ApplyFunctionSemicolonEntityName, 14, 0x02061, 0 },
    { AringEntityName, 5, 0x000C5, 0 },
    { AringSemicolonEntityName, 6, 0x000C5, 0 },
    { AscrSemicolonEntityName, 5, 0x1D49C, 0 },
    { AssignSemicolonEntityName, 7, 0x02254, 0 },
    { AtildeEntityName, 6, 0x000C3, 0 },
    { AtildeSemicolonEntityName, 7, 0x000C3, 0 },
    { AumlEntityName, 4, 0x000C4, 0 },
    { AumlSemicolonEntityName, 5, 0x000C4, 0 },
    { BackslashSemicolonEntityName, 10, 0x02216, 0 },
    { BarvSemicolonEntityName, 5, 0x02AE7, 0 },
    { BarwedSemicolonEntityName, 7, 0x02306, 0 },
    { BcySemicolonEntityName, 4, 0x00411, 0 },
    { BecauseSemicolonEntityName, 8, 0x02235, 0 },
    { BernoullisSemicolonEntityName, 11, 0x0212C, 0 },
    { BetaSemicolonEntityName, 5, 0x00392, 0 },
    { BfrSemicolonEntityName, 4, 0x1D505, 0 },
    { BopfSemicolonEntityName, 5, 0x1D539, 0 },
    { BreveSemicolonEntityName, 6, 0x002D8, 0 },
    { BscrSemicolonEntityName, 5, 0x0212C, 0 },
    { BumpeqSemicolonEntityName, 7, 0x0224E, 0 },
    { CHcySemicolonEntityName, 5, 0x00427, 0 },
    { COPYEntityName, 4, 0x000A9, 0 },
    { COPYSemicolonEntityName, 5, 0x000A9, 0 },
    { CacuteSemicolonEntityName, 7, 0x00106, 0 },
    { CapSemicolonEntityName, 4, 0x022D2, 0 },
    { CapitalDifferentialDSemicolonEntityName, 21, 0x02145, 0 },
    { CayleysSemicolonEntityName, 8, 0x0212D, 0 },
    { CcaronSemicolonEntityName, 7, 0x0010C, 0 },
    { CcedilEntityName, 6, 0x000C7, 0 },
    { CcedilSemicolonEntityName, 7, 0x000C7, 0 },
    { CcircSemicolonEntityName, 6, 0x00108, 0 },
    { CconintSemicolonEntityName, 8, 0x02230, 0 },
    { CdotSemicolonEntityName, 5, 0x0010A, 0 },
    { CedillaSemicolonEntityName, 8, 0x000B8, 0 },
    { CenterDotSemicolonEntityName, 10, 0x000B7, 0 },
    { CfrSemicolonEntityName, 4, 0x0212D, 0 },
    { ChiSemicolonEntityName, 4, 0x003A7, 0 },
    { CircleDotSemicolonEntityName, 10, 0x02299, 0 },
    { CircleMinusSemicolonEntityName, 12, 0x02296, 0 },
    { CirclePlusSemicolonEntityName, 11, 0x02295, 0 },
    { CircleTimesSemicolonEntityName, 12, 0x02297, 0 },
    { ClockwiseContourIntegralSemicolonEntityName, 25, 0x02232, 0 },
    { CloseCurlyDoubleQuoteSemicolonEntityName, 22, 0x0201D, 0 },
    { CloseCurlyQuoteSemicolonEntityName, 16, 0x02019, 0 },
    { ColonSemicolonEntityName, 6, 0x02237, 0 },
    { ColoneSemicolonEntityName, 7, 0x02A74, 0 },
    { CongruentSemicolonEntityName, 10, 0x02261, 0 },
    { ConintSemicolonEntityName, 7, 0x0222F, 0 },
    { ContourIntegralSemicolonEntityName, 16, 0x0222E, 0 },
    { CopfSemicolonEntityName, 5, 0x02102, 0 },
    { CoproductSemicolonEntityName, 10, 0x02210, 0 },
    { CounterClockwiseContourIntegralSemicolonEntityName, 32, 0x02233, 0 },
    { CrossSemicolonEntityName, 6, 0x02A2F, 0 },
    { CscrSemicolonEntityName, 5, 0x1D49E, 0 },
    { CupSemicolonEntityName, 4, 0x022D3, 0 },
    { CupCapSemicolonEntityName, 7, 0x0224D, 0 },
    { DDSemicolonEntityName, 3, 0x02145, 0 },
    { DDotrahdSemicolonEntityName, 9, 0x02911, 0 },
    { DJcySemicolonEntityName, 5, 0x00402, 0 },
    { DScySemicolonEntityName, 5, 0x00405, 0 },
    { DZcySemicolonEntityName, 5, 0x0040F, 0 },
    { DaggerSemicolonEntityName, 7, 0x02021, 0 },
    { DarrSemicolonEntityName, 5, 0x021A1, 0 },
    { DashvSemicolonEntityName, 6, 0x02AE4, 0 },
    { DcaronSemicolonEntityName, 7, 0x0010E, 0 },
    { DcySemicolonEntityName, 4, 0x00414, 0 },
    { DelSemicolonEntityName, 4, 0x02207, 0 },
    { DeltaSemicolonEntityName, 6, 0x00394, 0 },
    { DfrSemicolonEntityName, 4, 0x1D507, 0 },
    { DiacriticalAcuteSemicolonEntityName, 17, 0x000B4, 0 },
    { DiacriticalDotSemicolonEntityName, 15, 0x002D9, 0 },
    { DiacriticalDoubleAcuteSemicolonEntityName, 23, 0x002DD, 0 },
    { DiacriticalGraveSemicolonEntityName, 17, 0x00060, 0 },
    { DiacriticalTildeSemicolonEntityName, 17, 0x002DC, 0 },
    { DiamondSemicolonEntityName, 8, 0x022C4, 0 },
    { DifferentialDSemicolonEntityName, 14, 0x02146, 0 },
    { DopfSemicolonEntityName, 5, 0x1D53B, 0 },
    { DotSemicolonEntityName, 4, 0x000A8, 0 },
    { DotDotSemicolonEntityName, 7, 0x020DC, 0 },
    { DotEqualSemicolonEntityName, 9, 0x02250, 0 },
    { DoubleContourIntegralSemicolonEntityName, 22, 0x0222F, 0 },
    { DoubleDotSemicolonEntityName, 10, 0x000A8, 0 },
    { DoubleDownArrowSemicolonEntityName, 16, 0x021D3, 0 },
    { DoubleLeftArrowSemicolonEntityName, 16, 0x021D0, 0 },
    { DoubleLeftRightArrowSemicolonEntityName, 21, 0x021D4, 0 },
    { DoubleLeftTeeSemicolonEntityName, 14, 0x02AE4, 0 },
    { DoubleLongLeftArrowSemicolonEntityName, 20, 0x027F8, 0 },
    { DoubleLongLeftRightArrowSemicolonEntityName, 25, 0x027FA, 0 },
    { DoubleLongRightArrowSemicolonEntityName, 21, 0x027F9, 0 },
    { DoubleRightArrowSemicolonEntityName, 17, 0x021D2, 0 },
    { DoubleRightTeeSemicolonEntityName, 15, 0x022A8, 0 },
    { DoubleUpArrowSemicolonEntityName, 14, 0x021D1, 0 },
    { DoubleUpDownArrowSemicolonEntityName, 18, 0x021D5, 0 },
    { DoubleVerticalBarSemicolonEntityName, 18, 0x02225, 0 },
    { DownArrowSemicolonEntityName, 10, 0x02193, 0 },
    { DownArrowBarSemicolonEntityName, 13, 0x02913, 0 },
    { DownArrowUpArrowSemicolonEntityName, 17, 0x021F5, 0 },
    { DownBreveSemicolonEntityName, 10, 0x00311, 0 },
    { DownLeftRightVectorSemicolonEntityName, 20, 0x02950, 0 },
    { DownLeftTeeVectorSemicolonEntityName, 18, 0x0295E, 0 },
    { DownLeftVectorSemicolonEntityName, 15, 0x021BD, 0 },
    { DownLeftVectorBarSemicolonEntityName, 18, 0x02956, 0 },
    { DownRightTeeVectorSemicolonEntityName, 19, 0x0295F, 0 },
    { DownRightVectorSemicolonEntityName, 16, 0x021C1, 0 },
    { DownRightVectorBarSemicolonEntityName, 19, 0x02957, 0 },
    { DownTeeSemicolonEntityName, 8, 0x022A4, 0 },
    { DownTeeArrowSemicolonEntityName, 13, 0x021A7, 0 },
    { DownarrowSemicolonEntityName, 10, 0x021D3, 0 },
    { DscrSemicolonEntityName, 5, 0x1D49F, 0 },
    { DstrokSemicolonEntityName, 7, 0x00110, 0 },
    { ENGSemicolonEntityName, 4, 0x0014A, 0 },
    { ETHEntityName, 3, 0x000D0, 0 },
    { ETHSemicolonEntityName, 4, 0x000D0, 0 },
    { EacuteEntityName, 6, 0x000C9, 0 },
    { EacuteSemicolonEntityName, 7, 0x000C9, 0 },
    { EcaronSemicolonEntityName, 7, 0x0011A, 0 },
    { EcircEntityName, 5, 0x000CA, 0 },
    { EcircSemicolonEntityName, 6, 0x000CA, 0 },
    { EcySemicolonEntityName, 4, 0x0042D, 0 },
    { EdotSemicolonEntityName, 5, 0x00116, 0 },
    { EfrSemicolonEntityName, 4, 0x1D508, 0 },
    { EgraveEntityName, 6, 0x000C8, 0 },
    { EgraveSemicolonEntityName, 7, 0x000C8, 0 },
    { ElementSemicolonEntityName, 8, 0x02208, 0 },
    { EmacrSemicolonEntityName, 6, 0x00112, 0 },
    { EmptySmallSquareSemicolonEntityName, 17, 0x025FB, 0 },
    { EmptyVerySmallSquareSemicolonEntityName, 21, 0x025AB, 0 },
    { EogonSemicolonEntityName, 6, 0x00118, 0 },
    { EopfSemicolonEntityName, 5, 0x1D53C, 0 },
    { EpsilonSemicolonEntityName, 8, 0x00395, 0 },
    { EqualSemicolonEntityName, 6, 0x02A75, 0 },
    { EqualTildeSemicolonEntityName, 11, 0x02242, 0 },
    { EquilibriumSemicolonEntityName, 12, 0x021CC, 0 },
    { EscrSemicolonEntityName, 5, 0x02130, 0 },
    { EsimSemicolonEntityName, 5, 0x02A73, 0 },
    { EtaSemicolonEntityName, 4, 0x00397, 0 },
    { EumlEntityName, 4, 0x000CB, 0 },
    { EumlSemicolonEntityName, 5, 0x000CB, 0 },
    { ExistsSemicolonEntityName, 7, 0x02203, 0 },
    { ExponentialESemicolonEntityName, 13, 0x02147, 0 },
    { FcySemicolonEntityName, 4, 0x00424, 0 },
    { FfrSemicolonEntityName, 4, 0x1D509, 0 },
    { FilledSmallSquareSemicolonEntityName, 18, 0x025FC, 0 },
    { FilledVerySmallSquareSemicolonEntityName, 22, 0x025AA, 0 },
    { FopfSemicolonEntityName, 5, 0x1D53D, 0 },
    { ForAllSemicolonEntityName, 7, 0x02200, 0 },
    { FouriertrfSemicolonEntityName, 11, 0x02131, 0 },
    { FscrSemicolonEntityName, 5, 0x02131, 0 },
    { GJcySemicolonEntityName, 5, 0x00403, 0 },
    { GTEntityName, 2, 0x0003E, 0 },
    { GTSemicolonEntityName, 3, 0x0003E, 0 },
    { GammaSemicolonEntityName, 6, 0x00393, 0 },
    { GammadSemicolonEntityName, 7, 0x003DC, 0 },
    { GbreveSemicolonEntityName, 7, 0x0011E, 0 },
    { GcedilSemicolonEntityName, 7, 0x00122, 0 },
    { GcircSemicolonEntityName, 6, 0x0011C, 0 },
    { GcySemicolonEntityName, 4, 0x00413, 0 },
    { GdotSemicolonEntityName, 5, 0x00120, 0 },
    { GfrSemicolonEntityName, 4, 0x1D50A, 0 },
    { GgSemicolonEntityName, 3, 0x022D9, 0 },
    { GopfSemicolonEntityName, 5, 0x1D53E, 0 },
    { GreaterEqualSemicolonEntityName, 13, 0x02265, 0 },
    { GreaterEqualLessSemicolonEntityName, 17, 0x022DB, 0 },
    { GreaterFullEqualSemicolonEntityName, 17, 0x02267, 0 },
    { GreaterGreaterSemicolonEntityName, 15, 0x02AA2, 0 },
    { GreaterLessSemicolonEntityName, 12, 0x02277, 0 },
    { GreaterSlantEqualSemicolonEntityName, 18, 0x02A7E, 0 },
    { GreaterTildeSemicolonEntityName, 13, 0x02273, 0 },
    { GscrSemicolonEntityName, 5, 0x1D4A2, 0 },
    { GtSemicolonEntityName, 3, 0x0226B, 0 },
    { HARDcySemicolonEntityName, 7, 0x0042A, 0 },
    { HacekSemicolonEntityName, 6, 0x002C7, 0 },
    { HatSemicolonEntityName, 4, 0x0005E, 0 },
    { HcircSemicolonEntityName, 6, 0x00124, 0 },
    { HfrSemicolonEntityName, 4, 0x0210C, 0 },
    { HilbertSpaceSemicolonEntityName, 13, 0x0210B, 0 },
    { HopfSemicolonEntityName, 5, 0x0210D, 0 },
    { HorizontalLineSemicolonEntityName, 15, 0x02500, 0 },
    { HscrSemicolonEntityName, 5, 0x0210B, 0 },
    { HstrokSemicolonEntityName, 7, 0x00126, 0 },
    { HumpDownHumpSemicolonEntityName, 13, 0x0224E, 0 },
    { HumpEqualSemicolonEntityName, 10, 0x0224F, 0 },
    { IEcySemicolonEntityName, 5, 0x00415, 0 },
    { IJligSemicolonEntityName, 6, 0x00132, 0 },
    { IOcySemicolonEntityName, 5, 0x00401, 0 },
    { IacuteEntityName, 6, 0x000CD, 0 },
    { IacuteSemicolonEntityName, 7, 0x000CD, 0 },
    { IcircEntityName, 5, 0x000CE, 0 },
    { IcircSemicolonEntityName, 6, 0x000CE, 0 },
    { IcySemicolonEntityName, 4, 0x00418, 0 },
    { IdotSemicolonEntityName, 5, 0x00130, 0 },
    { IfrSemicolonEntityName, 4, 0x02111, 0 },
    { IgraveEntityName, 6, 0x000CC, 0 },
    { IgraveSemicolonEntityName, 7, 0x000CC, 0 },
    { ImSemicolonEntityName, 3, 0x02111, 0 },
    { ImacrSemicolonEntityName, 6, 0x0012A, 0 },
    { ImaginaryISemicolonEntityName, 11, 0x02148, 0 },
    { ImpliesSemicolonEntityName, 8, 0x021D2, 0 },
    { IntSemicolonEntityName, 4, 0x0222C, 0 },
    { IntegralSemicolonEntityName, 9, 0x0222B, 0 },
    { IntersectionSemicolonEntityName, 13, 0x022C2, 0 },
    { InvisibleCommaSemicolonEntityName, 15, 0x02063, 0 },
    { InvisibleTimesSemicolonEntityName, 15, 0x02062, 0 },
    { IogonSemicolonEntityName, 6, 0x0012E, 0 },
    { IopfSemicolonEntityName, 5, 0x1D540, 0 },
    { IotaSemicolonEntityName, 5, 0x00399, 0 },
    { IscrSemicolonEntityName, 5, 0x02110, 0 },
    { ItildeSemicolonEntityName, 7, 0x00128, 0 },
    { IukcySemicolonEntityName, 6, 0x00406, 0 },
    { IumlEntityName, 4, 0x000CF, 0 },
    { IumlSemicolonEntityName, 5, 0x000CF, 0 },
    { JcircSemicolonEntityName, 6, 0x00134, 0 },
    { JcySemicolonEntityName, 4, 0x00419, 0 },
    { JfrSemicolonEntityName, 4, 0x1D50D, 0 },
    { JopfSemicolonEntityName, 5, 0x1D541, 0 },
    { JscrSemicolonEntityName, 5, 0x1D4A5, 0 },
    { JsercySemicolonEntityName, 7, 0x00408, 0 },
    { JukcySemicolonEntityName, 6, 0x00404, 0 },
    { KHcySemicolonEntityName, 5, 0x00425, 0 },
    { KJcySemicolonEntityName, 5, 0x0040C, 0 },
    { KappaSemicolonEntityName, 6, 0x0039A, 0 },
    { KcedilSemicolonEntityName, 7, 0x00136, 0 },
    { KcySemicolonEntityName, 4, 0x0041A, 0 },
    { KfrSemicolonEntityName, 4, 0x1D50E, 0 },
    { KopfSemicolonEntityName, 5, 0x1D542, 0 },
    { KscrSemicolonEntityName, 5, 0x1D4A6, 0 },
    { LJcySemicolonEntityName, 5, 0x00409, 0 },
    { LTEntityName, 2, 0x0003C, 0 },
    { LTSemicolonEntityName, 3, 0x0003C, 0 },
    { LacuteSemicolonEntityName, 7, 0x00139, 0 },
    { LambdaSemicolonEntityName, 7, 0x0039B, 0 },
    { LangSemicolonEntityName, 5, 0x027EA, 0 },
    { LaplacetrfSemicolonEntityName, 11, 0x02112, 0 },
    { LarrSemicolonEntityName, 5, 0x0219E, 0 },
    { LcaronSemicolonEntityName, 7, 0x0013D, 0 },
    { LcedilSemicolonEntityName, 7, 0x0013B, 0 },
    { LcySemicolonEntityName, 4, 0x0041B, 0 },
    { LeftAngleBracketSemicolonEntityName, 17, 0x027E8, 0 },
    { LeftArrowSemicolonEntityName, 10, 0x02190, 0 },
    { LeftArrowBarSemicolonEntityName, 13, 0x021E4, 0 },
    { LeftArrowRightArrowSemicolonEntityName, 20, 0x021C6, 0 },
    { LeftCeilingSemicolonEntityName, 12, 0x02308, 0 },
    { LeftDoubleBracketSemicolonEntityName, 18, 0x027E6, 0 },
    { LeftDownTeeVectorSemicolonEntityName, 18, 0x02961, 0 },
    { LeftDownVectorSemicolonEntityName, 15, 0x021C3, 0 },
    { LeftDownVectorBarSemicolonEntityName, 18, 0x02959, 0 },
    { LeftFloorSemicolonEntityName, 10, 0x0230A, 0 },
    { LeftRightArrowSemicolonEntityName, 15, 0x02194, 0 },
    { LeftRightVectorSemicolonEntityName, 16, 0x0294E, 0 },
    { LeftTeeSemicolonEntityName, 8, 0x022A3, 0 },
    { LeftTeeArrowSemicolonEntityName, 13, 0x021A4, 0 },
    { LeftTeeVectorSemicolonEntityName, 14, 0x0295A, 0 },
    { LeftTriangleSemicolonEntityName, 13, 0x022B2, 0 },
    { LeftTriangleBarSemicolonEntityName, 16, 0x029CF, 0 },
    { LeftTriangleEqualSemicolonEntityName, 18, 0x022B4, 0 },
    { LeftUpDownVectorSemicolonEntityName, 17, 0x02951, 0 },
    { LeftUpTeeVectorSemicolonEntityName, 16, 0x02960, 0 },
    { LeftUpVectorSemicolonEntityName, 13, 0x021BF, 0 },
    { LeftUpVectorBarSemicolonEntityName, 16, 0x02958, 0 },
    { LeftVectorSemicolonEntityName, 11, 0x021BC, 0 },
    { LeftVectorBarSemicolonEntityName, 14, 0x02952, 0 },
    { LeftarrowSemicolonEntityName, 10, 0x021D0, 0 },
    { LeftrightarrowSemicolonEntityName, 15, 0x021D4, 0 },
    { LessEqualGreaterSemicolonEntityName, 17, 0x022DA, 0 },
    { LessFullEqualSemicolonEntityName, 14, 0x02266, 0 },
    { LessGreaterSemicolonEntityName, 12, 0x02276, 0 },
    { LessLessSemicolonEntityName, 9, 0x02AA1, 0 },
    { LessSlantEqualSemicolonEntityName, 15, 0x02A7D, 0 },
    { LessTildeSemicolonEntityName, 10, 0x02272, 0 },
    { LfrSemicolonEntityName, 4, 0x1D50F, 0 },
    { LlSemicolonEntityName, 3, 0x022D8, 0 },
    { LleftarrowSemicolonEntityName, 11, 0x021DA, 0 },
    { LmidotSemicolonEntityName, 7, 0x0013F, 0 },
    { LongLeftArrowSemicolonEntityName, 14, 0x027F5, 0 },
    { LongLeftRightArrowSemicolonEntityName, 19, 0x027F7, 0 },
    { LongRightArrowSemicolonEntityName, 15, 0x027F6, 0 },
    { LongleftarrowSemicolonEntityName, 14, 0x027F8, 0 },
    { LongleftrightarrowSemicolonEntityName, 19, 0x027FA, 0 },
    { LongrightarrowSemicolonEntityName, 15, 0x027F9, 0 },
    { LopfSemicolonEntityName, 5, 0x1D543, 0 },
    { LowerLeftArrowSemicolonEntityName, 15, 0x02199, 0 },
    { LowerRightArrowSemicolonEntityName, 16, 0x02198, 0 },
    { LscrSemicolonEntityName, 5, 0x02112, 0 },
    { LshSemicolonEntityName, 4, 0x021B0, 0 },
    { LstrokSemicolonEntityName, 7, 0x00141, 0 },
    { LtSemicolonEntityName, 3, 0x0226A, 0 },
    { MapSemicolonEntityName, 4, 0x02905, 0 },
    { McySemicolonEntityName, 4, 0x0041C, 0 },
    { MediumSpaceSemicolonEntityName, 12, 0x0205F, 0 },
    { MellintrfSemicolonEntityName, 10, 0x02133, 0 },
    { MfrSemicolonEntityName, 4, 0x1D510, 0 },
    { MinusPlusSemicolonEntityName, 10, 0x02213, 0 },
    { MopfSemicolonEntityName, 5, 0x1D544, 0 },
    { MscrSemicolonEntityName, 5, 0x02133, 0 },
    { MuSemicolonEntityName, 3, 0x0039C, 0 },
    { NJcySemicolonEntityName, 5, 0x0040A, 0 },
    { NacuteSemicolonEntityName, 7, 0x00143, 0 },
    { NcaronSemicolonEntityName, 7, 0x00147, 0 },
    { NcedilSemicolonEntityName, 7, 0x00145, 0 },
    { NcySemicolonEntityName, 4, 0x0041D, 0 },
    { NegativeMediumSpaceSemicolonEntityName, 20, 0x0200B, 0 },
    { NegativeThickSpaceSemicolonEntityName, 19, 0x0200B, 0 },
    { NegativeThinSpaceSemicolonEntityName, 18, 0x0200B, 0 },
    { NegativeVeryThinSpaceSemicolonEntityName, 22, 0x0200B, 0 },
    { NestedGreaterGreaterSemicolonEntityName, 21, 0x0226B, 0 },
    { NestedLessLessSemicolonEntityName, 15, 0x0226A, 0 },
    { NewLineSemicolonEntityName, 8, 0x0000A, 0 },
    { NfrSemicolonEntityName, 4, 0x1D511, 0 },
    { NoBreakSemicolonEntityName, 8, 0x02060, 0 },
    { NonBreakingSpaceSemicolonEntityName, 17, 0x000A0, 0 },
    { NopfSemicolonEntityName, 5, 0x02115, 0 },
    { NotSemicolonEntityName, 4, 0x02AEC, 0 },
    { NotCongruentSemicolonEntityName, 13, 0x02262, 0 },
    { NotCupCapSemicolonEntityName, 10, 0x0226D, 0 },
    { NotDoubleVerticalBarSemicolonEntityName, 21, 0x02226, 0 },
    { NotElementSemicolonEntityName, 11, 0x02209, 0 },
    { NotEqualSemicolonEntityName, 9, 0x02260, 0 },
    { NotEqualTildeSemicolonEntityName, 14, 0x02242, 0x00338 },
    { NotExistsSemicolonEntityName, 10, 0x02204, 0 },
    { NotGreaterSemicolonEntityName, 11, 0x0226F, 0 },
    { NotGreaterEqualSemicolonEntityName, 16, 0x02271, 0 },
    { NotGreaterFullEqualSemicolonEntityName, 20, 0x02267, 0x00338 },
    { NotGreaterGreaterSemicolonEntityName, 18, 0x0226B, 0x00338 },
    { NotGreaterLessSemicolonEntityName, 15, 0x02279, 0 },
    { NotGreaterSlantEqualSemicolonEntityName, 21, 0x02A7E, 0x00338 },
    { NotGreaterTildeSemicolonEntityName, 16, 0x02275, 0 },
    { NotHumpDownHumpSemicolonEntityName, 16, 0x0224E, 0x00338 },
    { NotHumpEqualSemicolonEntityName, 13, 0x0224F, 0x00338 },
    { NotLeftTriangleSemicolonEntityName, 16, 0x022EA, 0 },
    { NotLeftTriangleBarSemicolonEntityName, 19, 0x029CF, 0x00338 },
    { NotLeftTriangleEqualSemicolonEntityName, 21, 0x022EC, 0 },
    { NotLessSemicolonEntityName, 8, 0x0226E, 0 },
    { NotLessEqualSemicolonEntityName, 13, 0x02270, 0 },
    { NotLessGreaterSemicolonEntityName, 15, 0x02278, 0 },
    { NotLessLessSemicolonEntityName, 12, 0x0226A, 0x00338 },
    { NotLessSlantEqualSemicolonEntityName, 18, 0x02A7D, 0x00338 },
    { NotLessTildeSemicolonEntityName, 13, 0x02274, 0 },
    { NotNestedGreaterGreaterSemicolonEntityName, 24, 0x02AA2, 0x00338 },
    { NotNestedLessLessSemicolonEntityName, 18, 0x02AA1, 0x00338 },
    { NotPrecedesSemicolonEntityName, 12, 0x02280, 0 },
    { NotPrecedesEqualSemicolonEntityName, 17, 0x02AAF, 0x00338 },
    { NotPrecedesSlantEqualSemicolonEntityName, 22, 0x022E0, 0 },
    { NotReverseElementSemicolonEntityName, 18, 0x0220C, 0 },
    { NotRightTriangleSemicolonEntityName, 17, 0x022EB, 0 },
    { NotRightTriangleBarSemicolonEntityName, 20, 0x029D0, 0x00338 },
    { NotRightTriangleEqualSemicolonEntityName, 22, 0x022ED, 0 },
    { NotSquareSubsetSemicolonEntityName, 16, 0x0228F, 0x00338 },
    { NotSquareSubsetEqualSemicolonEntityName, 21, 0x022E2, 0 },
    { NotSquareSupersetSemicolonEntityName, 18, 0x02290, 0x00338 },
    { NotSquareSupersetEqualSemicolonEntityName, 23, 0x022E3, 0 },
    { NotSubsetSemicolonEntityName, 10, 0x02282, 0x020D2 },
    { NotSubsetEqualSemicolonEntityName, 15, 0x02288, 0 },
    { NotSucceedsSemicolonEntityName, 12, 0x02281, 0 },
    { NotSucceedsEqualSemicolonEntityName, 17, 0x02AB0, 0x00338 },
    { NotSucceedsSlantEqualSemicolonEntityName, 22, 0x022E1, 0 },
    { NotSucceedsTildeSemicolonEntityName, 17, 0x0227F, 0x00338 },
    { NotSupersetSemicolonEntityName, 12, 0x02283, 0x020D2 },
    { NotSupersetEqualSemicolonEntityName, 17, 0x02289, 0 },
    { NotTildeSemicolonEntityName, 9, 0x02241, 0 },
    { NotTildeEqualSemicolonEntityName, 14, 0x02244, 0 },
    { NotTildeFullEqualSemicolonEntityName, 18, 0x02247, 0 },
    { NotTildeTildeSemicolonEntityName, 14, 0x02249, 0 },
    { NotVerticalBarSemicolonEntityName, 15, 0x02224, 0 },
    { NscrSemicolonEntityName, 5, 0x1D4A9, 0 },
    { NtildeEntityName, 6, 0x000D1, 0 },
    { NtildeSemicolonEntityName, 7, 0x000D1, 0 },
    { NuSemicolonEntityName, 3, 0x0039D, 0 },
    { OEligSemicolonEntityName, 6, 0x00152, 0 },
    { OacuteEntityName, 6, 0x000D3, 0 },
    { OacuteSemicolonEntityName, 7, 0x000D3, 0 },
    { OcircEntityName, 5, 0x000D4, 0 },
    { OcircSemicolonEntityName, 6, 0x000D4, 0 },
    { OcySemicolonEntityName, 4, 0x0041E, 0 },
    { OdblacSemicolonEntityName, 7, 0x00150, 0 },
    { OfrSemicolonEntityName, 4, 0x1D512, 0 },
    { OgraveEntityName, 6, 0x000D2, 0 },
    { OgraveSemicolonEntityName, 7, 0x000D2, 0 },
    { OmacrSemicolonEntityName, 6, 0x0014C, 0 },
    { OmegaSemicolonEntityName, 6, 0x003A9, 0 },
    { OmicronSemicolonEntityName, 8, 0x0039F, 0 },
    { OopfSemicolonEntityName, 5, 0x1D546, 0 },
    { OpenCurlyDoubleQuoteSemicolonEntityName, 21, 0x0201C, 0 },
    { OpenCurlyQuoteSemicolonEntityName, 15, 0x02018, 0 },
    { OrSemicolonEntityName, 3, 0x02A54, 0 },
    { OscrSemicolonEntityName, 5, 0x1D4AA, 0 },
    { OslashEntityName, 6, 0x000D8, 0 },
    { OslashSemicolonEntityName, 7, 0x000D8, 0 },
    { OtildeEntityName, 6, 0x000D5, 0 },
    { OtildeSemicolonEntityName, 7, 0x000D5, 0 },
    { OtimesSemicolonEntityName, 7, 0x02A37, 0 },
    { OumlEntityName, 4, 0x000D6, 0 },
    { OumlSemicolonEntityName, 5, 0x000D6, 0 },
    { OverBarSemicolonEntityName, 8, 0x0203E, 0 },
    { OverBraceSemicolonEntityName, 10, 0x023DE, 0 },
    { OverBracketSemicolonEntityName, 12, 0x023B4, 0 },
    { OverParenthesisSemicolonEntityName, 16, 0x023DC, 0 },
    { PartialDSemicolonEntityName, 9, 0x02202, 0 },
    { PcySemicolonEntityName, 4, 0x0041F, 0 },
    { PfrSemicolonEntityName, 4, 0x1D513, 0 },
    { PhiSemicolonEntityName, 4, 0x003A6, 0 },
    { PiSemicolonEntityName, 3, 0x003A0, 0 },
    { PlusMinusSemicolonEntityName, 10, 0x000B1, 0 },
    { PoincareplaneSemicolonEntityName, 14, 0x0210C, 0 },
    { PopfSemicolonEntityName, 5, 0x02119, 0 },
    { PrSemicolonEntityName, 3, 0x02ABB, 0 },
    { PrecedesSemicolonEntityName, 9, 0x0227A, 0 },
    { PrecedesEqualSemicolonEntityName, 14, 0x02AAF, 0 },
    { PrecedesSlantEqualSemicolonEntityName, 19, 0x0227C, 0 },
    { PrecedesTildeSemicolonEntityName, 14, 0x0227E, 0 },
    { PrimeSemicolonEntityName, 6, 0x02033, 0 },
    { ProductSemicolonEntityName, 8, 0x0220F, 0 },
    { ProportionSemicolonEntityName, 11, 0x02237, 0 },
    { ProportionalSemicolonEntityName, 13, 0x0221D, 0 },
    { PscrSemicolonEntityName, 5, 0x1D4AB, 0 },
    { PsiSemicolonEntityName, 4, 0x003A8, 0 },
    { QUOTEntityName, 4, 0x00022, 0 },
    { QUOTSemicolonEntityName, 5, 0x00022, 0 },
    { QfrSemicolonEntityName, 4, 0x1D514, 0 },
    { QopfSemicolonEntityName, 5, 0x0211A, 0 },
    { QscrSemicolonEntityName, 5, 0x1D4AC, 0 },
    { RBarrSemicolonEntityName, 6, 0x02910, 0 },
    { REGEntityName, 3, 0x000AE, 0 },
    { REGSemicolonEntityName, 4, 0x000AE, 0 },
    { RacuteSemicolonEntityName, 7, 0x00154, 0 },
    { RangSemicolonEntityName, 5, 0x027EB, 0 },
    { RarrSemicolonEntityName, 5, 0x021A0, 0 },
    { RarrtlSemicolonEntityName, 7, 0x02916, 0 },
    { RcaronSemicolonEntityName, 7, 0x00158, 0 },
    { RcedilSemicolonEntityName, 7, 0x00156, 0 },
    { RcySemicolonEntityName, 4, 0x00420, 0 },
    { ReSemicolonEntityName, 3, 0x0211C, 0 },
    { ReverseElementSemicolonEntityName, 15, 0x0220B, 0 },
    { ReverseEquilibriumSemicolonEntityName, 19, 0x021CB, 0 },
    { ReverseUpEquilibriumSemicolonEntityName, 21, 0x0296F, 0 },
    { RfrSemicolonEntityName, 4, 0x0211C, 0 },
    { RhoSemicolonEntityName, 4, 0x003A1, 0 },
    { RightAngleBracketSemicolonEntityName, 18, 0x027E9, 0 },
    { RightArrowSemicolonEntityName, 11, 0x02192, 0 },
    { RightArrowBarSemicolonEntityName, 14, 0x021E5, 0 },
    { RightArrowLeftArrowSemicolonEntityName, 20, 0x021C4, 0 },
    { RightCeilingSemicolonEntityName, 13, 0x02309, 0 },
    { RightDoubleBracketSemicolonEntityName, 19, 0x027E7, 0 },
    { RightDownTeeVectorSemicolonEntityName, 19, 0x0295D, 0 },
    { RightDownVectorSemicolonEntityName, 16, 0x021C2, 0 },
    { RightDownVectorBarSemicolonEntityName, 19, 0x02955, 0 },
    { RightFloorSemicolonEntityName, 11, 0x0230B, 0 },
    { RightTeeSemicolonEntityName, 9, 0x022A2, 0 },
    { RightTeeArrowSemicolonEntityName, 14, 0x021A6, 0 },
    { RightTeeVectorSemicolonEntityName, 15, 0x0295B, 0 },
    { RightTriangleSemicolonEntityName, 14, 0x022B3, 0 },
    { RightTriangleBarSemicolonEntityName, 17, 0x029D0, 0 },
    { RightTriangleEqualSemicolonEntityName, 19, 0x022B5, 0 },
    { RightUpDownVectorSemicolonEntityName, 18, 0x0294F, 0 },
    { RightUpTeeVectorSemicolonEntityName, 17, 0x0295C, 0 },
    { RightUpVectorSemicolonEntityName, 14, 0x021BE, 0 },
    { RightUpVectorBarSemicolonEntityName, 17, 0x02954, 0 },
    { RightVectorSemicolonEntityName, 12, 0x021C0, 0 },
    { RightVectorBarSemicolonEntityName, 15, 0x02953, 0 },
    { RightarrowSemicolonEntityName, 11, 0x021D2, 0 },
    { RopfSemicolonEntityName, 5, 0x0211D, 0 },
    { RoundImpliesSemicolonEntityName, 13, 0x02970, 0 },
    { RrightarrowSemicolonEntityName, 12, 0x021DB, 0 },
    { RscrSemicolonEntityName, 5, 0x0211B, 0 },
    { RshSemicolonEntityName, 4, 0x021B1, 0 },
    { RuleDelayedSemicolonEntityName, 12, 0x029F4, 0 },
    { SHCHcySemicolonEntityName, 7, 0x00429, 0 },
    { SHcySemicolonEntityName, 5, 0x00428, 0 },
    { SOFTcySemicolonEntityName, 7, 0x0042C, 0 },
    { SacuteSemicolonEntityName, 7, 0x0015A, 0 },
    { ScSemicolonEntityName, 3, 0x02ABC, 0 },
    { ScaronSemicolonEntityName, 7, 0x00160, 0 },
    { ScedilSemicolonEntityName, 7, 0x0015E, 0 },
    { ScircSemicolonEntityName, 6, 0x0015C, 0 },
    { ScySemicolonEntityName, 4, 0x00421, 0 },
    { SfrSemicolonEntityName, 4, 0x1D516, 0 },
    { ShortDownArrowSemicolonEntityName, 15, 0x02193, 0 },
    { ShortLeftArrowSemicolonEntityName, 15, 0x02190, 0 },
    { ShortRightArrowSemicolonEntityName, 16, 0x02192, 0 },
    { ShortUpArrowSemicolonEntityName, 13, 0x02191, 0 },
    { SigmaSemicolonEntityName, 6, 0x003A3, 0 },
    { SmallCircleSemicolonEntityName, 12, 0x02218, 0 },
    { SopfSemicolonEntityName, 5, 0x1D54A, 0 },
    { SqrtSemicolonEntityName, 5, 0x0221A, 0 },
    { SquareSemicolonEntityName, 7, 0x025A1, 0 },
    { SquareIntersectionSemicolonEntityName, 19, 0x02293, 0 },
    { SquareSubsetSemicolonEntityName, 13, 0x0228F, 0 },
    { SquareSubsetEqualSemicolonEntityName, 18, 0x02291, 0 },
    { SquareSupersetSemicolonEntityName, 15, 0x02290, 0 },
    { SquareSupersetEqualSemicolonEntityName, 20, 0x02292, 0 },
    { SquareUnionSemicolonEntityName, 12, 0x02294, 0 },
    { SscrSemicolonEntityName, 5, 0x1D4AE, 0 },
    { StarSemicolonEntityName, 5, 0x022C6, 0 },
    { SubSemicolonEntityName, 4, 0x022D0, 0 },
    { SubsetSemicolonEntityName, 7, 0x022D0, 0 },
    { SubsetEqualSemicolonEntityName, 12, 0x02286, 0 },
    { SucceedsSemicolonEntityName, 9, 0x0227B, 0 },
    { SucceedsEqualSemicolonEntityName, 14, 0x02AB0, 0 },
    { SucceedsSlantEqualSemicolonEntityName, 19, 0x0227D, 0 },
    { SucceedsTildeSemicolonEntityName, 14, 0x0227F, 0 },
    { SuchThatSemicolonEntityName, 9, 0x0220B, 0 },
    { SumSemicolonEntityName, 4, 0x02211, 0 },
    { SupSemicolonEntityName, 4, 0x022D1, 0 },
    { SupersetSemicolonEntityName, 9, 0x02283, 0 },
    { SupersetEqualSemicolonEntityName, 14, 0x02287, 0 },
    { SupsetSemicolonEntityName, 7, 0x022D1, 0 },
    { THORNEntityName, 5, 0x000DE, 0 },
    { THORNSemicolonEntityName, 6, 0x000DE, 0 },
    { TRADESemicolonEntityName, 6, 0x02122, 0 },
    { TSHcySemicolonEntityName, 6, 0x0040B, 0 },
    { TScySemicolonEntityName, 5, 0x00426, 0 },
    { TabSemicolonEntityName, 4, 0x00009, 0 },
    { TauSemicolonEntityName, 4, 0x003A4, 0 },
    { TcaronSemicolonEntityName, 7, 0x00164, 0 },
    { TcedilSemicolonEntityName, 7, 0x00162, 0 },
    { TcySemicolonEntityName, 4, 0x00422, 0 },
    { TfrSemicolonEntityName, 4, 0x1D517, 0 },
    { ThereforeSemicolonEntityName, 10, 0x02234, 0 },
    { ThetaSemicolonEntityName, 6, 0x00398, 0 },
    { ThickSpaceSemicolonEntityName, 11, 0x0205F, 0x0200A },
    { ThinSpaceSemicolonEntityName, 10, 0x02009, 0 },
    { TildeSemicolonEntityName, 6, 0x0223C, 0 },
    { TildeEqualSemicolonEntityName, 11, 0x02243, 0 },
    { TildeFullEqualSemicolonEntityName, 15, 0x02245, 0 },
    { TildeTildeSemicolonEntityName, 11, 0x02248, 0 },
    { TopfSemicolonEntityName, 5, 0x1D54B, 0 },
    { TripleDotSemicolonEntityName, 10, 0x020DB, 0 },
    { TscrSemicolonEntityName, 5, 0x1D4AF, 0 },
    { TstrokSemicolonEntityName, 7, 0x00166, 0 },
    { UacuteEntityName, 6, 0x000DA, 0 },
    { UacuteSemicolonEntityName, 7, 0x000DA, 0 },
    { UarrSemicolonEntityName, 5, 0x0219F, 0 },
    { UarrocirSemicolonEntityName, 9, 0x02949, 0 },
    { UbrcySemicolonEntityName, 6, 0x0040E, 0 },
    { UbreveSemicolonEntityName, 7, 0x0016C, 0 },
    { UcircEntityName, 5, 0x000DB, 0 },
    { UcircSemicolonEntityName, 6, 0x000DB, 0 },
    { UcySemicolonEntityName, 4, 0x00423, 0 },
    { UdblacSemicolonEntityName, 7, 0x00170, 0 },
    { UfrSemicolonEntityName, 4, 0x1D518, 0 },
    { UgraveEntityName, 6, 0x000D9, 0 },
    { UgraveSemicolonEntityName, 7, 0x000D9, 0 },
    { UmacrSemicolonEntityName, 6, 0x0016A, 0 },
    { UnderBarSemicolonEntityName, 9, 0x0005F, 0 },
    { UnderBraceSemicolonEntityName, 11, 0x023DF, 0 },
    { UnderBracketSemicolonEntityName, 13, 0x023B5, 0 },
    { UnderParenthesisSemicolonEntityName, 17, 0x023DD, 0 },
    { UnionSemicolonEntityName, 6, 0x022C3, 0 },
    { UnionPlusSemicolonEntityName, 10, 0x0228E, 0 },
    { UogonSemicolonEntityName, 6, 0x00172, 0 },
    { UopfSemicolonEntityName, 5, 0x1D54C, 0 },
    { UpArrowSemicolonEntityName, 8, 0x02191, 0 },
    { UpArrowBarSemicolonEntityName, 11, 0x02912, 0 },
    { UpArrowDownArrowSemicolonEntityName, 17, 0x021C5, 0 },
    { UpDownArrowSemicolonEntityName, 12, 0x02195, 0 },
    { UpEquilibriumSemicolonEntityName, 14, 0x0296E, 0 },
    { UpTeeSemicolonEntityName, 6, 0x022A5, 0 },
    { UpTeeArrowSemicolonEntityName, 11, 0x021A5, 0 },
    { UparrowSemicolonEntityName, 8, 0x021D1, 0 },
    { UpdownarrowSemicolonEntityName, 12, 0x021D5, 0 },
    { UpperLeftArrowSemicolonEntityName, 15, 0x02196, 0 },
    { UpperRightArrowSemicolonEntityName, 16, 0x02197, 0 },
    { UpsiSemicolonEntityName, 5, 0x003D2, 0 },
    { UpsilonSemicolonEntityName, 8, 0x003A5, 0 },
    { UringSemicolonEntityName, 6, 0x0016E, 0 },
    { UscrSemicolonEntityName, 5, 0x1D4B0, 0 },
    { UtildeSemicolonEntityName, 7, 0x00168, 0 },
    { UumlEntityName, 4, 0x000DC, 0 },
    { UumlSemicolonEntityName, 5, 0x000DC, 0 },
    { VDashSemicolonEntityName, 6, 0x022AB, 0 },
    { VbarSemicolonEntityName, 5, 0x02AEB, 0 },
    { VcySemicolonEntityName, 4, 0x00412, 0 },
    { VdashSemicolonEntityName, 6, 0x022A9, 0 },
    { VdashlSemicolonEntityName, 7, 0x02AE6, 0 },
    { VeeSemicolonEntityName, 4, 0x022C1, 0 },
    { VerbarSemicolonEntityName, 7, 0x02016, 0 },
    { VertSemicolonEntityName, 5, 0x02016, 0 },
    { VerticalBarSemicolonEntityName, 12, 0x02223, 0 },
    { VerticalLineSemicolonEntityName, 13, 0x0007C, 0 },
    { VerticalSeparatorSemicolonEntityName, 18, 0x02758, 0 },
    { VerticalTildeSemicolonEntityName, 14, 0x02240, 0 },
    { VeryThinSpaceSemicolonEntityName, 14, 0x0200A, 0 },
    { VfrSemicolonEntityName, 4, 0x1D519, 0 },
    { VopfSemicolonEntityName, 5, 0x1D54D, 0 },
    { VscrSemicolonEntityName, 5, 0x1D4B1, 0 },
    { VvdashSemicolonEntityName, 7, 0x022AA, 0 },
    { WcircSemicolonEntityName, 6, 0x00174, 0 },
    { WedgeSemicolonEntityName, 6, 0x022C0, 0 },
    { WfrSemicolonEntityName, 4, 0x1D51A, 0 },
    { WopfSemicolonEntityName, 5, 0x1D54E, 0 },
    { WscrSemicolonEntityName, 5, 0x1D4B2, 0 },
    { XfrSemicolonEntityName, 4, 0x1D51B, 0 },
    { XiSemicolonEntityName, 3, 0x0039E, 0 },
    { XopfSemicolonEntityName, 5, 0x1D54F, 0 },
    { XscrSemicolonEntityName, 5, 0x1D4B3, 0 },
    { YAcySemicolonEntityName, 5, 0x0042F, 0 },
    { YIcySemicolonEntityName, 5, 0x00407, 0 },
    { YUcySemicolonEntityName, 5, 0x0042E, 0 },
    { YacuteEntityName, 6, 0x000DD, 0 },
    { YacuteSemicolonEntityName, 7, 0x000DD, 0 },
    { YcircSemicolonEntityName, 6, 0x00176, 0 },
    { YcySemicolonEntityName, 4, 0x0042B, 0 },
    { YfrSemicolonEntityName, 4, 0x1D51C, 0 },
    { YopfSemicolonEntityName, 5, 0x1D550, 0 },
    { YscrSemicolonEntityName, 5, 0x1D4B4, 0 },
    { YumlSemicolonEntityName, 5, 0x00178, 0 },
    { ZHcySemicolonEntityName, 5, 0x00416, 0 },
    { ZacuteSemicolonEntityName, 7, 0x00179, 0 },
    { ZcaronSemicolonEntityName, 7, 0x0017D, 0 },
    { ZcySemicolonEntityName, 4, 0x00417, 0 },
    { ZdotSemicolonEntityName, 5, 0x0017B, 0 },
    { ZeroWidthSpaceSemicolonEntityName, 15, 0x0200B, 0 },
    { ZetaSemicolonEntityName, 5, 0x00396, 0 },
    { ZfrSemicolonEntityName, 4, 0x02128, 0 },
    { ZopfSemicolonEntityName, 5, 0x02124, 0 },
    { ZscrSemicolonEntityName, 5, 0x1D4B5, 0 },
    { aacuteEntityName, 6, 0x000E1, 0 },
    { aacuteSemicolonEntityName, 7, 0x000E1, 0 },
    { abreveSemicolonEntityName, 7, 0x00103, 0 },
    { acSemicolonEntityName, 3, 0x0223E, 0 },
    { acESemicolonEntityName, 4, 0x0223E, 0x00333 },
    { acdSemicolonEntityName, 4, 0x0223F, 0 },
    { acircEntityName, 5, 0x000E2, 0 },
    { acircSemicolonEntityName, 6, 0x000E2, 0 },
    { acuteEntityName, 5, 0x000B4, 0 },
    { acuteSemicolonEntityName, 6, 0x000B4, 0 },
    { acySemicolonEntityName, 4, 0x00430, 0 },
    { aeligEntityName, 5, 0x000E6, 0 },
    { aeligSemicolonEntityName, 6, 0x000E6, 0 },
    { afSemicolonEntityName, 3, 0x02061, 0 },
    { afrSemicolonEntityName, 4, 0x1D51E, 0 },
    { agraveEntityName, 6, 0x000E0, 0 },
    { agraveSemicolonEntityName, 7, 0x000E0, 0 },
    { alefsymSemicolonEntityName, 8, 0x02135, 0 },
    { alephSemicolonEntityName, 6, 0x02135, 0 },
    { alphaSemicolonEntityName, 6, 0x003B1, 0 },
    { amacrSemicolonEntityName, 6, 0x00101, 0 },
    { amalgSemicolonEntityName, 6, 0x02A3F, 0 },
    { ampEntityName, 3, 0x00026, 0 },
    { ampSemicolonEntityName, 4, 0x00026, 0 },
    { andSemicolonEntityName, 4, 0x02227, 0 },
    { andandSemicolonEntityName, 7, 0x02A55, 0 },
    { anddSemicolonEntityName, 5, 0x02A5C, 0 },
    { andslopeSemicolonEntityName, 9, 0x02A58, 0 },
    { andvSemicolonEntityName, 5, 0x02A5A, 0 },
    { angSemicolonEntityName, 4, 0x02220, 0 },
    { angeSemicolonEntityName, 5, 0x029A4, 0 },
    { angleSemicolonEntityName, 6, 0x02220, 0 },
    { angmsdSemicolonEntityName, 7, 0x02221, 0 },
    { angmsdaaSemicolonEntityName, 9, 0x029A8, 0 },
    { angmsdabSemicolonEntityName, 9, 0x029A9, 0 },
    { angmsdacSemicolonEntityName, 9, 0x029AA, 0 },
    { angmsdadSemicolonEntityName, 9, 0x029AB, 0 },
    { angmsdaeSemicolonEntityName, 9, 0x029AC, 0 },
    { angmsdafSemicolonEntityName, 9, 0x029AD, 0 },
    { angmsdagSemicolonEntityName, 9, 0x029AE, 0 },
    { angmsdahSemicolonEntityName, 9, 0x029AF, 0 },
    { angrtSemicolonEntityName, 6, 0x0221F, 0 },
    { angrtvbSemicolonEntityName, 8, 0x022BE, 0 },
    { angrtvbdSemicolonEntityName, 9, 0x0299D, 0 },
    { angsphSemicolonEntityName, 7, 0x02222, 0 },
    { angstSemicolonEntityName, 6, 0x000C5, 0 },
    { angzarrSemicolonEntityName, 8, 0x0237C, 0 },
    { aogonSemicolonEntityName, 6, 0x00105, 0 },
    { aopfSemicolonEntityName, 5, 0x1D552, 0 },
    { apSemicolonEntityName, 3, 0x02248, 0 },
    { apESemicolonEntityName, 4, 0x02A70, 0 },
    { apacirSemicolonEntityName, 7, 0x02A6F, 0 },
    { apeSemicolonEntityName, 4, 0x0224A, 0 },
    { apidSemicolonEntityName, 5, 0x0224B, 0 },
    { aposSemicolonEntityName, 5, 0x00027, 0 },
    { approxSemicolonEntityName, 7, 0x02248, 0 },
    { approxeqSemicolonEntityName, 9, 0x0224A, 0 },
    { aringEntityName, 5, 0x000E5, 0 },
    { aringSemicolonEntityName, 6, 0x000E5, 0 },
    { ascrSemicolonEntityName, 5, 0x1D4B6, 0 },
    { astSemicolonEntityName, 4, 0x0002A, 0 },
    { asympSemicolonEntityName, 6, 0x02248, 0 },
    { asympeqSemicolonEntityName, 8, 0x0224D, 0 },
    { atildeEntityName, 6, 0x000E3, 0 },
    { atildeSemicolonEntityName, 7, 0x000E3, 0 },
    { aumlEntityName, 4, 0x000E4, 0 },
    { aumlSemicolonEntityName, 5, 0x000E4, 0 },
    { awconintSemicolonEntityName, 9, 0x02233, 0 },
    { awintSemicolonEntityName, 6, 0x02A11, 0 },
    { bNotSemicolonEntityName, 5, 0x02AED, 0 },
    { backcongSemicolonEntityName, 9, 0x0224C, 0 },
    { backepsilonSemicolonEntityName, 12, 0x003F6, 0 },
    { backprimeSemicolonEntityName, 10, 0x02035, 0 },
    { backsimSemicolonEntityName, 8, 0x0223D, 0 },
    { backsimeqSemicolonEntityName, 10, 0x022CD, 0 },
    { barveeSemicolonEntityName, 7, 0x022BD, 0 },
    { barwedSemicolonEntityName, 7, 0x02305, 0 },
    { barwedgeSemicolonEntityName, 9, 0x02305, 0 },
    { bbrkSemicolonEntityName, 5, 0x023B5, 0 },
    { bbrktbrkSemicolonEntityName, 9, 0x023B6, 0 },
    { bcongSemicolonEntityName, 6, 0x0224C, 0 },
    { bcySemicolonEntityName, 4, 0x00431, 0 },
    { bdquoSemicolonEntityName, 6, 0x0201E, 0 },
    { becausSemicolonEntityName, 7, 0x02235, 0 },
    { becauseSemicolonEntityName, 8, 0x02235, 0 },
    { bemptyvSemicolonEntityName, 8, 0x029B0, 0 },
    { bepsiSemicolonEntityName, 6, 0x003F6, 0 },
    { bernouSemicolonEntityName, 7, 0x0212C, 0 },
    { betaSemicolonEntityName, 5, 0x003B2, 0 },
    { bethSemicolonEntityName, 5, 0x02136, 0 },
    { betweenSemicolonEntityName, 8, 0x0226C, 0 },
    { bfrSemicolonEntityName, 4, 0x1D51F, 0 },
    { bigcapSemicolonEntityName, 7, 0x022C2, 0 },
    { bigcircSemicolonEntityName, 8, 0x025EF, 0 },
    { bigcupSemicolonEntityName, 7, 0x022C3, 0 },
    { bigodotSemicolonEntityName, 8, 0x02A00, 0 },
    { bigoplusSemicolonEntityName, 9, 0x02A01, 0 },
    { bigotimesSemicolonEntityName, 10, 0x02A02, 0 },
    { bigsqcupSemicolonEntityName, 9, 0x02A06, 0 },
    { bigstarSemicolonEntityName, 8, 0x02605, 0 },
    { bigtriangledownSemicolonEntityName, 16, 0x025BD, 0 },
    { bigtriangleupSemicolonEntityName, 14, 0x025B3, 0 },
    { biguplusSemicolonEntityName, 9, 0x02A04, 0 },
    { bigveeSemicolonEntityName, 7, 0x022C1, 0 },
    { bigwedgeSemicolonEntityName, 9, 0x022C0, 0 },
    { bkarowSemicolonEntityName, 7, 0x0290D, 0 },
    { blacklozengeSemicolonEntityName, 13, 0x029EB, 0 },
    { blacksquareSemicolonEntityName, 12, 0x025AA, 0 },
    { blacktriangleSemicolonEntityName, 14, 0x025B4, 0 },
    { blacktriangledownSemicolonEntityName, 18, 0x025BE, 0 },
    { blacktriangleleftSemicolonEntityName, 18, 0x025C2, 0 },
    { blacktrianglerightSemicolonEntityName, 19, 0x025B8, 0 },
    { blankSemicolonEntityName, 6, 0x02423, 0 },
    { blk12SemicolonEntityName, 6, 0x02592, 0 },
    { blk14SemicolonEntityName, 6, 0x02591, 0 },
    { blk34SemicolonEntityName, 6, 0x02593, 0 },
    { blockSemicolonEntityName, 6, 0x02588, 0 },
    { bneSemicolonEntityName, 4, 0x0003D, 0x020E5 },
    { bnequivSemicolonEntityName, 8, 0x02261, 0x020E5 },
    { bnotSemicolonEntityName, 5, 0x02310, 0 },
    { bopfSemicolonEntityName, 5, 0x1D553, 0 },
    { botSemicolonEntityName, 4, 0x022A5, 0 },
    { bottomSemicolonEntityName, 7, 0x022A5, 0 },
    { bowtieSemicolonEntityName, 7, 0x022C8, 0 },
    { boxDLSemicolonEntityName, 6, 0x02557, 0 },
    { boxDRSemicolonEntityName, 6, 0x02554, 0 },
    { boxDlSemicolonEntityName, 6, 0x02556, 0 },
    { boxDrSemicolonEntityName, 6, 0x02553, 0 },
    { boxHSemicolonEntityName, 5, 0x02550, 0 },
    { boxHDSemicolonEntityName, 6, 0x02566, 0 },
    { boxHUSemicolonEntityName, 6, 0x02569, 0 },
    { boxHdSemicolonEntityName, 6, 0x02564, 0 },
    { boxHuSemicolonEntityName, 6, 0x02567, 0 },
    { boxULSemicolonEntityName, 6, 0x0255D, 0 },
    { boxURSemicolonEntityName, 6, 0x0255A, 0 },
    { boxUlSemicolonEntityName, 6, 0x0255C, 0 },
    { boxUrSemicolonEntityName, 6, 0x02559, 0 },
    { boxVSemicolonEntityName, 5, 0x02551, 0 },
    { boxVHSemicolonEntityName, 6, 0x0256C, 0 },
    { boxVLSemicolonEntityName, 6, 0x02563, 0 },
    { boxVRSemicolonEntityName, 6, 0x02560, 0 },
    { boxVhSemicolonEntityName, 6, 0x0256B, 0 },
    { boxVlSemicolonEntityName, 6, 0x02562, 0 },
    { boxVrSemicolonEntityName, 6, 0x0255F, 0 },
    { boxboxSemicolonEntityName, 7, 0x029C9, 0 },
    { boxdLSemicolonEntityName, 6, 0x02555, 0 },
    { boxdRSemicolonEntityName, 6, 0x02552, 0 },
    { boxdlSemicolonEntityName, 6, 0x02510, 0 },
    { boxdrSemicolonEntityName, 6, 0x0250C, 0 },
    { boxhSemicolonEntityName, 5, 0x02500, 0 },
    { boxhDSemicolonEntityName, 6, 0x02565, 0 },
    { boxhUSemicolonEntityName, 6, 0x02568, 0 },
    { boxhdSemicolonEntityName, 6, 0x0252C, 0 },
    { boxhuSemicolonEntityName, 6, 0x02534, 0 },
    { boxminusSemicolonEntityName, 9, 0x0229F, 0 },
    { boxplusSemicolonEntityName, 8, 0x0229E, 0 },
    { boxtimesSemicolonEntityName, 9, 0x022A0, 0 },
    { boxuLSemicolonEntityName, 6, 0x0255B, 0 },
    { boxuRSemicolonEntityName, 6, 0x02558, 0 },
    { boxulSemicolonEntityName, 6, 0x02518, 0 },
    { boxurSemicolonEntityName, 6, 0x02514, 0 },
    { boxvSemicolonEntityName, 5, 0x02502, 0 },
    { boxvHSemicolonEntityName, 6, 0x0256A, 0 },
    { boxvLSemicolonEntityName, 6, 0x02561, 0 },
    { boxvRSemicolonEntityName, 6, 0x0255E, 0 },
    { boxvhSemicolonEntityName, 6, 0x0253C, 0 },
    { boxvlSemicolonEntityName, 6, 0x02524, 0 },
    { boxvrSemicolonEntityName, 6, 0x0251C, 0 },
    { bprimeSemicolonEntityName, 7, 0x02035, 0 },
    { breveSemicolonEntityName, 6, 0x002D8, 0 },
    { brvbarEntityName, 6, 0x000A6, 0 },
    { brvbarSemicolonEntityName, 7, 0x000A6, 0 },
    { bscrSemicolonEntityName, 5, 0x1D4B7, 0 },
    { bsemiSemicolonEntityName, 6, 0x0204F, 0 },
    { bsimSemicolonEntityName, 5, 0x0223D, 0 },
    { bsimeSemicolonEntityName, 6, 0x022CD, 0 },
    { bsolSemicolonEntityName, 5, 0x0005C, 0 },
    { bsolbSemicolonEntityName, 6, 0x029C5, 0 },
    { bsolhsubSemicolonEntityName, 9, 0x027C8, 0 },
    { bullSemicolonEntityName, 5, 0x02022, 0 },
    { bulletSemicolonEntityName, 7, 0x02022, 0 },
    { bumpSemicolonEntityName, 5, 0x0224E, 0 },
    { bumpESemicolonEntityName, 6, 0x02AAE, 0 },
    { bumpeSemicolonEntityName, 6, 0x0224F, 0 },
    { bumpeqSemicolonEntityName, 7, 0x0224F, 0 },
    { cacuteSemicolonEntityName, 7, 0x00107, 0 },
    { capSemicolonEntityName, 4, 0x02229, 0 },
    { capandSemicolonEntityName, 7, 0x02A44, 0 },
    { capbrcupSemicolonEntityName, 9, 0x02A49, 0 },
    { capcapSemicolonEntityName, 7, 0x02A4B, 0 },
    { capcupSemicolonEntityName, 7, 0x02A47, 0 },
    { capdotSemicolonEntityName, 7, 0x02A40, 0 },
    { capsSemicolonEntityName, 5, 0x02229, 0x0FE00 },
    { caretSemicolonEntityName, 6, 0x02041, 0 },
    { caronSemicolonEntityName, 6, 0x002C7, 0 },
    { ccapsSemicolonEntityName, 6, 0x02A4D, 0 },
    { ccaronSemicolonEntityName, 7, 0x0010D, 0 },
    { ccedilEntityName, 6, 0x000E7, 0 },
    { ccedilSemicolonEntityName, 7, 0x000E7, 0 },
    { ccircSemicolonEntityName, 6, 0x00109, 0 },
    { ccupsSemicolonEntityName, 6, 0x02A4C, 0 },
    { ccupssmSemicolonEntityName, 8, 0x02A50, 0 },
    { cdotSemicolonEntityName, 5, 0x0010B, 0 },
    { cedilEntityName, 5, 0x000B8, 0 },
    { cedilSemicolonEntityName, 6, 0x000B8, 0 },
    { cemptyvSemicolonEntityName, 8, 0x029B2, 0 },
    { centEntityName, 4, 0x000A2, 0 },
    { centSemicolonEntityName, 5, 0x000A2, 0 },
    { centerdotSemicolonEntityName, 10, 0x000B7, 0 },
    { cfrSemicolonEntityName, 4, 0x1D520, 0 },
    { chcySemicolonEntityName, 5, 0x00447, 0 },
    { checkSemicolonEntityName, 6, 0x02713, 0 },
    { checkmarkSemicolonEntityName, 10, 0x02713, 0 },
    { chiSemicolonEntityName, 4, 0x003C7, 0 },
    { cirSemicolonEntityName, 4, 0x025CB, 0 },
    { cirESemicolonEntityName, 5, 0x029C3, 0 },
    { circSemicolonEntityName, 5, 0x002C6, 0 },
    { circeqSemicolonEntityName, 7, 0x02257, 0 },
    { circlearrowleftSemicolonEntityName, 16, 0x021BA, 0 },
    { circlearrowrightSemicolonEntityName, 17, 0x021BB, 0 },
    { circledRSemicolonEntityName, 9, 0x000AE, 0 },
    { circledSSemicolonEntityName, 9, 0x024C8, 0 },
    { circledastSemicolonEntityName, 11, 0x0229B, 0 },
    { circledcircSemicolonEntityName, 12, 0x0229A, 0 },
    { circleddashSemicolonEntityName, 12, 0x0229D, 0 },
    { cireSemicolonEntityName, 5, 0x02257, 0 },
    { cirfnintSemicolonEntityName, 9, 0x02A10, 0 },
    { cirmidSemicolonEntityName, 7, 0x02AEF, 0 },
    { cirscirSemicolonEntityName, 8, 0x029C2, 0 },
    { clubsSemicolonEntityName, 6, 0x02663, 0 },
    { clubsuitSemicolonEntityName, 9, 0x02663, 0 },
    { colonSemicolonEntityName, 6, 0x0003A, 0 },
    { coloneSemicolonEntityName, 7, 0x02254, 0 },
    { coloneqSemicolonEntityName, 8, 0x02254, 0 },
    { commaSemicolonEntityName, 6, 0x0002C, 0 },
    { commatSemicolonEntityName, 7, 0x00040, 0 },
    { compSemicolonEntityName, 5, 0x02201, 0 },
    { compfnSemicolonEntityName, 7, 0x02218, 0 },
    { complementSemicolonEntityName, 11, 0x02201, 0 },
    { complexesSemicolonEntityName, 10, 0x02102, 0 },
    { congSemicolonEntityName, 5, 0x02245, 0 },
    { congdotSemicolonEntityName, 8, 0x02A6D, 0 },
    { conintSemicolonEntityName, 7, 0x0222E, 0 },
    { copfSemicolonEntityName, 5, 0x1D554, 0 },
    { coprodSemicolonEntityName, 7, 0x02210, 0 },
    { copyEntityName, 4, 0x000A9, 0 },
    { copySemicolonEntityName, 5, 0x000A9, 0 },
    { copysrSemicolonEntityName, 7, 0x02117, 0 },
    { crarrSemicolonEntityName, 6, 0x021B5, 0 },
    { crossSemicolonEntityName, 6, 0x02717, 0 },
    { cscrSemicolonEntityName, 5, 0x1D4B8, 0 },
    { csubSemicolonEntityName, 5, 0x02ACF, 0 },
    { csubeSemicolonEntityName, 6, 0x02AD1, 0 },
    { csupSemicolonEntityName, 5, 0x02AD0, 0 },
    { csupeSemicolonEntityName, 6, 0x02AD2, 0 },
    { ctdotSemicolonEntityName, 6, 0x022EF, 0 },
    { cudarrlSemicolonEntityName, 8, 0x02938, 0 },
    { cudarrrSemicolonEntityName, 8, 0x02935, 0 },
    { cueprSemicolonEntityName, 6, 0x022DE, 0 },
    { cuescSemicolonEntityName, 6, 0x022DF, 0 },
    { cularrSemicolonEntityName, 7, 0x021B6, 0 },
    { cularrpSemicolonEntityName, 8, 0x0293D, 0 },
    { cupSemicolonEntityName, 4, 0x0222A, 0 },
    { cupbrcapSemicolonEntityName, 9, 0x02A48, 0 },
    { cupcapSemicolonEntityName, 7, 0x02A46, 0 },
    { cupcupSemicolonEntityName, 7, 0x02A4A, 0 },
    { cupdotSemicolonEntityName, 7, 0x0228D, 0 },
    { cuporSemicolonEntityName, 6, 0x02A45, 0 },
    { cupsSemicolonEntityName, 5, 0x0222A, 0x0FE00 },
    { curarrSemicolonEntityName, 7, 0x021B7, 0 },
    { curarrmSemicolonEntityName, 8, 0x0293C, 0 },
    { curlyeqprecSemicolonEntityName, 12, 0x022DE, 0 },
    { curlyeqsuccSemicolonEntityName, 12, 0x022DF, 0 },
    { curlyveeSemicolonEntityName, 9, 0x022CE, 0 },
    { curlywedgeSemicolonEntityName, 11, 0x022CF, 0 },
    { currenEntityName, 6, 0x000A4, 0 },
    { currenSemicolonEntityName, 7, 0x000A4, 0 },
    { curvearrowleftSemicolonEntityName, 15, 0x021B6, 0 },
    { curvearrowrightSemicolonEntityName, 16, 0x021B7, 0 },
    { cuveeSemicolonEntityName, 6, 0x022CE, 0 },
    { cuwedSemicolonEntityName, 6, 0x022CF, 0 },
    { cwconintSemicolonEntityName, 9, 0x02232, 0 },
    { cwintSemicolonEntityName, 6, 0x02231, 0 },
    { cylctySemicolonEntityName, 7, 0x0232D, 0 },
    { dArrSemicolonEntityName, 5, 0x021D3, 0 },
    { dHarSemicolonEntityName, 5, 0x02965, 0 },
    { daggerSemicolonEntityName, 7, 0x02020, 0 },
    { dalethSemicolonEntityName, 7, 0x02138, 0 },
    { darrSemicolonEntityName, 5, 0x02193, 0 },
    { dashSemicolonEntityName, 5, 0x02010, 0 },
    { dashvSemicolonEntityName, 6, 0x022A3, 0 },
    { dbkarowSemicolonEntityName, 8, 0x0290F, 0 },
    { dblacSemicolonEntityName, 6, 0x002DD, 0 },
    { dcaronSemicolonEntityName, 7, 0x0010F, 0 },
    { dcySemicolonEntityName, 4, 0x00434, 0 },
    { ddSemicolonEntityName, 3, 0x02146, 0 },
    { ddaggerSemicolonEntityName, 8, 0x02021, 0 },
    { ddarrSemicolonEntityName, 6, 0x021CA, 0 },
    { ddotseqSemicolonEntityName, 8, 0x02A77, 0 },
    { degEntityName, 3, 0x000B0, 0 },
    { degSemicolonEntityName, 4, 0x000B0, 0 },
    { deltaSemicolonEntityName, 6, 0x003B4, 0 },
    { demptyvSemicolonEntityName, 8, 0x029B1, 0 },
    { dfishtSemicolonEntityName, 7, 0x0297F, 0 },
    { dfrSemicolonEntityName, 4, 0x1D521, 0 },
    { dharlSemicolonEntityName, 6, 0x021C3, 0 },
    { dharrSemicolonEntityName, 6, 0x021C2, 0 },
    { diamSemicolonEntityName, 5, 0x022C4, 0 },
    { diamondSemicolonEntityName, 8, 0x022C4, 0 },
    { diamondsuitSemicolonEntityName, 12, 0x02666, 0 },
    { diamsSemicolonEntityName, 6, 0x02666, 0 },
    { dieSemicolonEntityName, 4, 0x000A8, 0 },
    { digammaSemicolonEntityName, 8, 0x003DD, 0 },
    { disinSemicolonEntityName, 6, 0x022F2, 0 },
    { divSemicolonEntityName, 4, 0x000F7, 0 },
    { divideEntityName, 6, 0x000F7, 0 },
    { divideSemicolonEntityName, 7, 0x000F7, 0 },
    { divideontimesSemicolonEntityName, 14, 0x022C7, 0 },
    { divonxSemicolonEntityName, 7, 0x022C7, 0 },
    { djcySemicolonEntityName, 5, 0x00452, 0 },
    { dlcornSemicolonEntityName, 7, 0x0231E, 0 },
    { dlcropSemicolonEntityName, 7, 0x0230D, 0 },
    { dollarSemicolonEntityName, 7, 0x00024, 0 },
    { dopfSemicolonEntityName, 5, 0x1D555, 0 },
    { dotSemicolonEntityName, 4, 0x002D9, 0 },
    { doteqSemicolonEntityName, 6, 0x02250, 0 },
    { doteqdotSemicolonEntityName, 9, 0x02251, 0 },
    { dotminusSemicolonEntityName, 9, 0x02238, 0 },
    { dotplusSemicolonEntityName, 8, 0x02214, 0 },
    { dotsquareSemicolonEntityName, 10, 0x022A1, 0 },
    { doublebarwedgeSemicolonEntityName, 15, 0x02306, 0 },
    { downarrowSemicolonEntityName, 10, 0x02193, 0 },
    { downdownarrowsSemicolonEntityName, 15, 0x021CA, 0 },
    { downharpoonleftSemicolonEntityName, 16, 0x021C3, 0 },
    { downharpoonrightSemicolonEntityName, 17, 0x021C2, 0 },
    { drbkarowSemicolonEntityName, 9, 0x02910, 0 },
    { drcornSemicolonEntityName, 7, 0x0231F, 0 },
    { drcropSemicolonEntityName, 7, 0x0230C, 0 },
    { dscrSemicolonEntityName, 5, 0x1D4B9, 0 },
    { dscySemicolonEntityName, 5, 0x00455, 0 },
    { dsolSemicolonEntityName, 5, 0x029F6, 0 },
    { dstrokSemicolonEntityName, 7, 0x00111, 0 },
    { dtdotSemicolonEntityName, 6, 0x022F1, 0 },
    { dtriSemicolonEntityName, 5, 0x025BF, 0 },
    { dtrifSemicolonEntityName, 6, 0x025BE, 0 },
    { duarrSemicolonEntityName, 6, 0x021F5, 0 },
    { duharSemicolonEntityName, 6, 0x0296F, 0 },
    { dwangleSemicolonEntityName, 8, 0x029A6, 0 },
    { dzcySemicolonEntityName, 5, 0x0045F, 0 },
    { dzigrarrSemicolonEntityName, 9, 0x027FF, 0 },
    { eDDotSemicolonEntityName, 6, 0x02A77, 0 },
    { eDotSemicolonEntityName, 5, 0x02251, 0 },
    { eacuteEntityName, 6, 0x000E9, 0 },
    { eacuteSemicolonEntityName, 7, 0x000E9, 0 },
    { easterSemicolonEntityName, 7, 0x02A6E, 0 },
    { ecaronSemicolonEntityName, 7, 0x0011B, 0 },
    { ecirSemicolonEntityName, 5, 0x02256, 0 },
    { ecircEntityName, 5, 0x000EA, 0 },
    { ecircSemicolonEntityName, 6, 0x000EA, 0 },
    { ecolonSemicolonEntityName, 7, 0x02255, 0 },
    { ecySemicolonEntityName, 4, 0x0044D, 0 },
    { edotSemicolonEntityName, 5, 0x00117, 0 },
    { eeSemicolonEntityName, 3, 0x02147, 0 },
    { efDotSemicolonEntityName, 6, 0x02252, 0 },
    { efrSemicolonEntityName, 4, 0x1D522, 0 },
    { egSemicolonEntityName, 3, 0x02A9A, 0 },
    { egraveEntityName, 6, 0x000E8, 0 },
    { egraveSemicolonEntityName, 7, 0x000E8, 0 },
    { egsSemicolonEntityName, 4, 0x02A96, 0 },
    { egsdotSemicolonEntityName, 7, 0x02A98, 0 },
    { elSemicolonEntityName, 3, 0x02A99, 0 },
    { elintersSemicolonEntityName, 9, 0x023E7, 0 },
    { ellSemicolonEntityName, 4, 0x02113, 0 },
    { elsSemicolonEntityName, 4, 0x02A95, 0 },
    { elsdotSemicolonEntityName, 7, 0x02A97, 0 },
    { emacrSemicolonEntityName, 6, 0x00113, 0 },
    { emptySemicolonEntityName, 6, 0x02205, 0 },
    { emptysetSemicolonEntityName, 9, 0x02205, 0 },
    { emptyvSemicolonEntityName, 7, 0x02205, 0 },
    { emsp13SemicolonEntityName, 7, 0x02004, 0 },
    { emsp14SemicolonEntityName, 7, 0x02005, 0 },
    { emspSemicolonEntityName, 5, 0x02003, 0 },
    { engSemicolonEntityName, 4, 0x0014B, 0 },
    { enspSemicolonEntityName, 5, 0x02002, 0 },
    { eogonSemicolonEntityName, 6, 0x00119, 0 },
    { eopfSemicolonEntityName, 5, 0x1D556, 0 },
    { eparSemicolonEntityName, 5, 0x022D5, 0 },
    { eparslSemicolonEntityName, 7, 0x029E3, 0 },
    { eplusSemicolonEntityName, 6, 0x02A71, 0 },
    { epsiSemicolonEntityName, 5, 0x003B5, 0 },
    { epsilonSemicolonEntityName, 8, 0x003B5, 0 },
    { epsivSemicolonEntityName, 6, 0x003F5, 0 },
    { eqcircSemicolonEntityName, 7, 0x02256, 0 },
    { eqcolonSemicolonEntityName, 8, 0x02255, 0 },
    { eqsimSemicolonEntityName, 6, 0x02242, 0 },
    { eqslantgtrSemicolonEntityName, 11, 0x02A96, 0 },
    { eqslantlessSemicolonEntityName, 12, 0x02A95, 0 },
    { equalsSemicolonEntityName, 7, 0x0003D, 0 },
    { equestSemicolonEntityName, 7, 0x0225F, 0 },
    { equivSemicolonEntityName, 6, 0x02261, 0 },
    { equivDDSemicolonEntityName, 8, 0x02A78, 0 },
    { eqvparslSemicolonEntityName, 9, 0x029E5, 0 },
    { erDotSemicolonEntityName, 6, 0x02253, 0 },
    { erarrSemicolonEntityName, 6, 0x02971, 0 },
    { escrSemicolonEntityName, 5, 0x0212F, 0 },
    { esdotSemicolonEntityName, 6, 0x02250, 0 },
    { esimSemicolonEntityName, 5, 0x02242, 0 },
    { etaSemicolonEntityName, 4, 0x003B7, 0 },
    { ethEntityName, 3, 0x000F0, 0 },
    { ethSemicolonEntityName, 4, 0x000F0, 0 },
    { eumlEntityName, 4, 0x000EB, 0 },
    { eumlSemicolonEntityName, 5, 0x000EB, 0 },
    { euroSemicolonEntityName, 5, 0x020AC, 0 },
    { exclSemicolonEntityName, 5, 0x00021, 0 },
    { existSemicolonEntityName, 6, 0x02203, 0 },
    { expectationSemicolonEntityName, 12, 0x02130, 0 },
    { exponentialeSemicolonEntityName, 13, 0x02147, 0 },
    { fallingdotseqSemicolonEntityName, 14, 0x02252, 0 },
    { fcySemicolonEntityName, 4, 0x00444, 0 },
    { femaleSemicolonEntityName, 7, 0x02640, 0 },
    { ffiligSemicolonEntityName, 7, 0x0FB03, 0 },
    { ffligSemicolonEntityName, 6, 0x0FB00, 0 },
    { fflligSemicolonEntityName, 7, 0x0FB04, 0 },
    { ffrSemicolonEntityName, 4, 0x1D523, 0 },
    { filigSemicolonEntityName, 6, 0x0FB01, 0 },
    { fjligSemicolonEntityName, 6, 0x00066, 0x0006A },
    { flatSemicolonEntityName, 5, 0x0266D, 0 },
    { flligSemicolonEntityName, 6, 0x0FB02, 0 },
    { fltnsSemicolonEntityName, 6, 0x025B1, 0 },
    { fnofSemicolonEntityName, 5, 0x00192, 0 },
    { fopfSemicolonEntityName, 5, 0x1D557, 0 },
    { forallSemicolonEntityName, 7, 0x02200, 0 },
    { forkSemicolonEntityName, 5, 0x022D4, 0 },
    { forkvSemicolonEntityName, 6, 0x02AD9, 0 },
    { fpartintSemicolonEntityName, 9, 0x02A0D, 0 },
    { frac12EntityName, 6, 0x000BD, 0 },
    { frac12SemicolonEntityName, 7, 0x000BD, 0 },
    { frac13SemicolonEntityName, 7, 0x02153, 0 },
    { frac14EntityName, 6, 0x000BC, 0 },
    { frac14SemicolonEntityName, 7, 0x000BC, 0 },
    { frac15SemicolonEntityName, 7, 0x02155, 0 },
    { frac16SemicolonEntityName, 7, 0x02159, 0 },
    { frac18SemicolonEntityName, 7, 0x0215B, 0 },
    { frac23SemicolonEntityName, 7, 0x02154, 0 },
    { frac25SemicolonEntityName, 7, 0x02156, 0 },
    { frac34EntityName, 6, 0x000BE, 0 },
    { frac34SemicolonEntityName, 7, 0x000BE, 0 },
    { frac35SemicolonEntityName, 7, 0x02157, 0 },
    { frac38SemicolonEntityName, 7, 0x0215C, 0 },
    { frac45SemicolonEntityName, 7, 0x02158, 0 },
    { frac56SemicolonEntityName, 7, 0x0215A, 0 },
    { frac58SemicolonEntityName, 7, 0x0215D, 0 },
    { frac78SemicolonEntityName, 7, 0x0215E, 0 },
    { fraslSemicolonEntityName, 6, 0x02044, 0 },
    { frownSemicolonEntityName, 6, 0x02322, 0 },
    { fscrSemicolonEntityName, 5, 0x1D4BB, 0 },
    { gESemicolonEntityName, 3, 0x02267, 0 },
    { gElSemicolonEntityName, 4, 0x02A8C, 0 },
    { gacuteSemicolonEntityName, 7, 0x001F5, 0 },
    { gammaSemicolonEntityName, 6, 0x003B3, 0 },
    { gammadSemicolonEntityName, 7, 0x003DD, 0 },
    { gapSemicolonEntityName, 4, 0x02A86, 0 },
    { gbreveSemicolonEntityName, 7, 0x0011F, 0 },
    { gcircSemicolonEntityName, 6, 0x0011D, 0 },
    { gcySemicolonEntityName, 4, 0x00433, 0 },
    { gdotSemicolonEntityName, 5, 0x00121, 0 },
    { geSemicolonEntityName, 3, 0x02265, 0 },
    { gelSemicolonEntityName, 4, 0x022DB, 0 },
    { geqSemicolonEntityName, 4, 0x02265, 0 },
    { geqqSemicolonEntityName, 5, 0x02267, 0 },
    { geqslantSemicolonEntityName, 9, 0x02A7E, 0 },
    { gesSemicolonEntityName, 4, 0x02A7E, 0 },
    { gesccSemicolonEntityName, 6, 0x02AA9, 0 },
    { gesdotSemicolonEntityName, 7, 0x02A80, 0 },
    { gesdotoSemicolonEntityName, 8, 0x02A82, 0 },
    { gesdotolSemicolonEntityName, 9, 0x02A84, 0 },
    { geslSemicolonEntityName, 5, 0x022DB, 0x0FE00 },
    { geslesSemicolonEntityName, 7, 0x02A94, 0 },
    { gfrSemicolonEntityName, 4, 0x1D524, 0 },
    { ggSemicolonEntityName, 3, 0x0226B, 0 },
    { gggSemicolonEntityName, 4, 0x022D9, 0 },
    { gimelSemicolonEntityName, 6, 0x02137, 0 },
    { gjcySemicolonEntityName, 5, 0x00453, 0 },
    { glSemicolonEntityName, 3, 0x02277, 0 },
    { glESemicolonEntityName, 4, 0x02A92, 0 },
    { glaSemicolonEntityName, 4, 0x02AA5, 0 },
    { gljSemicolonEntityName, 4, 0x02AA4, 0 },
    { gnESemicolonEntityName, 4, 0x02269, 0 },
    { gnapSemicolonEntityName, 5, 0x02A8A, 0 },
    { gnapproxSemicolonEntityName, 9, 0x02A8A, 0 },
    { gneSemicolonEntityName, 4, 0x02A88, 0 },
    { gneqSemicolonEntityName, 5, 0x02A88, 0 },
    { gneqqSemicolonEntityName, 6, 0x02269, 0 },
    { gnsimSemicolonEntityName, 6, 0x022E7, 0 },
    { gopfSemicolonEntityName, 5, 0x1D558, 0 },
    { graveSemicolonEntityName, 6, 0x00060, 0 },
    { gscrSemicolonEntityName, 5, 0x0210A, 0 },
    { gsimSemicolonEntityName, 5, 0x02273, 0 },
    { gsimeSemicolonEntityName, 6, 0x02A8E, 0 },
    { gsimlSemicolonEntityName, 6, 0x02A90, 0 },
    { gtEntityName, 2, 0x0003E, 0 },
    { gtSemicolonEntityName, 3, 0x0003E, 0 },
    { gtccSemicolonEntityName, 5, 0x02AA7, 0 },
    { gtcirSemicolonEntityName, 6, 0x02A7A, 0 },
    { gtdotSemicolonEntityName, 6, 0x022D7, 0 },
    { gtlParSemicolonEntityName, 7, 0x02995, 0 },
    { gtquestSemicolonEntityName, 8, 0x02A7C, 0 },
    { gtrapproxSemicolonEntityName, 10, 0x02A86, 0 },
    { gtrarrSemicolonEntityName, 7, 0x02978, 0 },
    { gtrdotSemicolonEntityName, 7, 0x022D7, 0 },
    { gtreqlessSemicolonEntityName, 10, 0x022DB, 0 },
    { gtreqqlessSemicolonEntityName, 11, 0x02A8C, 0 },
    { gtrlessSemicolonEntityName, 8, 0x02277, 0 },
    { gtrsimSemicolonEntityName, 7, 0x02273, 0 },
    { gvertneqqSemicolonEntityName, 10, 0x02269, 0x0FE00 },
    { gvnESemicolonEntityName, 5, 0x02269, 0x0FE00 },
    { hArrSemicolonEntityName, 5, 0x021D4, 0 },
    { hairspSemicolonEntityName, 7, 0x0200A, 0 },
    { halfSemicolonEntityName, 5, 0x000BD, 0 },
    { hamiltSemicolonEntityName, 7, 0x0210B, 0 },
    { hardcySemicolonEntityName, 7, 0x0044A, 0 },
    { harrSemicolonEntityName, 5, 0x02194, 0 },
    { harrcirSemicolonEntityName, 8, 0x02948, 0 },
    { harrwSemicolonEntityName, 6, 0x021AD, 0 },
    { hbarSemicolonEntityName, 5, 0x0210F, 0 },
    { hcircSemicolonEntityName, 6, 0x00125, 0 },
    { heartsSemicolonEntityName, 7, 0x02665, 0 },
    { heartsuitSemicolonEntityName, 10, 0x02665, 0 },
    { hellipSemicolonEntityName, 7, 0x02026, 0 },
    { herconSemicolonEntityName, 7, 0x022B9, 0 },
    { hfrSemicolonEntityName, 4, 0x1D525, 0 },
    { hksearowSemicolonEntityName, 9, 0x02925, 0 },
    { hkswarowSemicolonEntityName, 9, 0x02926, 0 },
    { hoarrSemicolonEntityName, 6, 0x021FF, 0 },
    { homthtSemicolonEntityName, 7, 0x0223B, 0 },
    { hookleftarrowSemicolonEntityName, 14, 0x021A9, 0 },
    { hookrightarrowSemicolonEntityName, 15, 0x021AA, 0 },
    { hopfSemicolonEntityName, 5, 0x1D559, 0 },
    { horbarSemicolonEntityName, 7, 0x02015, 0 },
    { hscrSemicolonEntityName, 5, 0x1D4BD, 0 },
    { hslashSemicolonEntityName, 7, 0x0210F, 0 },
    { hstrokSemicolonEntityName, 7, 0x00127, 0 },
    { hybullSemicolonEntityName, 7, 0x02043, 0 },
    { hyphenSemicolonEntityName, 7, 0x02010, 0 },
    { iacuteEntityName, 6, 0x000ED, 0 },
    { iacuteSemicolonEntityName, 7, 0x000ED, 0 },
    { icSemicolonEntityName, 3, 0x02063, 0 },
    { icircEntityName, 5, 0x000EE, 0 },
    { icircSemicolonEntityName, 6, 0x000EE, 0 },
    { icySemicolonEntityName, 4, 0x00438, 0 },
    { iecySemicolonEntityName, 5, 0x00435, 0 },
    { iexclEntityName, 5, 0x000A1, 0 },
    { iexclSemicolonEntityName, 6, 0x000A1, 0 },
    { iffSemicolonEntityName, 4, 0x021D4, 0 },
    { ifrSemicolonEntityName, 4, 0x1D526, 0 },
    { igraveEntityName, 6, 0x000EC, 0 },
    { igraveSemicolonEntityName, 7, 0x000EC, 0 },
    { iiSemicolonEntityName, 3, 0x02148, 0 },
    { iiiintSemicolonEntityName, 7, 0x02A0C, 0 },
    { iiintSemicolonEntityName, 6, 0x0222D, 0 },
    { iinfinSemicolonEntityName, 7, 0x029DC, 0 },
    { iiotaSemicolonEntityName, 6, 0x02129, 0 },
    { ijligSemicolonEntityName, 6, 0x00133, 0 },
    { imacrSemicolonEntityName, 6, 0x0012B, 0 },
    { imageSemicolonEntityName, 6, 0x02111, 0 },
    { imaglineSemicolonEntityName, 9, 0x02110, 0 },
    { imagpartSemicolonEntityName, 9, 0x02111, 0 },
    { imathSemicolonEntityName, 6, 0x00131, 0 },
    { imofSemicolonEntityName, 5, 0x022B7, 0 },
    { impedSemicolonEntityName, 6, 0x001B5, 0 },
    { inSemicolonEntityName, 3, 0x02208, 0 },
    { incareSemicolonEntityName, 7, 0x02105, 0 },
    { infinSemicolonEntityName, 6, 0x0221E, 0 },
    { infintieSemicolonEntityName, 9, 0x029DD, 0 },
    { inodotSemicolonEntityName, 7, 0x00131, 0 },
    { intSemicolonEntityName, 4, 0x0222B, 0 },
    { intcalSemicolonEntityName, 7, 0x022BA, 0 },
    { integersSemicolonEntityName, 9, 0x02124, 0 },
    { intercalSemicolonEntityName, 9, 0x022BA, 0 },
    { intlarhkSemicolonEntityName, 9, 0x02A17, 0 },
    { intprodSemicolonEntityName, 8, 0x02A3C, 0 },
    { iocySemicolonEntityName, 5, 0x00451, 0 },
    { iogonSemicolonEntityName, 6, 0x0012F, 0 },
    { iopfSemicolonEntityName, 5, 0x1D55A, 0 },
    { iotaSemicolonEntityName, 5, 0x003B9, 0 },
    { iprodSemicolonEntityName, 6, 0x02A3C, 0 },
    { iquestEntityName, 6, 0x000BF, 0 },
    { iquestSemicolonEntityName, 7, 0x000BF, 0 },
    { iscrSemicolonEntityName, 5, 0x1D4BE, 0 },
    { isinSemicolonEntityName, 5, 0x02208, 0 },
    { isinESemicolonEntityName, 6, 0x022F9, 0 },
    { isindotSemicolonEntityName, 8, 0x022F5, 0 },
    { isinsSemicolonEntityName, 6, 0x022F4, 0 },
    { isinsvSemicolonEntityName, 7, 0x022F3, 0 },
    { isinvSemicolonEntityName, 6, 0x02208, 0 },
    { itSemicolonEntityName, 3, 0x02062, 0 },
    { itildeSemicolonEntityName, 7, 0x00129, 0 },
    { iukcySemicolonEntityName, 6, 0x00456, 0 },
    { iumlEntityName, 4, 0x000EF, 0 },
    { iumlSemicolonEntityName, 5, 0x000EF, 0 },
    { jcircSemicolonEntityName, 6, 0x00135, 0 },
    { jcySemicolonEntityName, 4, 0x00439, 0 },
    { jfrSemicolonEntityName, 4, 0x1D527, 0 },
    { jmathSemicolonEntityName, 6, 0x00237, 0 },
    { jopfSemicolonEntityName, 5, 0x1D55B, 0 },
    { jscrSemicolonEntityName, 5, 0x1D4BF, 0 },
    { jsercySemicolonEntityName, 7, 0x00458, 0 },
    { jukcySemicolonEntityName, 6, 0x00454, 0 },
    { kappaSemicolonEntityName, 6, 0x003BA, 0 },
    { kappavSemicolonEntityName, 7, 0x003F0, 0 },
    { kcedilSemicolonEntityName, 7, 0x00137, 0 },
    { kcySemicolonEntityName, 4, 0x0043A, 0 },
    { kfrSemicolonEntityName, 4, 0x1D528, 0 },
    { kgreenSemicolonEntityName, 7, 0x00138, 0 },
    { khcySemicolonEntityName, 5, 0x00445, 0 },
    { kjcySemicolonEntityName, 5, 0x0045C, 0 },
    { kopfSemicolonEntityName, 5, 0x1D55C, 0 },
    { kscrSemicolonEntityName, 5, 0x1D4C0, 0 },
    { lAarrSemicolonEntityName, 6, 0x021DA, 0 },
    { lArrSemicolonEntityName, 5, 0x021D0, 0 },
    { lAtailSemicolonEntityName, 7, 0x0291B, 0 },
    { lBarrSemicolonEntityName, 6, 0x0290E, 0 },
    { lESemicolonEntityName, 3, 0x02266, 0 },
    { lEgSemicolonEntityName, 4, 0x02A8B, 0 },
    { lHarSemicolonEntityName, 5, 0x02962, 0 },
    { lacuteSemicolonEntityName, 7, 0x0013A, 0 },
    { laemptyvSemicolonEntityName, 9, 0x029B4, 0 },
    { lagranSemicolonEntityName, 7, 0x02112, 0 },
    { lambdaSemicolonEntityName, 7, 0x003BB, 0 },
    { langSemicolonEntityName, 5, 0x027E8, 0 },
    { langdSemicolonEntityName, 6, 0x02991, 0 },
    { langleSemicolonEntityName, 7, 0x027E8, 0 },
    { lapSemicolonEntityName, 4, 0x02A85, 0 },
    { laquoEntityName, 5, 0x000AB, 0 },
    { laquoSemicolonEntityName, 6, 0x000AB, 0 },
    { larrSemicolonEntityName, 5, 0x02190, 0 },
    { larrbSemicolonEntityName, 6, 0x021E4, 0 },
    { larrbfsSemicolonEntityName, 8, 0x0291F, 0 },
    { larrfsSemicolonEntityName, 7, 0x0291D, 0 },
    { larrhkSemicolonEntityName, 7, 0x021A9, 0 },
    { larrlpSemicolonEntityName, 7, 0x021AB, 0 },
    { larrplSemicolonEntityName, 7, 0x02939, 0 },
    { larrsimSemicolonEntityName, 8, 0x02973, 0 },
    { larrtlSemicolonEntityName, 7, 0x021A2, 0 },
    { latSemicolonEntityName, 4, 0x02AAB, 0 },
    { latailSemicolonEntityName, 7, 0x02919, 0 },
    { lateSemicolonEntityName, 5, 0x02AAD, 0 },
    { latesSemicolonEntityName, 6, 0x02AAD, 0x0FE00 },
    { lbarrSemicolonEntityName, 6, 0x0290C, 0 },
    { lbbrkSemicolonEntityName, 6, 0x02772, 0 },
    { lbraceSemicolonEntityName, 7, 0x0007B, 0 },
    { lbrackSemicolonEntityName, 7, 0x0005B, 0 },
    { lbrkeSemicolonEntityName, 6, 0x0298B, 0 },
    { lbrksldSemicolonEntityName, 8, 0x0298F, 0 },
    { lbrksluSemicolonEntityName, 8, 0x0298D, 0 },
    { lcaronSemicolonEntityName, 7, 0x0013E, 0 },
    { lcedilSemicolonEntityName, 7, 0x0013C, 0 },
    { lceilSemicolonEntityName, 6, 0x02308, 0 },
    { lcubSemicolonEntityName, 5, 0x0007B, 0 },
    { lcySemicolonEntityName, 4, 0x0043B, 0 },
    { ldcaSemicolonEntityName, 5, 0x02936, 0 },
    { ldquoSemicolonEntityName, 6, 0x0201C, 0 },
    { ldquorSemicolonEntityName, 7, 0x0201E, 0 },
    { ldrdharSemicolonEntityName, 8, 0x02967, 0 },
    { ldrusharSemicolonEntityName, 9, 0x0294B, 0 },
    { ldshSemicolonEntityName, 5, 0x021B2, 0 },
    { leSemicolonEntityName, 3, 0x02264, 0 },
    { leftarrowSemicolonEntityName, 10, 0x02190, 0 },
    { leftarrowtailSemicolonEntityName, 14, 0x021A2, 0 },
    { leftharpoondownSemicolonEntityName, 16, 0x021BD, 0 },
    { leftharpoonupSemicolonEntityName, 14, 0x021BC, 0 },
    { leftleftarrowsSemicolonEntityName, 15, 0x021C7, 0 },
    { leftrightarrowSemicolonEntityName, 15, 0x02194, 0 },
    { leftrightarrowsSemicolonEntityName, 16, 0x021C6, 0 },
    { leftrightharpoonsSemicolonEntityName, 18, 0x021CB, 0 },
    { leftrightsquigarrowSemicolonEntityName, 20, 0x021AD, 0 },
    { leftthreetimesSemicolonEntityName, 15, 0x022CB, 0 },
    { legSemicolonEntityName, 4, 0x022DA, 0 },
    { leqSemicolonEntityName, 4, 0x02264, 0 },
    { leqqSemicolonEntityName, 5, 0x02266, 0 },
    { leqslantSemicolonEntityName, 9, 0x02A7D, 0 },
    { lesSemicolonEntityName, 4, 0x02A7D, 0 },
    { lesccSemicolonEntityName, 6, 0x02AA8, 0 },
    { lesdotSemicolonEntityName, 7, 0x02A7F, 0 },
    { lesdotoSemicolonEntityName, 8, 0x02A81, 0 },
    { lesdotorSemicolonEntityName, 9, 0x02A83, 0 },
    { lesgSemicolonEntityName, 5, 0x022DA, 0x0FE00 },
    { lesgesSemicolonEntityName, 7, 0x02A93, 0 },
    { lessapproxSemicolonEntityName, 11, 0x02A85, 0 },
    { lessdotSemicolonEntityName, 8, 0x022D6, 0 },
    { lesseqgtrSemicolonEntityName, 10, 0x022DA, 0 },
    { lesseqqgtrSemicolonEntityName, 11, 0x02A8B, 0 },
    { lessgtrSemicolonEntityName, 8, 0x02276, 0 },
    { lesssimSemicolonEntityName, 8, 0x02272, 0 },
    { lfishtSemicolonEntityName, 7, 0x0297C, 0 },
    { lfloorSemicolonEntityName, 7, 0x0230A, 0 },
    { lfrSemicolonEntityName, 4, 0x1D529, 0 },
    { lgSemicolonEntityName, 3, 0x02276, 0 },
    { lgESemicolonEntityName, 4, 0x02A91, 0 },
    { lhardSemicolonEntityName, 6, 0x021BD, 0 },
    { lharuSemicolonEntityName, 6, 0x021BC, 0 },
    { lharulSemicolonEntityName, 7, 0x0296A, 0 },
    { lhblkSemicolonEntityName, 6, 0x02584, 0 },
    { ljcySemicolonEntityName, 5, 0x00459, 0 },
    { llSemicolonEntityName, 3, 0x0226A, 0 },
    { llarrSemicolonEntityName, 6, 0x021C7, 0 },
    { llcornerSemicolonEntityName, 9, 0x0231E, 0 },
    { llhardSemicolonEntityName, 7, 0x0296B, 0 },
    { lltriSemicolonEntityName, 6, 0x025FA, 0 },
    { lmidotSemicolonEntityName, 7, 0x00140, 0 },
    { lmoustSemicolonEntityName, 7, 0x023B0, 0 },
    { lmoustacheSemicolonEntityName, 11, 0x023B0, 0 },
    { lnESemicolonEntityName, 4, 0x02268, 0 },
    { lnapSemicolonEntityName, 5, 0x02A89, 0 },
    { lnapproxSemicolonEntityName, 9, 0x02A89, 0 },
    { lneSemicolonEntityName, 4, 0x02A87, 0 },
    { lneqSemicolonEntityName, 5, 0x02A87, 0 },
    { lneqqSemicolonEntityName, 6, 0x02268, 0 },
    { lnsimSemicolonEntityName, 6, 0x022E6, 0 },
    { loangSemicolonEntityName, 6, 0x027EC, 0 },
    { loarrSemicolonEntityName, 6, 0x021FD, 0 },
    { lobrkSemicolonEntityName, 6, 0x027E6, 0 },
    { longleftarrowSemicolonEntityName, 14, 0x027F5, 0 },
    { longleftrightarrowSemicolonEntityName, 19, 0x027F7, 0 },
    { longmapstoSemicolonEntityName, 11, 0x027FC, 0 },
    { longrightarrowSemicolonEntityName, 15, 0x027F6, 0 },
    { looparrowleftSemicolonEntityName, 14, 0x021AB, 0 },
    { looparrowrightSemicolonEntityName, 15, 0x021AC, 0 },
    { loparSemicolonEntityName, 6, 0x02985, 0 },
    { lopfSemicolonEntityName, 5, 0x1D55D, 0 },
    { loplusSemicolonEntityName, 7, 0x02A2D, 0 },
    { lotimesSemicolonEntityName, 8, 0x02A34, 0 },
    { lowastSemicolonEntityName, 7, 0x02217, 0 },
    { lowbarSemicolonEntityName, 7, 0x0005F, 0 },
    { lozSemicolonEntityName, 4, 0x025CA, 0 },
    { lozengeSemicolonEntityName, 8, 0x025CA, 0 },
    { lozfSemicolonEntityName, 5, 0x029EB, 0 },
    { lparSemicolonEntityName, 5, 0x00028, 0 },
    { lparltSemicolonEntityName, 7, 0x02993, 0 },
    { lrarrSemicolonEntityName, 6, 0x021C6, 0 },
    { lrcornerSemicolonEntityName, 9, 0x0231F, 0 },
    { lrharSemicolonEntityName, 6, 0x021CB, 0 },
    { lrhardSemicolonEntityName, 7, 0x0296D, 0 },
    { lrmSemicolonEntityName, 4, 0x0200E, 0 },
    { lrtriSemicolonEntityName, 6, 0x022BF, 0 },
    { lsaquoSemicolonEntityName, 7, 0x02039, 0 },
    { lscrSemicolonEntityName, 5, 0x1D4C1, 0 },
    { lshSemicolonEntityName, 4, 0x021B0, 0 },
    { lsimSemicolonEntityName, 5, 0x02272, 0 },
    { lsimeSemicolonEntityName, 6, 0x02A8D, 0 },
    { lsimgSemicolonEntityName, 6, 0x02A8F, 0 },
    { lsqbSemicolonEntityName, 5, 0x0005B, 0 },
    { lsquoSemicolonEntityName, 6, 0x02018, 0 },
    { lsquorSemicolonEntityName, 7, 0x0201A, 0 },
    { lstrokSemicolonEntityName, 7, 0x00142, 0 },
    { ltEntityName, 2, 0x0003C, 0 },
    { ltSemicolonEntityName, 3, 0x0003C, 0 },
    { ltccSemicolonEntityName, 5, 0x02AA6, 0 },
    { ltcirSemicolonEntityName, 6, 0x02A79, 0 },
    { ltdotSemicolonEntityName, 6, 0x022D6, 0 },
    { lthreeSemicolonEntityName, 7, 0x022CB, 0 },
    { ltimesSemicolonEntityName, 7, 0x022C9, 0 },
    { ltlarrSemicolonEntityName, 7, 0x02976, 0 },
    { ltquestSemicolonEntityName, 8, 0x02A7B, 0 },
    { ltrParSemicolonEntityName, 7, 0x02996, 0 },
    { ltriSemicolonEntityName, 5, 0x025C3, 0 },
    { ltrieSemicolonEntityName, 6, 0x022B4, 0 },
    { ltrifSemicolonEntityName, 6, 0x025C2, 0 },
    { lurdsharSemicolonEntityName, 9, 0x0294A, 0 },
    { luruharSemicolonEntityName, 8, 0x02966, 0 },
    { lvertneqqSemicolonEntityName, 10, 0x02268, 0x0FE00 },
    { lvnESemicolonEntityName, 5, 0x02268, 0x0FE00 },
    { mDDotSemicolonEntityName, 6, 0x0223A, 0 },
    { macrEntityName, 4, 0x000AF, 0 },
    { macrSemicolonEntityName, 5, 0x000AF, 0 },
    { maleSemicolonEntityName, 5, 0x02642, 0 },
    { maltSemicolonEntityName, 5, 0x02720, 0 },
    { malteseSemicolonEntityName, 8, 0x02720, 0 },
    { mapSemicolonEntityName, 4, 0x021A6, 0 },
    { mapstoSemicolonEntityName, 7, 0x021A6, 0 },
    { mapstodownSemicolonEntityName, 11, 0x021A7, 0 },
    { mapstoleftSemicolonEntityName, 11, 0x021A4, 0 },
    { mapstoupSemicolonEntityName, 9, 0x021A5, 0 },
    { markerSemicolonEntityName, 7, 0x025AE, 0 },
    { mcommaSemicolonEntityName, 7, 0x02A29, 0 },
    { mcySemicolonEntityName, 4, 0x0043C, 0 },
    { mdashSemicolonEntityName, 6, 0x02014, 0 },
    { measuredangleSemicolonEntityName, 14, 0x02221, 0 },
    { mfrSemicolonEntityName, 4, 0x1D52A, 0 },
    { mhoSemicolonEntityName, 4, 0x02127, 0 },
    { microEntityName, 5, 0x000B5, 0 },
    { microSemicolonEntityName, 6, 0x000B5, 0 },
    { midSemicolonEntityName, 4, 0x02223, 0 },
    { midastSemicolonEntityName, 7, 0x0002A, 0 },
    { midcirSemicolonEntityName, 7, 0x02AF0, 0 },
    { middotEntityName, 6, 0x000B7, 0 },
    { middotSemicolonEntityName, 7, 0x000B7, 0 },
    { minusSemicolonEntityName, 6, 0x02212, 0 },
    { minusbSemicolonEntityName, 7, 0x0229F, 0 },
    { minusdSemicolonEntityName, 7, 0x02238, 0 },
    { minusduSemicolonEntityName, 8, 0x02A2A, 0 },
    { mlcpSemicolonEntityName, 5, 0x02ADB, 0 },
    { mldrSemicolonEntityName, 5, 0x02026, 0 },
    { mnplusSemicolonEntityName, 7, 0x02213, 0 },
    { modelsSemicolonEntityName, 7, 0x022A7, 0 },
    { mopfSemicolonEntityName, 5, 0x1D55E, 0 },
    { mpSemicolonEntityName, 3, 0x02213, 0 },
    { mscrSemicolonEntityName, 5, 0x1D4C2, 0 },
    { mstposSemicolonEntityName, 7, 0x0223E, 0 },
    { muSemicolonEntityName, 3, 0x003BC, 0 },
    { multimapSemicolonEntityName, 9, 0x022B8, 0 },
    { mumapSemicolonEntityName, 6, 0x022B8, 0 },
    { nGgSemicolonEntityName, 4, 0x022D9, 0x00338 },
    { nGtSemicolonEntityName, 4, 0x0226B, 0x020D2 },
    { nGtvSemicolonEntityName, 5, 0x0226B, 0x00338 },
    { nLeftarrowSemicolonEntityName, 11, 0x021CD, 0 },
    { nLeftrightarrowSemicolonEntityName, 16, 0x021CE, 0 },
    { nLlSemicolonEntityName, 4, 0x022D8, 0x00338 },
    { nLtSemicolonEntityName, 4, 0x0226A, 0x020D2 },
    { nLtvSemicolonEntityName, 5, 0x0226A, 0x00338 },
    { nRightarrowSemicolonEntityName, 12, 0x021CF, 0 },
    { nVDashSemicolonEntityName, 7, 0x022AF, 0 },
    { nVdashSemicolonEntityName, 7, 0x022AE, 0 },
    { nablaSemicolonEntityName, 6, 0x02207, 0 },
    { nacuteSemicolonEntityName, 7, 0x00144, 0 },
    { nangSemicolonEntityName, 5, 0x02220, 0x020D2 },
    { napSemicolonEntityName, 4, 0x02249, 0 },
    { napESemicolonEntityName, 5, 0x02A70, 0x00338 },
    { napidSemicolonEntityName, 6, 0x0224B, 0x00338 },
    { naposSemicolonEntityName, 6, 0x00149, 0 },
    { napproxSemicolonEntityName, 8, 0x02249, 0 },
    { naturSemicolonEntityName, 6, 0x0266E, 0 },
    { naturalSemicolonEntityName, 8, 0x0266E, 0 },
    { naturalsSemicolonEntityName, 9, 0x02115, 0 },
    { nbspEntityName, 4, 0x000A0, 0 },
    { nbspSemicolonEntityName, 5, 0x000A0, 0 },
    { nbumpSemicolonEntityName, 6, 0x0224E, 0x00338 },
    { nbumpeSemicolonEntityName, 7, 0x0224F, 0x00338 },
    { ncapSemicolonEntityName, 5, 0x02A43, 0 },
    { ncaronSemicolonEntityName, 7, 0x00148, 0 },
    { ncedilSemicolonEntityName, 7, 0x00146, 0 },
    { ncongSemicolonEntityName, 6, 0x02247, 0 },
    { ncongdotSemicolonEntityName, 9, 0x02A6D, 0x00338 },
    { ncupSemicolonEntityName, 5, 0x02A42, 0 },
    { ncySemicolonEntityName, 4, 0x0043D, 0 },
    { ndashSemicolonEntityName, 6, 0x02013, 0 },
    { neSemicolonEntityName, 3, 0x02260, 0 },
    { neArrSemicolonEntityName, 6, 0x021D7, 0 },
    { nearhkSemicolonEntityName, 7, 0x02924, 0 },
    { nearrSemicolonEntityName, 6, 0x02197, 0 },
    { nearrowSemicolonEntityName, 8, 0x02197, 0 },
    { nedotSemicolonEntityName, 6, 0x02250, 0x00338 },
    { nequivSemicolonEntityName, 7, 0x02262, 0 },
    { nesearSemicolonEntityName, 7, 0x02928, 0 },
    { nesimSemicolonEntityName, 6, 0x02242, 0x00338 },
    { nexistSemicolonEntityName, 7, 0x02204, 0 },
    { nexistsSemicolonEntityName, 8, 0x02204, 0 },
    { nfrSemicolonEntityName, 4, 0x1D52B, 0 },
    { ngESemicolonEntityName, 4, 0x02267, 0x00338 },
    { ngeSemicolonEntityName, 4, 0x02271, 0 },
    { ngeqSemicolonEntityName, 5, 0x02271, 0 },
    { ngeqqSemicolonEntityName, 6, 0x02267, 0x00338 },
    { ngeqslantSemicolonEntityName, 10, 0x02A7E, 0x00338 },
    { ngesSemicolonEntityName, 5, 0x02A7E, 0x00338 },
    { ngsimSemicolonEntityName, 6, 0x02275, 0 },
    { ngtSemicolonEntityName, 4, 0x0226F, 0 },
    { ngtrSemicolonEntityName, 5, 0x0226F, 0 },
    { nhArrSemicolonEntityName, 6, 0x021CE, 0 },
    { nharrSemicolonEntityName, 6, 0x021AE, 0 },
    { nhparSemicolonEntityName, 6, 0x02AF2, 0 },
    { niSemicolonEntityName, 3, 0x0220B, 0 },
    { nisSemicolonEntityName, 4, 0x022FC, 0 },
    { nisdSemicolonEntityName, 5, 0x022FA, 0 },
    { nivSemicolonEntityName, 4, 0x0220B, 0 },
    { njcySemicolonEntityName, 5, 0x0045A, 0 },
    { nlArrSemicolonEntityName, 6, 0x021CD, 0 },
    { nlESemicolonEntityName, 4, 0x02266, 0x00338 },
    { nlarrSemicolonEntityName, 6, 0x0219A, 0 },
    { nldrSemicolonEntityName, 5, 0x02025, 0 },
    { nleSemicolonEntityName, 4, 0x02270, 0 },
    { nleftarrowSemicolonEntityName, 11, 0x0219A, 0 },
    { nleftrightarrowSemicolonEntityName, 16, 0x021AE, 0 },
    { nleqSemicolonEntityName, 5, 0x02270, 0 },
    { nleqqSemicolonEntityName, 6, 0x02266, 0x00338 },
    { nleqslantSemicolonEntityName, 10, 0x02A7D, 0x00338 },
    { nlesSemicolonEntityName, 5, 0x02A7D, 0x00338 },
    { nlessSemicolonEntityName, 6, 0x0226E, 0 },
    { nlsimSemicolonEntityName, 6, 0x02274, 0 },
    { nltSemicolonEntityName, 4, 0x0226E, 0 },
    { nltriSemicolonEntityName, 6, 0x022EA, 0 },
    { nltrieSemicolonEntityName, 7, 0x022EC, 0 },
    { nmidSemicolonEntityName, 5, 0x02224, 0 },
    { nopfSemicolonEntityName, 5, 0x1D55F, 0 },
    { notEntityName, 3, 0x000AC, 0 },
    { notSemicolonEntityName, 4, 0x000AC, 0 },
    { notinSemicolonEntityName, 6, 0x02209, 0 },
    { notinESemicolonEntityName, 7, 0x022F9, 0x00338 },
    { notindotSemicolonEntityName, 9, 0x022F5, 0x00338 },
    { notinvaSemicolonEntityName, 8, 0x02209, 0 },
    { notinvbSemicolonEntityName, 8, 0x022F7, 0 },
    { notinvcSemicolonEntityName, 8, 0x022F6, 0 },
    { notniSemicolonEntityName, 6, 0x0220C, 0 },
    { notnivaSemicolonEntityName, 8, 0x0220C, 0 },
    { notnivbSemicolonEntityName, 8, 0x022FE, 0 },
    { notnivcSemicolonEntityName, 8, 0x022FD, 0 },
    { nparSemicolonEntityName, 5, 0x02226, 0 },
    { nparallelSemicolonEntityName, 10, 0x02226, 0 },
    { nparslSemicolonEntityName, 7, 0x02AFD, 0x020E5 },
    { npartSemicolonEntityName, 6, 0x02202, 0x00338 },
    { npolintSemicolonEntityName, 8, 0x02A14, 0 },
    { nprSemicolonEntityName, 4, 0x02280, 0 },
    { nprcueSemicolonEntityName, 7, 0x022E0, 0 },
    { npreSemicolonEntityName, 5, 0x02AAF, 0x00338 },
    { nprecSemicolonEntityName, 6, 0x02280, 0 },
    { npreceqSemicolonEntityName, 8, 0x02AAF, 0x00338 },
    { nrArrSemicolonEntityName, 6, 0x021CF, 0 },
    { nrarrSemicolonEntityName, 6, 0x0219B, 0 },
    { nrarrcSemicolonEntityName, 7, 0x02933, 0x00338 },
    { nrarrwSemicolonEntityName, 7, 0x0219D, 0x00338 },
    { nrightarrowSemicolonEntityName, 12, 0x0219B, 0 },
    { nrtriSemicolonEntityName, 6, 0x022EB, 0 },
    { nrtrieSemicolonEntityName, 7, 0x022ED, 0 },
    { nscSemicolonEntityName, 4, 0x02281, 0 },
    { nsccueSemicolonEntityName, 7, 0x022E1, 0 },
    { nsceSemicolonEntityName, 5, 0x02AB0, 0x00338 },
    { nscrSemicolonEntityName, 5, 0x1D4C3, 0 },
    { nshortmidSemicolonEntityName, 10, 0x02224, 0 },
    { nshortparallelSemicolonEntityName, 15, 0x02226, 0 },
    { nsimSemicolonEntityName, 5, 0x02241, 0 },
    { nsimeSemicolonEntityName, 6, 0x02244, 0 },
    { nsimeqSemicolonEntityName, 7, 0x02244, 0 },
    { nsmidSemicolonEntityName, 6, 0x02224, 0 },
    { nsparSemicolonEntityName, 6, 0x02226, 0 },
    { nsqsubeSemicolonEntityName, 8, 0x022E2, 0 },
    { nsqsupeSemicolonEntityName, 8, 0x022E3, 0 },
    { nsubSemicolonEntityName, 5, 0x02284, 0 },
    { nsubESemicolonEntityName, 6, 0x02AC5, 0x00338 },
    { nsubeSemicolonEntityName, 6, 0x02288, 0 },
    { nsubsetSemicolonEntityName, 8, 0x02282, 0x020D2 },
    { nsubseteqSemicolonEntityName, 10, 0x02288, 0 },
    { nsubseteqqSemicolonEntityName, 11, 0x02AC5, 0x00338 },
    { nsuccSemicolonEntityName, 6, 0x02281, 0 },
    { nsucceqSemicolonEntityName, 8, 0x02AB0, 0x00338 },
    { nsupSemicolonEntityName, 5, 0x02285, 0 },
    { nsupESemicolonEntityName, 6, 0x02AC6, 0x00338 },
    { nsupeSemicolonEntityName, 6, 0x02289, 0 },
    { nsupsetSemicolonEntityName, 8, 0x02283, 0x020D2 },
    { nsupseteqSemicolonEntityName, 10, 0x02289, 0 },
    { nsupseteqqSemicolonEntityName, 11, 0x02AC6, 0x00338 },
    { ntglSemicolonEntityName, 5, 0x02279, 0 },
    { ntildeEntityName, 6, 0x000F1, 0 },
    { ntildeSemicolonEntityName, 7, 0x000F1, 0 },
    { ntlgSemicolonEntityName, 5, 0x02278, 0 },
    { ntriangleleftSemicolonEntityName, 14, 0x022EA, 0 },
    { ntrianglelefteqSemicolonEntityName, 16, 0x022EC, 0 },
    { ntrianglerightSemicolonEntityName, 15, 0x022EB, 0 },
    { ntrianglerighteqSemicolonEntityName, 17, 0x022ED, 0 },
    { nuSemicolonEntityName, 3, 0x003BD, 0 },
    { numSemicolonEntityName, 4, 0x00023, 0 },
    { numeroSemicolonEntityName, 7, 0x02116, 0 },
    { numspSemicolonEntityName, 6, 0x02007, 0 },
    { nvDashSemicolonEntityName, 7, 0x022AD, 0 },
    { nvHarrSemicolonEntityName, 7, 0x02904, 0 },
    { nvapSemicolonEntityName, 5, 0x0224D, 0x020D2 },
    { nvdashSemicolonEntityName, 7, 0x022AC, 0 },
    { nvgeSemicolonEntityName, 5, 0x02265, 0x020D2 },
    { nvgtSemicolonEntityName, 5, 0x0003E, 0x020D2 },
    { nvinfinSemicolonEntityName, 8, 0x029DE, 0 },
    { nvlArrSemicolonEntityName, 7, 0x02902, 0 },
    { nvleSemicolonEntityName, 5, 0x02264, 0x020D2 },
    { nvltSemicolonEntityName, 5, 0x0003C, 0x020D2 },
    { nvltrieSemicolonEntityName, 8, 0x022B4, 0x020D2 },
    { nvrArrSemicolonEntityName, 7, 0x02903, 0 },
    { nvrtrieSemicolonEntityName, 8, 0x022B5, 0x020D2 },
    { nvsimSemicolonEntityName, 6, 0x0223C, 0x020D2 },
    { nwArrSemicolonEntityName, 6, 0x021D6, 0 },
    { nwarhkSemicolonEntityName, 7, 0x02923, 0 },
    { nwarrSemicolonEntityName, 6, 0x02196, 0 },
    { nwarrowSemicolonEntityName, 8, 0x02196, 0 },
    { nwnearSemicolonEntityName, 7, 0x02927, 0 },
    { oSSemicolonEntityName, 3, 0x024C8, 0 },
    { oacuteEntityName, 6, 0x000F3, 0 },
    { oacuteSemicolonEntityName, 7, 0x000F3, 0 },
    { oastSemicolonEntityName, 5, 0x0229B, 0 },
    { ocirSemicolonEntityName, 5, 0x0229A, 0 },
    { ocircEntityName, 5, 0x000F4, 0 },
    { ocircSemicolonEntityName, 6, 0x000F4, 0 },
    { ocySemicolonEntityName, 4, 0x0043E, 0 },
    { odashSemicolonEntityName, 6, 0x0229D, 0 },
    { odblacSemicolonEntityName, 7, 0x00151, 0 },
    { odivSemicolonEntityName, 5, 0x02A38, 0 },
    { odotSemicolonEntityName, 5, 0x02299, 0 },
    { odsoldSemicolonEntityName, 7, 0x029BC, 0 },
    { oeligSemicolonEntityName, 6, 0x00153, 0 },
    { ofcirSemicolonEntityName, 6, 0x029BF, 0 },
    { ofrSemicolonEntityName, 4, 0x1D52C, 0 },
    { ogonSemicolonEntityName, 5, 0x002DB, 0 },
    { ograveEntityName, 6, 0x000F2, 0 },
    { ograveSemicolonEntityName, 7, 0x000F2, 0 },
    { ogtSemicolonEntityName, 4, 0x029C1, 0 },
    { ohbarSemicolonEntityName, 6, 0x029B5, 0 },
    { ohmSemicolonEntityName, 4, 0x003A9, 0 },
    { ointSemicolonEntityName, 5, 0x0222E, 0 },
    { olarrSemicolonEntityName, 6, 0x021BA, 0 },
    { olcirSemicolonEntityName, 6, 0x029BE, 0 },
    { olcrossSemicolonEntityName, 8, 0x029BB, 0 },
    { olineSemicolonEntityName, 6, 0x0203E, 0 },
    { oltSemicolonEntityName, 4, 0x029C0, 0 },
    { omacrSemicolonEntityName, 6, 0x0014D, 0 },
    { omegaSemicolonEntityName, 6, 0x003C9, 0 },
    { omicronSemicolonEntityName, 8, 0x003BF, 0 },
    { omidSemicolonEntityName, 5, 0x029B6, 0 },
    { ominusSemicolonEntityName, 7, 0x02296, 0 },
    { oopfSemicolonEntityName, 5, 0x1D560, 0 },
    { oparSemicolonEntityName, 5, 0x029B7, 0 },
    { operpSemicolonEntityName, 6, 0x029B9, 0 },
    { oplusSemicolonEntityName, 6, 0x02295, 0 },
    { orSemicolonEntityName, 3, 0x02228, 0 },
    { orarrSemicolonEntityName, 6, 0x021BB, 0 },
    { ordSemicolonEntityName, 4, 0x02A5D, 0 },
    { orderSemicolonEntityName, 6, 0x02134, 0 },
    { orderofSemicolonEntityName, 8, 0x02134, 0 },
    { ordfEntityName, 4, 0x000AA, 0 },
    { ordfSemicolonEntityName, 5, 0x000AA, 0 },
    { ordmEntityName, 4, 0x000BA, 0 },
    { ordmSemicolonEntityName, 5, 0x000BA, 0 },
    { origofSemicolonEntityName, 7, 0x022B6, 0 },
    { ororSemicolonEntityName, 5, 0x02A56, 0 },
    { orslopeSemicolonEntityName, 8, 0x02A57, 0 },
    { orvSemicolonEntityName, 4, 0x02A5B, 0 },
    { oscrSemicolonEntityName, 5, 0x02134, 0 },
    { oslashEntityName, 6, 0x000F8, 0 },
    { oslashSemicolonEntityName, 7, 0x000F8, 0 },
    { osolSemicolonEntityName, 5, 0x02298, 0 },
    { otildeEntityName, 6, 0x000F5, 0 },
    { otildeSemicolonEntityName, 7, 0x000F5, 0 },
    { otimesSemicolonEntityName, 7, 0x02297, 0 },
    { otimesasSemicolonEntityName, 9, 0x02A36, 0 },
    { oumlEntityName, 4, 0x000F6, 0 },
    { oumlSemicolonEntityName, 5, 0x000F6, 0 },
    { ovbarSemicolonEntityName, 6, 0x0233D, 0 },
    { parSemicolonEntityName, 4, 0x02225, 0 },
    { paraEntityName, 4, 0x000B6, 0 },
    { paraSemicolonEntityName, 5, 0x000B6, 0 },
    { parallelSemicolonEntityName, 9, 0x02225, 0 },
    { parsimSemicolonEntityName, 7, 0x02AF3, 0 },
    { parslSemicolonEntityName, 6, 0x02AFD, 0 },
    { partSemicolonEntityName, 5, 0x02202, 0 },
    { pcySemicolonEntityName, 4, 0x0043F, 0 },
    { percntSemicolonEntityName, 7, 0x00025, 0 },
    { periodSemicolonEntityName, 7, 0x0002E, 0 },
    { permilSemicolonEntityName, 7, 0x02030, 0 },
    { perpSemicolonEntityName, 5, 0x022A5, 0 },
    { pertenkSemicolonEntityName, 8, 0x02031, 0 },
    { pfrSemicolonEntityName, 4, 0x1D52D, 0 },
    { phiSemicolonEntityName, 4, 0x003C6, 0 },
    { phivSemicolonEntityName, 5, 0x003D5, 0 },
    { phmmatSemicolonEntityName, 7, 0x02133, 0 },
    { phoneSemicolonEntityName, 6, 0x0260E, 0 },
    { piSemicolonEntityName, 3, 0x003C0, 0 },
    { pitchforkSemicolonEntityName, 10, 0x022D4, 0 },
    { pivSemicolonEntityName, 4, 0x003D6, 0 },
    { planckSemicolonEntityName, 7, 0x0210F, 0 },
    { planckhSemicolonEntityName, 8, 0x0210E, 0 },
    { plankvSemicolonEntityName, 7, 0x0210F, 0 },
    { plusSemicolonEntityName, 5, 0x0002B, 0 },
    { plusacirSemicolonEntityName, 9, 0x02A23, 0 },
    { plusbSemicolonEntityName, 6, 0x0229E, 0 },
    { pluscirSemicolonEntityName, 8, 0x02A22, 0 },
    { plusdoSemicolonEntityName, 7, 0x02214, 0 },
    { plusduSemicolonEntityName, 7, 0x02A25, 0 },
    { pluseSemicolonEntityName, 6, 0x02A72, 0 },
    { plusmnEntityName, 6, 0x000B1, 0 },
    { plusmnSemicolonEntityName, 7, 0x000B1, 0 },
    { plussimSemicolonEntityName, 8, 0x02A26, 0 },
    { plustwoSemicolonEntityName, 8, 0x02A27, 0 },
    { pmSemicolonEntityName, 3, 0x000B1, 0 },
    { pointintSemicolonEntityName, 9, 0x02A15, 0 },
    { popfSemicolonEntityName, 5, 0x1D561, 0 },
    { poundEntityName, 5, 0x000A3, 0 },
    { poundSemicolonEntityName, 6, 0x000A3, 0 },
    { prSemicolonEntityName, 3, 0x0227A, 0 },
    { prESemicolonEntityName, 4, 0x02AB3, 0 },
    { prapSemicolonEntityName, 5, 0x02AB7, 0 },
    { prcueSemicolonEntityName, 6, 0x0227C, 0 },
    { preSemicolonEntityName, 4, 0x02AAF, 0 },
    { precSemicolonEntityName, 5, 0x0227A, 0 },
    { precapproxSemicolonEntityName, 11, 0x02AB7, 0 },
    { preccurlyeqSemicolonEntityName, 12, 0x0227C, 0 },
    { preceqSemicolonEntityName, 7, 0x02AAF, 0 },
    { precnapproxSemicolonEntityName, 12, 0x02AB9, 0 },
    { precneqqSemicolonEntityName, 9, 0x02AB5, 0 },
    { precnsimSemicolonEntityName, 9, 0x022E8, 0 },
    { precsimSemicolonEntityName, 8, 0x0227E, 0 },
    { primeSemicolonEntityName, 6, 0x02032, 0 },
    { primesSemicolonEntityName, 7, 0x02119, 0 },
    { prnESemicolonEntityName, 5, 0x02AB5, 0 },
    { prnapSemicolonEntityName, 6, 0x02AB9, 0 },
    { prnsimSemicolonEntityName, 7, 0x022E8, 0 },
    { prodSemicolonEntityName, 5, 0x0220F, 0 },
    { profalarSemicolonEntityName, 9, 0x0232E, 0 },
    { proflineSemicolonEntityName, 9, 0x02312, 0 },
    { profsurfSemicolonEntityName, 9, 0x02313, 0 },
    { propSemicolonEntityName, 5, 0x0221D, 0 },
    { proptoSemicolonEntityName, 7, 0x0221D, 0 },
    { prsimSemicolonEntityName, 6, 0x0227E, 0 },
    { prurelSemicolonEntityName, 7, 0x022B0, 0 },
    { pscrSemicolonEntityName, 5, 0x1D4C5, 0 },
    { psiSemicolonEntityName, 4, 0x003C8, 0 },
    { puncspSemicolonEntityName, 7, 0x02008, 0 },
    { qfrSemicolonEntityName, 4, 0x1D52E, 0 },
    { qintSemicolonEntityName, 5, 0x02A0C, 0 },
    { qopfSemicolonEntityName, 5, 0x1D562, 0 },
    { qprimeSemicolonEntityName, 7, 0x02057, 0 },
    { qscrSemicolonEntityName, 5, 0x1D4C6, 0 },
    { quaternionsSemicolonEntityName, 12, 0x0210D, 0 },
    { quatintSemicolonEntityName, 8, 0x02A16, 0 },
    { questSemicolonEntityName, 6, 0x0003F, 0 },
    { questeqSemicolonEntityName, 8, 0x0225F, 0 },
    { quotEntityName, 4, 0x00022, 0 },
    { quotSemicolonEntityName, 5, 0x00022, 0 },
    { rAarrSemicolonEntityName, 6, 0x021DB, 0 },
    { rArrSemicolonEntityName, 5, 0x021D2, 0 },
    { rAtailSemicolonEntityName, 7, 0x0291C, 0 },
    { rBarrSemicolonEntityName, 6, 0x0290F, 0 },
    { rHarSemicolonEntityName, 5, 0x02964, 0 },
    { raceSemicolonEntityName, 5, 0x0223D, 0x00331 },
    { racuteSemicolonEntityName, 7, 0x00155, 0 },
    { radicSemicolonEntityName, 6, 0x0221A, 0 },
    { raemptyvSemicolonEntityName, 9, 0x029B3, 0 },
    { rangSemicolonEntityName, 5, 0x027E9, 0 },
    { rangdSemicolonEntityName, 6, 0x02992, 0 },
    { rangeSemicolonEntityName, 6, 0x029A5, 0 },
    { rangleSemicolonEntityName, 7, 0x027E9, 0 },
    { raquoEntityName, 5, 0x000BB, 0 },
    { raquoSemicolonEntityName, 6, 0x000BB, 0 },
    { rarrSemicolonEntityName, 5, 0x02192, 0 },
    { rarrapSemicolonEntityName, 7, 0x02975, 0 },
    { rarrbSemicolonEntityName, 6, 0x021E5, 0 },
    { rarrbfsSemicolonEntityName, 8, 0x02920, 0 },
    { rarrcSemicolonEntityName, 6, 0x02933, 0 },
    { rarrfsSemicolonEntityName, 7, 0x0291E, 0 },
    { rarrhkSemicolonEntityName, 7, 0x021AA, 0 },
    { rarrlpSemicolonEntityName, 7, 0x021AC, 0 },
    { rarrplSemicolonEntityName, 7, 0x02945, 0 },
    { rarrsimSemicolonEntityName, 8, 0x02974, 0 },
    { rarrtlSemicolonEntityName, 7, 0x021A3, 0 },
    { rarrwSemicolonEntityName, 6, 0x0219D, 0 },
    { ratailSemicolonEntityName, 7, 0x0291A, 0 },
    { ratioSemicolonEntityName, 6, 0x02236, 0 },
    { rationalsSemicolonEntityName, 10, 0x0211A, 0 },
    { rbarrSemicolonEntityName, 6, 0x0290D, 0 },
    { rbbrkSemicolonEntityName, 6, 0x02773, 0 },
    { rbraceSemicolonEntityName, 7, 0x0007D, 0 },
    { rbrackSemicolonEntityName, 7, 0x0005D, 0 },
    { rbrkeSemicolonEntityName, 6, 0x0298C, 0 },
    { rbrksldSemicolonEntityName, 8, 0x0298E, 0 },
    { rbrksluSemicolonEntityName, 8, 0x02990, 0 },
    { rcaronSemicolonEntityName, 7, 0x00159, 0 },
    { rcedilSemicolonEntityName, 7, 0x00157, 0 },
    { rceilSemicolonEntityName, 6, 0x02309, 0 },
    { rcubSemicolonEntityName, 5, 0x0007D, 0 },
    { rcySemicolonEntityName, 4, 0x00440, 0 },
    { rdcaSemicolonEntityName, 5, 0x02937, 0 },
    { rdldharSemicolonEntityName, 8, 0x02969, 0 },
    { rdquoSemicolonEntityName, 6, 0x0201D, 0 },
    { rdquorSemicolonEntityName, 7, 0x0201D, 0 },
    { rdshSemicolonEntityName, 5, 0x021B3, 0 },
    { realSemicolonEntityName, 5, 0x0211C, 0 },
    { realineSemicolonEntityName, 8, 0x0211B, 0 },
    { realpartSemicolonEntityName, 9, 0x0211C, 0 },
    { realsSemicolonEntityName, 6, 0x0211D, 0 },
    { rectSemicolonEntityName, 5, 0x025AD, 0 },
    { regEntityName, 3, 0x000AE, 0 },
    { regSemicolonEntityName, 4, 0x000AE, 0 },
    { rfishtSemicolonEntityName, 7, 0x0297D, 0 },
    { rfloorSemicolonEntityName, 7, 0x0230B, 0 },
    { rfrSemicolonEntityName, 4, 0x1D52F, 0 },
    { rhardSemicolonEntityName, 6, 0x021C1, 0 },
    { rharuSemicolonEntityName, 6, 0x021C0, 0 },
    { rharulSemicolonEntityName, 7, 0x0296C, 0 },
    { rhoSemicolonEntityName, 4, 0x003C1, 0 },
    { rhovSemicolonEntityName, 5, 0x003F1, 0 },
    { rightarrowSemicolonEntityName, 11, 0x02192, 0 },
    { rightarrowtailSemicolonEntityName, 15, 0x021A3, 0 },
    { rightharpoondownSemicolonEntityName, 17, 0x021C1, 0 },
    { rightharpoonupSemicolonEntityName, 15, 0x021C0, 0 },
    { rightleftarrowsSemicolonEntityName, 16, 0x021C4, 0 },
    { rightleftharpoonsSemicolonEntityName, 18, 0x021CC, 0 },
    { rightrightarrowsSemicolonEntityName, 17, 0x021C9, 0 },
    { rightsquigarrowSemicolonEntityName, 16, 0x0219D, 0 },
    { rightthreetimesSemicolonEntityName, 16, 0x022CC, 0 },
    { ringSemicolonEntityName, 5, 0x002DA, 0 },
    { risingdotseqSemicolonEntityName, 13, 0x02253, 0 },
    { rlarrSemicolonEntityName, 6, 0x021C4, 0 },
    { rlharSemicolonEntityName, 6, 0x021CC, 0 },
    { rlmSemicolonEntityName, 4, 0x0200F, 0 },
    { rmoustSemicolonEntityName, 7, 0x023B1, 0 },
    { rmoustacheSemicolonEntityName, 11, 0x023B1, 0 },
    { rnmidSemicolonEntityName, 6, 0x02AEE, 0 },
    { roangSemicolonEntityName, 6, 0x027ED, 0 },
    { roarrSemicolonEntityName, 6, 0x021FE, 0 },
    { robrkSemicolonEntityName, 6, 0x027E7, 0 },
    { roparSemicolonEntityName, 6, 0x02986, 0 },
    { ropfSemicolonEntityName, 5, 0x1D563, 0 },
    { roplusSemicolonEntityName, 7, 0x02A2E, 0 },
    { rotimesSemicolonEntityName, 8, 0x02A35, 0 },
    { rparSemicolonEntityName, 5, 0x00029, 0 },
    { rpargtSemicolonEntityName, 7, 0x02994, 0 },
    { rppolintSemicolonEntityName, 9, 0x02A12, 0 },
    { rrarrSemicolonEntityName, 6, 0x021C9, 0 },
    { rsaquoSemicolonEntityName, 7, 0x0203A, 0 },
    { rscrSemicolonEntityName, 5, 0x1D4C7, 0 },
    { rshSemicolonEntityName, 4, 0x021B1, 0 },
    { rsqbSemicolonEntityName, 5, 0x0005D, 0 },
    { rsquoSemicolonEntityName, 6, 0x02019, 0 },
    { rsquorSemicolonEntityName, 7, 0x02019, 0 },
    { rthreeSemicolonEntityName, 7, 0x022CC, 0 },
    { rtimesSemicolonEntityName, 7, 0x022CA, 0 },
    { rtriSemicolonEntityName, 5, 0x025B9, 0 },
    { rtrieSemicolonEntityName, 6, 0x022B5, 0 },
    { rtrifSemicolonEntityName, 6, 0x025B8, 0 },
    { rtriltriSemicolonEntityName, 9, 0x029CE, 0 },
    { ruluharSemicolonEntityName, 8, 0x02968, 0 },
    { rxSemicolonEntityName, 3, 0x0211E, 0 },
    { sacuteSemicolonEntityName, 7, 0x0015B, 0 },
    { sbquoSemicolonEntityName, 6, 0x0201A, 0 },
    { scSemicolonEntityName, 3, 0x0227B, 0 },
    { scESemicolonEntityName, 4, 0x02AB4, 0 },
    { scapSemicolonEntityName, 5, 0x02AB8, 0 },
    { scaronSemicolonEntityName, 7, 0x00161, 0 },
    { sccueSemicolonEntityName, 6, 0x0227D, 0 },
    { sceSemicolonEntityName, 4, 0x02AB0, 0 },
    { scedilSemicolonEntityName, 7, 0x0015F, 0 },
    { scircSemicolonEntityName, 6, 0x0015D, 0 },
    { scnESemicolonEntityName, 5, 0x02AB6, 0 },
    { scnapSemicolonEntityName, 6, 0x02ABA, 0 },
    { scnsimSemicolonEntityName, 7, 0x022E9, 0 },
    { scpolintSemicolonEntityName, 9, 0x02A13, 0 },
    { scsimSemicolonEntityName, 6, 0x0227F, 0 },
    { scySemicolonEntityName, 4, 0x00441, 0 },
    { sdotSemicolonEntityName, 5, 0x022C5, 0 },
    { sdotbSemicolonEntityName, 6, 0x022A1, 0 },
    { sdoteSemicolonEntityName, 6, 0x02A66, 0 },
    { seArrSemicolonEntityName, 6, 0x021D8, 0 },
    { searhkSemicolonEntityName, 7, 0x02925, 0 },
    { searrSemicolonEntityName, 6, 0x02198, 0 },
    { searrowSemicolonEntityName, 8, 0x02198, 0 },
    { sectEntityName, 4, 0x000A7, 0 },
    { sectSemicolonEntityName, 5, 0x000A7, 0 },
    { semiSemicolonEntityName, 5, 0x0003B, 0 },
    { seswarSemicolonEntityName, 7, 0x02929, 0 },
    { setminusSemicolonEntityName, 9, 0x02216, 0 },
    { setmnSemicolonEntityName, 6, 0x02216, 0 },
    { sextSemicolonEntityName, 5, 0x02736, 0 },
    { sfrSemicolonEntityName, 4, 0x1D530, 0 },
    { sfrownSemicolonEntityName, 7, 0x02322, 0 },
    { sharpSemicolonEntityName, 6, 0x0266F, 0 },
    { shchcySemicolonEntityName, 7, 0x00449, 0 },
    { shcySemicolonEntityName, 5, 0x00448, 0 },
    { shortmidSemicolonEntityName, 9, 0x02223, 0 },
    { shortparallelSemicolonEntityName, 14, 0x02225, 0 },
    { shyEntityName, 3, 0x000AD, 0 },
    { shySemicolonEntityName, 4, 0x000AD, 0 },
    { sigmaSemicolonEntityName, 6, 0x003C3, 0 },
    { sigmafSemicolonEntityName, 7, 0x003C2, 0 },
    { sigmavSemicolonEntityName, 7, 0x003C2, 0 },
    { simSemicolonEntityName, 4, 0x0223C, 0 },
    { simdotSemicolonEntityName, 7, 0x02A6A, 0 },
    { simeSemicolonEntityName, 5, 0x02243, 0 },
    { simeqSemicolonEntityName, 6, 0x02243, 0 },
    { simgSemicolonEntityName, 5, 0x02A9E, 0 },
    { simgESemicolonEntityName, 6, 0x02AA0, 0 },
    { simlSemicolonEntityName, 5, 0x02A9D, 0 },
    { simlESemicolonEntityName, 6, 0x02A9F, 0 },
    { simneSemicolonEntityName, 6, 0x02246, 0 },
    { simplusSemicolonEntityName, 8, 0x02A24, 0 },
    { simrarrSemicolonEntityName, 8, 0x02972, 0 },
    { slarrSemicolonEntityName, 6, 0x02190, 0 },
    { smallsetminusSemicolonEntityName, 14, 0x02216, 0 },
    { smashpSemicolonEntityName, 7, 0x02A33, 0 },
    { smeparslSemicolonEntityName, 9, 0x029E4, 0 },
    { smidSemicolonEntityName, 5, 0x02223, 0 },
    { smileSemicolonEntityName, 6, 0x02323, 0 },
    { smtSemicolonEntityName, 4, 0x02AAA, 0 },
    { smteSemicolonEntityName, 5, 0x02AAC, 0 },
    { smtesSemicolonEntityName, 6, 0x02AAC, 0x0FE00 },
    { softcySemicolonEntityName, 7, 0x0044C, 0 },
    { solSemicolonEntityName, 4, 0x0002F, 0 },
    { solbSemicolonEntityName, 5, 0x029C4, 0 },
    { solbarSemicolonEntityName, 7, 0x0233F, 0 },
    { sopfSemicolonEntityName, 5, 0x1D564, 0 },
    { spadesSemicolonEntityName, 7, 0x02660, 0 },
    { spadesuitSemicolonEntityName, 10, 0x02660, 0 },
    { sparSemicolonEntityName, 5, 0x02225, 0 },
    { sqcapSemicolonEntityName, 6, 0x02293, 0 },
    { sqcapsSemicolonEntityName, 7, 0x02293, 0x0FE00 },
    { sqcupSemicolonEntityName, 6, 0x02294, 0 },
    { sqcupsSemicolonEntityName, 7, 0x02294, 0x0FE00 },
    { sqsubSemicolonEntityName, 6, 0x0228F, 0 },
    { sqsubeSemicolonEntityName, 7, 0x02291, 0 },
    { sqsubsetSemicolonEntityName, 9, 0x0228F, 0 },
    { sqsubseteqSemicolonEntityName, 11, 0x02291, 0 },
    { sqsupSemicolonEntityName, 6, 0x02290, 0 },
    { sqsupeSemicolonEntityName, 7, 0x02292, 0 },
    { sqsupsetSemicolonEntityName, 9, 0x02290, 0 },
    { sqsupseteqSemicolonEntityName, 11, 0x02292, 0 },
    { squSemicolonEntityName, 4, 0x025A1, 0 },
    { squareSemicolonEntityName, 7, 0x025A1, 0 },
    { squarfSemicolonEntityName, 7, 0x025AA, 0 },
    { squfSemicolonEntityName, 5, 0x025AA, 0 },
    { srarrSemicolonEntityName, 6, 0x02192, 0 },
    { sscrSemicolonEntityName, 5, 0x1D4C8, 0 },
    { ssetmnSemicolonEntityName, 7, 0x02216, 0 },
    { ssmileSemicolonEntityName, 7, 0x02323, 0 },
    { sstarfSemicolonEntityName, 7, 0x022C6, 0 },
    { starSemicolonEntityName, 5, 0x02606, 0 },
    { starfSemicolonEntityName, 6, 0x02605, 0 },
    { straightepsilonSemicolonEntityName, 16, 0x003F5, 0 },
    { straightphiSemicolonEntityName, 12, 0x003D5, 0 },
    { strnsSemicolonEntityName, 6, 0x000AF, 0 },
    { subSemicolonEntityName, 4, 0x02282, 0 },
    { subESemicolonEntityName, 5, 0x02AC5, 0 },
    { subdotSemicolonEntityName, 7, 0x02ABD, 0 },
    { subeSemicolonEntityName, 5, 0x02286, 0 },
    { subedotSemicolonEntityName, 8, 0x02AC3, 0 },
    { submultSemicolonEntityName, 8, 0x02AC1, 0 },
    { subnESemicolonEntityName, 6, 0x02ACB, 0 },
    { subneSemicolonEntityName, 6, 0x0228A, 0 },
    { subplusSemicolonEntityName, 8, 0x02ABF, 0 },
    { subrarrSemicolonEntityName, 8, 0x02979, 0 },
    { subsetSemicolonEntityName, 7, 0x02282, 0 },
    { subseteqSemicolonEntityName, 9, 0x02286, 0 },
    { subseteqqSemicolonEntityName, 10, 0x02AC5, 0 },
    { subsetneqSemicolonEntityName, 10, 0x0228A, 0 },
    { subsetneqqSemicolonEntityName, 11, 0x02ACB, 0 },
    { subsimSemicolonEntityName, 7, 0x02AC7, 0 },
    { subsubSemicolonEntityName, 7, 0x02AD5, 0 },
    { subsupSemicolonEntityName, 7, 0x02AD3, 0 },
    { succSemicolonEntityName, 5, 0x0227B, 0 },
    { succapproxSemicolonEntityName, 11, 0x02AB8, 0 },
    { succcurlyeqSemicolonEntityName, 12, 0x0227D, 0 },
    { succeqSemicolonEntityName, 7, 0x02AB0, 0 },
    { succnapproxSemicolonEntityName, 12, 0x02ABA, 0 },
    { succneqqSemicolonEntityName, 9, 0x02AB6, 0 },
    { succnsimSemicolonEntityName, 9, 0x022E9, 0 },
    { succsimSemicolonEntityName, 8, 0x0227F, 0 },
    { sumSemicolonEntityName, 4, 0x02211, 0 },
    { sungSemicolonEntityName, 5, 0x0266A, 0 },
    { sup1EntityName, 4, 0x000B9, 0 },
    { sup1SemicolonEntityName, 5, 0x000B9, 0 },
    { sup2EntityName, 4, 0x000B2, 0 },
    { sup2SemicolonEntityName, 5, 0x000B2, 0 },
    { sup3EntityName, 4, 0x000B3, 0 },
    { sup3SemicolonEntityName, 5, 0x000B3, 0 },
    { supSemicolonEntityName, 4, 0x02283, 0 },
    { supESemicolonEntityName, 5, 0x02AC6, 0 },
    { supdotSemicolonEntityName, 7, 0x02ABE, 0 },
    { supdsubSemicolonEntityName, 8, 0x02AD8, 0 },
    { supeSemicolonEntityName, 5, 0x02287, 0 },
    { supedotSemicolonEntityName, 8, 0x02AC4, 0 },
    { suphsolSemicolonEntityName, 8, 0x027C9, 0 },
    { suphsubSemicolonEntityName, 8, 0x02AD7, 0 },
    { suplarrSemicolonEntityName, 8, 0x0297B, 0 },
    { supmultSemicolonEntityName, 8, 0x02AC2, 0 },
    { supnESemicolonEntityName, 6, 0x02ACC, 0 },
    { supneSemicolonEntityName, 6, 0x0228B, 0 },
    { supplusSemicolonEntityName, 8, 0x02AC0, 0 },
    { supsetSemicolonEntityName, 7, 0x02283, 0 },
    { supseteqSemicolonEntityName, 9, 0x02287, 0 },
    { supseteqqSemicolonEntityName, 10, 0x02AC6, 0 },
    { supsetneqSemicolonEntityName, 10, 0x0228B, 0 },
    { supsetneqqSemicolonEntityName, 11, 0x02ACC, 0 },
    { supsimSemicolonEntityName, 7, 0x02AC8, 0 },
    { supsubSemicolonEntityName, 7, 0x02AD4, 0 },
    { supsupSemicolonEntityName, 7, 0x02AD6, 0 },
    { swArrSemicolonEntityName, 6, 0x021D9, 0 },
    { swarhkSemicolonEntityName, 7, 0x02926, 0 },
    { swarrSemicolonEntityName, 6, 0x02199, 0 },
    { swarrowSemicolonEntityName, 8, 0x02199, 0 },
    { swnwarSemicolonEntityName, 7, 0x0292A, 0 },
    { szligEntityName, 5, 0x000DF, 0 },
    { szligSemicolonEntityName, 6, 0x000DF, 0 },
    { targetSemicolonEntityName, 7, 0x02316, 0 },
    { tauSemicolonEntityName, 4, 0x003C4, 0 },
    { tbrkSemicolonEntityName, 5, 0x023B4, 0 },
    { tcaronSemicolonEntityName, 7, 0x00165, 0 },
    { tcedilSemicolonEntityName, 7, 0x00163, 0 },
    { tcySemicolonEntityName, 4, 0x00442, 0 },
    { tdotSemicolonEntityName, 5, 0x020DB, 0 },
    { telrecSemicolonEntityName, 7, 0x02315, 0 },
    { tfrSemicolonEntityName, 4, 0x1D531, 0 },
    { there4SemicolonEntityName, 7, 0x02234, 0 },
    { thereforeSemicolonEntityName, 10, 0x02234, 0 },
    { thetaSemicolonEntityName, 6, 0x003B8, 0 },
    { thetasymSemicolonEntityName, 9, 0x003D1, 0 },
    { thetavSemicolonEntityName, 7, 0x003D1, 0 },
    { thickapproxSemicolonEntityName, 12, 0x02248, 0 },
    { thicksimSemicolonEntityName, 9, 0x0223C, 0 },
    { thinspSemicolonEntityName, 7, 0x02009, 0 },
    { thkapSemicolonEntityName, 6, 0x02248, 0 },
    { thksimSemicolonEntityName, 7, 0x0223C, 0 },
    { thornEntityName, 5, 0x000FE, 0 },
    { thornSemicolonEntityName, 6, 0x000FE, 0 },
    { tildeSemicolonEntityName, 6, 0x002DC, 0 },
    { timesEntityName, 5, 0x000D7, 0 },
    { timesSemicolonEntityName, 6, 0x000D7, 0 },
    { timesbSemicolonEntityName, 7, 0x022A0, 0 },
    { timesbarSemicolonEntityName, 9, 0x02A31, 0 },
    { timesdSemicolonEntityName, 7, 0x02A30, 0 },
    { tintSemicolonEntityName, 5, 0x0222D, 0 },
    { toeaSemicolonEntityName, 5, 0x02928, 0 },
    { topSemicolonEntityName, 4, 0x022A4, 0 },
    { topbotSemicolonEntityName, 7, 0x02336, 0 },
    { topcirSemicolonEntityName, 7, 0x02AF1, 0 },
    { topfSemicolonEntityName, 5, 0x1D565, 0 },
    { topforkSemicolonEntityName, 8, 0x02ADA, 0 },
    { tosaSemicolonEntityName, 5, 0x02929, 0 },
    { tprimeSemicolonEntityName, 7, 0x02034, 0 },
    { tradeSemicolonEntityName, 6, 0x02122, 0 },
    { triangleSemicolonEntityName, 9, 0x025B5, 0 },
    { triangledownSemicolonEntityName, 13, 0x025BF, 0 },
    { triangleleftSemicolonEntityName, 13, 0x025C3, 0 },
    { trianglelefteqSemicolonEntityName, 15, 0x022B4, 0 },
    { triangleqSemicolonEntityName, 10, 0x0225C, 0 },
    { trianglerightSemicolonEntityName, 14, 0x025B9, 0 },
    { trianglerighteqSemicolonEntityName, 16, 0x022B5, 0 },
    { tridotSemicolonEntityName, 7, 0x025EC, 0 },
    { trieSemicolonEntityName, 5, 0x0225C, 0 },
    { triminusSemicolonEntityName, 9, 0x02A3A, 0 },
    { triplusSemicolonEntityName, 8, 0x02A39, 0 },
    { trisbSemicolonEntityName, 6, 0x029CD, 0 },
    { tritimeSemicolonEntityName, 8, 0x02A3B, 0 },
    { trpeziumSemicolonEntityName, 9, 0x023E2, 0 },
    { tscrSemicolonEntityName, 5, 0x1D4C9, 0 },
    { tscySemicolonEntityName, 5, 0x00446, 0 },
    { tshcySemicolonEntityName, 6, 0x0045B, 0 },
    { tstrokSemicolonEntityName, 7, 0x00167, 0 },
    { twixtSemicolonEntityName, 6, 0x0226C, 0 },
    { twoheadleftarrowSemicolonEntityName, 17, 0x0219E, 0 },
    { twoheadrightarrowSemicolonEntityName, 18, 0x021A0, 0 },
    { uArrSemicolonEntityName, 5, 0x021D1, 0 },
    { uHarSemicolonEntityName, 5, 0x02963, 0 },
    { uacuteEntityName, 6, 0x000FA, 0 },
    { uacuteSemicolonEntityName, 7, 0x000FA, 0 },
    { uarrSemicolonEntityName, 5, 0x02191, 0 },
    { ubrcySemicolonEntityName, 6, 0x0045E, 0 },
    { ubreveSemicolonEntityName, 7, 0x0016D, 0 },
    { ucircEntityName, 5, 0x000FB, 0 },
    { ucircSemicolonEntityName, 6, 0x000FB, 0 },
    { ucySemicolonEntityName, 4, 0x00443, 0 },
    { udarrSemicolonEntityName, 6, 0x021C5, 0 },
    { udblacSemicolonEntityName, 7, 0x00171, 0 },
    { udharSemicolonEntityName, 6, 0x0296E, 0 },
    { ufishtSemicolonEntityName, 7, 0x0297E, 0 },
    { ufrSemicolonEntityName, 4, 0x1D532, 0 },
    { ugraveEntityName, 6, 0x000F9, 0 },
    { ugraveSemicolonEntityName, 7, 0x000F9, 0 },
    { uharlSemicolonEntityName, 6, 0x021BF, 0 },
    { uharrSemicolonEntityName, 6, 0x021BE, 0 },
    { uhblkSemicolonEntityName, 6, 0x02580, 0 },
    { ulcornSemicolonEntityName, 7, 0x0231C, 0 },
    { ulcornerSemicolonEntityName, 9, 0x0231C, 0 },
    { ulcropSemicolonEntityName, 7, 0x0230F, 0 },
    { ultriSemicolonEntityName, 6, 0x025F8, 0 },
    { umacrSemicolonEntityName, 6, 0x0016B, 0 },
    { umlEntityName, 3, 0x000A8, 0 },
    { umlSemicolonEntityName, 4, 0x000A8, 0 },
    { uogonSemicolonEntityName, 6, 0x00173, 0 },
    { uopfSemicolonEntityName, 5, 0x1D566, 0 },
    { uparrowSemicolonEntityName, 8, 0x02191, 0 },
    { updownarrowSemicolonEntityName, 12, 0x02195, 0 },
    { upharpoonleftSemicolonEntityName, 14, 0x021BF, 0 },
    { upharpoonrightSemicolonEntityName, 15, 0x021BE, 0 },
    { uplusSemicolonEntityName, 6, 0x0228E, 0 },
    { upsiSemicolonEntityName, 5, 0x003C5, 0 },
    { upsihSemicolonEntityName, 6, 0x003D2, 0 },
    { upsilonSemicolonEntityName, 8, 0x003C5, 0 },
    { upuparrowsSemicolonEntityName, 11, 0x021C8, 0 },
    { urcornSemicolonEntityName, 7, 0x0231D, 0 },
    { urcornerSemicolonEntityName, 9, 0x0231D, 0 },
    { urcropSemicolonEntityName, 7, 0x0230E, 0 },
    { uringSemicolonEntityName, 6, 0x0016F, 0 },
    { urtriSemicolonEntityName, 6, 0x025F9, 0 },
    { uscrSemicolonEntityName, 5, 0x1D4CA, 0 },
    { utdotSemicolonEntityName, 6, 0x022F0, 0 },
    { utildeSemicolonEntityName, 7, 0x00169, 0 },
    { utriSemicolonEntityName, 5, 0x025B5, 0 },
    { utrifSemicolonEntityName, 6, 0x025B4, 0 },
    { uuarrSemicolonEntityName, 6, 0x021C8, 0 },
    { uumlEntityName, 4, 0x000FC, 0 },
    { uumlSemicolonEntityName, 5, 0x000FC, 0 },
    { uwangleSemicolonEntityName, 8, 0x029A7, 0 },
    { vArrSemicolonEntityName, 5, 0x021D5, 0 },
    { vBarSemicolonEntityName, 5, 0x02AE8, 0 },
    { vBarvSemicolonEntityName, 6, 0x02AE9, 0 },
    { vDashSemicolonEntityName, 6, 0x022A8, 0 },
    { vangrtSemicolonEntityName, 7, 0x0299C, 0 },
    { varepsilonSemicolonEntityName, 11, 0x003F5, 0 },
    { varkappaSemicolonEntityName, 9, 0x003F0, 0 },
    { varnothingSemicolonEntityName, 11, 0x02205, 0 },
    { varphiSemicolonEntityName, 7, 0x003D5, 0 },
    { varpiSemicolonEntityName, 6, 0x003D6, 0 },
    { varproptoSemicolonEntityName, 10, 0x0221D, 0 },
    { varrSemicolonEntityName, 5, 0x02195, 0 },
    { varrhoSemicolonEntityName, 7, 0x003F1, 0 },
    { varsigmaSemicolonEntityName, 9, 0x003C2, 0 },
    { varsubsetneqSemicolonEntityName, 13, 0x0228A, 0x0FE00 },
    { varsubsetneqqSemicolonEntityName, 14, 0x02ACB, 0x0FE00 },
    { varsupsetneqSemicolonEntityName, 13, 0x0228B, 0x0FE00 },
    { varsupsetneqqSemicolonEntityName, 14, 0x02ACC, 0x0FE00 },
    { varthetaSemicolonEntityName, 9, 0x003D1, 0 },
    { vartriangleleftSemicolonEntityName, 16, 0x022B2, 0 },
    { vartrianglerightSemicolonEntityName, 17, 0x022B3, 0 },
    { vcySemicolonEntityName, 4, 0x00432, 0 },
    { vdashSemicolonEntityName, 6, 0x022A2, 0 },
    { veeSemicolonEntityName, 4, 0x02228, 0 },
    { veebarSemicolonEntityName, 7, 0x022BB, 0 },
    { veeeqSemicolonEntityName, 6, 0x0225A, 0 },
    { vellipSemicolonEntityName, 7, 0x022EE, 0 },
    { verbarSemicolonEntityName, 7, 0x0007C, 0 },
    { vertSemicolonEntityName, 5, 0x0007C, 0 },
    { vfrSemicolonEntityName, 4, 0x1D533, 0 },
    { vltriSemicolonEntityName, 6, 0x022B2, 0 },
    { vnsubSemicolonEntityName, 6, 0x02282, 0x020D2 },
    { vnsupSemicolonEntityName, 6, 0x02283, 0x020D2 },
    { vopfSemicolonEntityName, 5, 0x1D567, 0 },
    { vpropSemicolonEntityName, 6, 0x0221D, 0 },
    { vrtriSemicolonEntityName, 6, 0x022B3, 0 },
    { vscrSemicolonEntityName, 5, 0x1D4CB, 0 },
    { vsubnESemicolonEntityName, 7, 0x02ACB, 0x0FE00 },
    { vsubneSemicolonEntityName, 7, 0x0228A, 0x0FE00 },
    { vsupnESemicolonEntityName, 7, 0x02ACC, 0x0FE00 },
    { vsupneSemicolonEntityName, 7, 0x0228B, 0x0FE00 },
    { vzigzagSemicolonEntityName, 8, 0x0299A, 0 },
    { wcircSemicolonEntityName, 6, 0x00175, 0 },
    { wedbarSemicolonEntityName, 7, 0x02A5F, 0 },
    { wedgeSemicolonEntityName, 6, 0x02227, 0 },
    { wedgeqSemicolonEntityName, 7, 0x02259, 0 },
    { weierpSemicolonEntityName, 7, 0x02118, 0 },
    { wfrSemicolonEntityName, 4, 0x1D534, 0 },
    { wopfSemicolonEntityName, 5, 0x1D568, 0 },
    { wpSemicolonEntityName, 3, 0x02118, 0 },
    { wrSemicolonEntityName, 3, 0x02240, 0 },
    { wreathSemicolonEntityName, 7, 0x02240, 0 },
    { wscrSemicolonEntityName, 5, 0x1D4CC, 0 },
    { xcapSemicolonEntityName, 5, 0x022C2, 0 },
    { xcircSemicolonEntityName, 6, 0x025EF, 0 },
    { xcupSemicolonEntityName, 5, 0x022C3, 0 },
    { xdtriSemicolonEntityName, 6, 0x025BD, 0 },
    { xfrSemicolonEntityName, 4, 0x1D535, 0 },
    { xhArrSemicolonEntityName, 6, 0x027FA, 0 },
    { xharrSemicolonEntityName, 6, 0x027F7, 0 },
    { xiSemicolonEntityName, 3, 0x003BE, 0 },
    { xlArrSemicolonEntityName, 6, 0x027F8, 0 },
    { xlarrSemicolonEntityName, 6, 0x027F5, 0 },
    { xmapSemicolonEntityName, 5, 0x027FC, 0 },
    { xnisSemicolonEntityName, 5, 0x022FB, 0 },
    { xodotSemicolonEntityName, 6, 0x02A00, 0 },
    { xopfSemicolonEntityName, 5, 0x1D569, 0 },
    { xoplusSemicolonEntityName, 7, 0x02A01, 0 },
    { xotimeSemicolonEntityName, 7, 0x02A02, 0 },
    { xrArrSemicolonEntityName, 6, 0x027F9, 0 },
    { xrarrSemicolonEntityName, 6, 0x027F6, 0 },
    { xscrSemicolonEntityName, 5, 0x1D4CD, 0 },
    { xsqcupSemicolonEntityName, 7, 0x02A06, 0 },
    { xuplusSemicolonEntityName, 7, 0x02A04, 0 },
    { xutriSemicolonEntityName, 6, 0x025B3, 0 },
    { xveeSemicolonEntityName, 5, 0x022C1, 0 },
    { xwedgeSemicolonEntityName, 7, 0x022C0, 0 },
    { yacuteEntityName, 6, 0x000FD, 0 },
    { yacuteSemicolonEntityName, 7, 0x000FD, 0 },
    { yacySemicolonEntityName, 5, 0x0044F, 0 },
    { ycircSemicolonEntityName, 6, 0x00177, 0 },
    { ycySemicolonEntityName, 4, 0x0044B, 0 },
    { yenEntityName, 3, 0x000A5, 0 },
    { yenSemicolonEntityName, 4, 0x000A5, 0 },
    { yfrSemicolonEntityName, 4, 0x1D536, 0 },
    { yicySemicolonEntityName, 5, 0x00457, 0 },
    { yopfSemicolonEntityName, 5, 0x1D56A, 0 },
    { yscrSemicolonEntityName, 5, 0x1D4CE, 0 },
    { yucySemicolonEntityName, 5, 0x0044E, 0 },
    { yumlEntityName, 4, 0x000FF, 0 },
    { yumlSemicolonEntityName, 5, 0x000FF, 0 },
    { zacuteSemicolonEntityName, 7, 0x0017A, 0 },
    { zcaronSemicolonEntityName, 7, 0x0017E, 0 },
    { zcySemicolonEntityName, 4, 0x00437, 0 },
    { zdotSemicolonEntityName, 5, 0x0017C, 0 },
    { zeetrfSemicolonEntityName, 7, 0x02128, 0 },
    { zetaSemicolonEntityName, 5, 0x003B6, 0 },
    { zfrSemicolonEntityName, 4, 0x1D537, 0 },
    { zhcySemicolonEntityName, 5, 0x00436, 0 },
    { zigrarrSemicolonEntityName, 8, 0x021DD, 0 },
    { zopfSemicolonEntityName, 5, 0x1D56B, 0 },
    { zscrSemicolonEntityName, 5, 0x1D4CF, 0 },
    { zwjSemicolonEntityName, 4, 0x0200D, 0 },
    { zwnjSemicolonEntityName, 5, 0x0200C, 0 },
};

static const HTMLEntityTableEntry* uppercaseOffset[] = {
    &staticEntityTable[0],
    &staticEntityTable[27],
    &staticEntityTable[39],
    &staticEntityTable[75],
    &staticEntityTable[129],
    &staticEntityTable[159],
    &staticEntityTable[167],
    &staticEntityTable[189],
    &staticEntityTable[201],
    &staticEntityTable[230],
    &staticEntityTable[237],
    &staticEntityTable[245],
    &staticEntityTable[305],
    &staticEntityTable[314],
    &staticEntityTable[386],
    &staticEntityTable[415],
    &staticEntityTable[434],
    &staticEntityTable[439],
    &staticEntityTable[484],
    &staticEntityTable[524],
    &staticEntityTable[547],
    &staticEntityTable[587],
    &staticEntityTable[604],
    &staticEntityTable[609],
    &staticEntityTable[613],
    &staticEntityTable[624],
    &staticEntityTable[634],
};

static const HTMLEntityTableEntry* lowercaseOffset[] = {
    &staticEntityTable[634],
    &staticEntityTable[703],
    &staticEntityTable[819],
    &staticEntityTable[918],
    &staticEntityTable[984],
    &staticEntityTable[1051],
    &staticEntityTable[1090],
    &staticEntityTable[1150],
    &staticEntityTable[1178],
    &staticEntityTable[1234],
    &staticEntityTable[1242],
    &staticEntityTable[1252],
    &staticEntityTable[1406],
    &staticEntityTable[1446],
    &staticEntityTable[1614],
    &staticEntityTable[1675],
    &staticEntityTable[1744],
    &staticEntityTable[1755],
    &staticEntityTable[1859],
    &staticEntityTable[2017],
    &staticEntityTable[2075],
    &staticEntityTable[2127],
    &staticEntityTable[2169],
    &staticEntityTable[2180],
    &staticEntityTable[2204],
    &staticEntityTable[2218],
    &staticEntityTable[2231],
};

}

const HTMLEntityTableEntry* HTMLEntityTable::firstEntryStartingWith(UChar c)
{
    if (c >= 'A' && c <= 'Z')
        return uppercaseOffset[c - 'A'];
    if (c >= 'a' && c <= 'z')
        return lowercaseOffset[c - 'a'];
    return 0;
}

const HTMLEntityTableEntry* HTMLEntityTable::lastEntryStartingWith(UChar c)
{
    if (c >= 'A' && c <= 'Z')
        return uppercaseOffset[c - 'A' + 1] - 1;
    if (c >= 'a' && c <= 'z')
        return lowercaseOffset[c - 'a' + 1] - 1;
    return 0;
}

const HTMLEntityTableEntry* HTMLEntityTable::firstEntry()
{
    return &staticEntityTable[0];
}

const HTMLEntityTableEntry* HTMLEntityTable::lastEntry()
{
    return &staticEntityTable[2231 - 1];
}

}
