partial interface DOMWindow {
    [Conditional=WIRELESS_PLAYBACK_TARGET] attribute WebKitPlaybackTargetAvailabilityEventConstructor WebKitPlaybackTargetAvailabilityEvent;
    [Conditional=ENCRYPTED_MEDIA_V2] attribute MediaKeyMessageEventConstructor WebKitMediaKeyMessageEvent;
    [Conditional=ENCRYPTED_MEDIA_V2] attribute MediaKeyNeededEventConstructor MediaKeyNeededEvent;
    [Conditional=ENCRYPTED_MEDIA_V2] attribute MediaKeySessionConstructor WebKitMediaKeySession;
    [Conditional=ENCRYPTED_MEDIA_V2] attribute MediaKeysConstructor WebKitMediaKeys;
    [Conditional=GAMEPAD, EnabledAtRuntime=Gamepads] attribute GamepadConstructor Gamepad;
    [EnabledAtRuntime=Gamepads, Conditional=GAMEPAD] attribute GamepadButtonConstructor GamepadButton;
    [Conditional=GAMEPAD, EnabledAtRuntime=Gamepads] attribute GamepadEventConstructor GamepadEvent;
    [Conditional=INDEXED_DATABASE, EnabledAtRuntime=IndexedDB] attribute IDBCursorConstructor IDBCursor;
    [Conditional=INDEXED_DATABASE, EnabledAtRuntime=IndexedDB] attribute IDBCursorWithValueConstructor IDBCursorWithValue;
    [Conditional=INDEXED_DATABASE, EnabledAtRuntime=IndexedDB] attribute IDBDatabaseConstructor IDBDatabase;
    [Conditional=INDEXED_DATABASE, EnabledAtRuntime=IndexedDB] attribute IDBFactoryConstructor IDBFactory;
    [EnabledAtRuntime=IndexedDB, Conditional=INDEXED_DATABASE] attribute IDBIndexConstructor IDBIndex;
    [EnabledAtRuntime=IndexedDB, Conditional=INDEXED_DATABASE] attribute IDBKeyRangeConstructor IDBKeyRange;
    [Conditional=INDEXED_DATABASE, EnabledAtRuntime=IndexedDB] attribute IDBObjectStoreConstructor IDBObjectStore;
    [Conditional=INDEXED_DATABASE, EnabledAtRuntime=IndexedDB] attribute IDBOpenDBRequestConstructor IDBOpenDBRequest;
    [Conditional=INDEXED_DATABASE, EnabledAtRuntime=IndexedDB] attribute IDBRequestConstructor IDBRequest;
    [EnabledAtRuntime=IndexedDB, Conditional=INDEXED_DATABASE] attribute IDBTransactionConstructor IDBTransaction;
    [EnabledAtRuntime=IndexedDB, Conditional=INDEXED_DATABASE] attribute IDBVersionChangeEventConstructor IDBVersionChangeEvent;
    [Conditional=INDIE_UI] attribute UIRequestEventConstructor UIRequestEvent;
    [Conditional=MEDIA_SESSION] attribute MediaRemoteControlsConstructor MediaRemoteControls;
    [Conditional=MEDIA_SESSION] attribute MediaSessionConstructor MediaSession;
    [EnabledBySetting=MediaSource, Conditional=MEDIA_SOURCE] attribute MediaSourceConstructor MediaSource;
    [Conditional=MEDIA_STREAM] attribute MediaStreamConstructor MediaStream;
    [Conditional=MEDIA_STREAM] attribute MediaStreamEventConstructor MediaStreamEvent;
    [Conditional=MEDIA_STREAM] attribute MediaStreamTrackConstructor MediaStreamTrack;
    [Conditional=MEDIA_STREAM] attribute MediaStreamTrackEventConstructor MediaStreamTrackEvent;
    [Conditional=MEDIA_STREAM] attribute RTCIceCandidateConstructor RTCIceCandidate;
    [Conditional=MEDIA_STREAM] attribute RTCPeerConnectionConstructor webkitRTCPeerConnection;
    [Conditional=MEDIA_STREAM] attribute RTCSessionDescriptionConstructor RTCSessionDescription;
    [Conditional=NOTIFICATIONS|LEGACY_NOTIFICATIONS] attribute NotificationConstructor Notification;
    [Conditional=SPEECH_SYNTHESIS] attribute SpeechSynthesisEventConstructor SpeechSynthesisEvent;
    [Conditional=SPEECH_SYNTHESIS] attribute SpeechSynthesisUtteranceConstructor SpeechSynthesisUtterance;
    [Conditional=STREAMS_API] attribute CountQueuingStrategyConstructor CountQueuingStrategy;
    [Conditional=STREAMS_API] attribute ReadableStreamConstructor ReadableStream;
    [Conditional=WEB_AUDIO] attribute AnalyserNodeConstructor AnalyserNode;
    [Conditional=WEB_AUDIO] attribute AudioBufferConstructor AudioBuffer;
    [Conditional=WEB_AUDIO] attribute AudioBufferSourceNodeConstructor AudioBufferSourceNode;
    [Conditional=WEB_AUDIO, EnabledBySetting=WebAudio] attribute AudioContextConstructor webkitAudioContext;
    [Conditional=WEB_AUDIO] attribute AudioDestinationNodeConstructor AudioDestinationNode;
    [Conditional=WEB_AUDIO] attribute AudioListenerConstructor AudioListener;
    [Conditional=WEB_AUDIO] attribute AudioNodeConstructor AudioNode;
    [Conditional=WEB_AUDIO] attribute AudioParamConstructor AudioParam;
    [Conditional=WEB_AUDIO] attribute AudioProcessingEventConstructor AudioProcessingEvent;
    [Conditional=WEB_AUDIO] attribute BiquadFilterNodeConstructor BiquadFilterNode;
    [Conditional=WEB_AUDIO] attribute ChannelMergerNodeConstructor ChannelMergerNode;
    [Conditional=WEB_AUDIO] attribute ChannelSplitterNodeConstructor ChannelSplitterNode;
    [Conditional=WEB_AUDIO] attribute ConvolverNodeConstructor ConvolverNode;
    [Conditional=WEB_AUDIO] attribute DelayNodeConstructor DelayNode;
    [Conditional=WEB_AUDIO] attribute DynamicsCompressorNodeConstructor DynamicsCompressorNode;
    [Conditional=WEB_AUDIO] attribute GainNodeConstructor GainNode;
    [Conditional=WEB_AUDIO&VIDEO] attribute MediaElementAudioSourceNodeConstructor MediaElementAudioSourceNode;
    [Conditional=WEB_AUDIO&MEDIA_STREAM] attribute MediaStreamAudioDestinationNodeConstructor MediaStreamAudioDestinationNode;
    [Conditional=WEB_AUDIO&MEDIA_STREAM] attribute MediaStreamAudioSourceNodeConstructor MediaStreamAudioSourceNode;
    [Conditional=WEB_AUDIO] attribute OfflineAudioCompletionEventConstructor OfflineAudioCompletionEvent;
    [Conditional=WEB_AUDIO] attribute OfflineAudioContextConstructor webkitOfflineAudioContext;
    [Conditional=WEB_AUDIO] attribute OscillatorNodeConstructor OscillatorNode;
    [Conditional=WEB_AUDIO] attribute PannerNodeConstructor webkitAudioPannerNode;
    [Conditional=WEB_AUDIO] attribute PeriodicWaveConstructor PeriodicWave;
    [Conditional=WEB_AUDIO] attribute ScriptProcessorNodeConstructor ScriptProcessorNode;
    [Conditional=WEB_AUDIO] attribute WaveShaperNodeConstructor WaveShaperNode;
    attribute SQLExceptionConstructor SQLException;
    attribute CloseEventConstructor CloseEvent;
    [Conditional=WEB_SOCKETS, EnabledAtRuntime] attribute WebSocketConstructor WebSocket;
    attribute CSSCharsetRuleConstructor CSSCharsetRule;
    attribute CSSFontFaceRuleConstructor CSSFontFaceRule;
    attribute CSSImportRuleConstructor CSSImportRule;
    attribute CSSKeyframeRuleConstructor CSSKeyframeRule;
    attribute CSSKeyframesRuleConstructor CSSKeyframesRule;
    attribute CSSMediaRuleConstructor CSSMediaRule;
    attribute CSSPageRuleConstructor CSSPageRule;
    attribute CSSPrimitiveValueConstructor CSSPrimitiveValue;
    attribute CSSRuleConstructor CSSRule;
    attribute CSSRuleListConstructor CSSRuleList;
    attribute CSSStyleDeclarationConstructor CSSStyleDeclaration;
    attribute CSSStyleRuleConstructor CSSStyleRule;
    attribute CSSStyleSheetConstructor CSSStyleSheet;
    attribute CSSValueConstructor CSSValue;
    attribute CSSValueListConstructor CSSValueList;
    attribute CounterConstructor Counter;
    attribute MediaListConstructor MediaList;
    attribute RGBColorConstructor RGBColor;
    attribute RectConstructor Rect;
    attribute StyleSheetConstructor StyleSheet;
    attribute StyleSheetListConstructor StyleSheetList;
    attribute WebKitCSSFilterValueConstructor WebKitCSSFilterValue;
    attribute WebKitCSSMatrixConstructor WebKitCSSMatrix;
    [Conditional=CSS_REGIONS] attribute WebKitCSSRegionRuleConstructor WebKitCSSRegionRule;
    attribute WebKitCSSTransformValueConstructor WebKitCSSTransformValue;
    [Conditional=CSS_DEVICE_ADAPTATION] attribute WebKitCSSViewportRuleConstructor WebKitCSSViewportRule;
    attribute AnimationEventConstructor AnimationEvent;
    attribute AttrConstructor Attr;
    [Conditional=REQUEST_AUTOCOMPLETE] attribute AutocompleteErrorEventConstructor AutocompleteErrorEvent;
    attribute BeforeLoadEventConstructor BeforeLoadEvent;
    attribute BeforeUnloadEventConstructor BeforeUnloadEvent;
    attribute CDATASectionConstructor CDATASection;
    attribute CharacterDataConstructor CharacterData;
    attribute ClientRectConstructor ClientRect;
    attribute ClientRectListConstructor ClientRectList;
    attribute CommentConstructor Comment;
    attribute CompositionEventConstructor CompositionEvent;
    attribute CustomEventConstructor CustomEvent;
    attribute DOMCoreExceptionConstructor DOMException;
    attribute DOMImplementationConstructor DOMImplementation;
    attribute DOMStringListConstructor DOMStringList;
    attribute DOMStringMapConstructor DOMStringMap;
    attribute DataTransferConstructor DataTransfer;
    [Conditional=DEVICE_ORIENTATION] attribute DeviceMotionEventConstructor DeviceMotionEvent;
    [Conditional=DEVICE_ORIENTATION] attribute DeviceOrientationEventConstructor DeviceOrientationEvent;
    attribute DocumentConstructor Document;
    attribute DocumentFragmentConstructor DocumentFragment;
    attribute DocumentTypeConstructor DocumentType;
    attribute ElementConstructor Element;
    attribute EntityConstructor Entity;
    attribute EntityReferenceConstructor EntityReference;
    attribute ErrorEventConstructor ErrorEvent;
    attribute EventConstructor Event;
    attribute EventExceptionConstructor EventException;
    attribute FocusEventConstructor FocusEvent;
    attribute HashChangeEventConstructor HashChangeEvent;
    attribute KeyboardEventConstructor KeyboardEvent;
    [Conditional=CHANNEL_MESSAGING] attribute MessageChannelConstructor MessageChannel;
    attribute MessageEventConstructor MessageEvent;
    attribute MessagePortConstructor MessagePort;
    attribute MouseEventConstructor MouseEvent;
    attribute MutationEventConstructor MutationEvent;
    attribute MutationObserverConstructor MutationObserver;
    attribute MutationRecordConstructor MutationRecord;
    attribute NamedNodeMapConstructor NamedNodeMap;
    attribute NodeConstructor Node;
    attribute NodeFilterConstructor NodeFilter;
    attribute NodeIteratorConstructor NodeIterator;
    attribute NodeListConstructor NodeList;
    attribute OverflowEventConstructor OverflowEvent;
    attribute PageTransitionEventConstructor PageTransitionEvent;
    attribute PopStateEventConstructor PopStateEvent;
    attribute ProcessingInstructionConstructor ProcessingInstruction;
    attribute ProgressEventConstructor ProgressEvent;
    attribute RangeConstructor Range;
    attribute RangeExceptionConstructor RangeException;
    [Conditional=CSP_NEXT] attribute SecurityPolicyViolationEventConstructor SecurityPolicyViolationEvent;
    attribute TextConstructor Text;
    attribute TextEventConstructor TextEvent;
    [Conditional=TOUCH_EVENTS] attribute TouchConstructor Touch;
    [Conditional=TOUCH_EVENTS] attribute TouchEventConstructor TouchEvent;
    [Conditional=TOUCH_EVENTS] attribute TouchListConstructor TouchList;
    attribute TransitionEventConstructor TransitionEvent;
    attribute TreeWalkerConstructor TreeWalker;
    attribute UIEventConstructor UIEvent;
    attribute WebKitAnimationEventConstructor WebKitAnimationEvent;
    attribute WebKitTransitionEventConstructor WebKitTransitionEvent;
    attribute WheelEventConstructor WheelEvent;
    attribute BlobConstructor Blob;
    attribute FileConstructor File;
    attribute FileErrorConstructor FileError;
    attribute FileListConstructor FileList;
    attribute FileReaderConstructor FileReader;
    attribute DOMFormDataConstructor FormData;
    attribute DOMSettableTokenListConstructor DOMSettableTokenList;
    attribute DOMTokenListConstructor DOMTokenList;
    attribute DOMURLConstructor URL;
    attribute HTMLAllCollectionConstructor HTMLAllCollection;
    attribute HTMLAnchorElementConstructor HTMLAnchorElement;
    attribute HTMLAppletElementConstructor HTMLAppletElement;
    attribute HTMLAreaElementConstructor HTMLAreaElement;
    [Conditional=ATTACHMENT_ELEMENT] attribute HTMLAttachmentElementConstructor HTMLAttachmentElement;
    [Conditional=VIDEO, EnabledAtRuntime] attribute HTMLAudioElementConstructor HTMLAudioElement;
    [Conditional=VIDEO, EnabledAtRuntime] attribute HTMLAudioElementNamedConstructor Audio;
    attribute HTMLBRElementConstructor HTMLBRElement;
    attribute HTMLBaseElementConstructor HTMLBaseElement;
    attribute HTMLBaseFontElementConstructor HTMLBaseFontElement;
    attribute HTMLBodyElementConstructor HTMLBodyElement;
    attribute HTMLButtonElementConstructor HTMLButtonElement;
    attribute HTMLCanvasElementConstructor HTMLCanvasElement;
    attribute HTMLCollectionConstructor HTMLCollection;
    attribute HTMLDListElementConstructor HTMLDListElement;
    [Conditional=DATALIST_ELEMENT] attribute HTMLDataListElementConstructor HTMLDataListElement;
    attribute HTMLDirectoryElementConstructor HTMLDirectoryElement;
    attribute HTMLDivElementConstructor HTMLDivElement;
    attribute HTMLDocumentConstructor HTMLDocument;
    attribute HTMLElementConstructor HTMLElement;
    attribute HTMLEmbedElementConstructor HTMLEmbedElement;
    attribute HTMLFieldSetElementConstructor HTMLFieldSetElement;
    attribute HTMLFontElementConstructor HTMLFontElement;
    attribute HTMLFormControlsCollectionConstructor HTMLFormControlsCollection;
    attribute HTMLFormElementConstructor HTMLFormElement;
    attribute HTMLFrameElementConstructor HTMLFrameElement;
    attribute HTMLFrameSetElementConstructor HTMLFrameSetElement;
    attribute HTMLHRElementConstructor HTMLHRElement;
    attribute HTMLHeadElementConstructor HTMLHeadElement;
    attribute HTMLHeadingElementConstructor HTMLHeadingElement;
    attribute HTMLHtmlElementConstructor HTMLHtmlElement;
    attribute HTMLIFrameElementConstructor HTMLIFrameElement;
    attribute HTMLImageElementConstructor HTMLImageElement;
    attribute HTMLInputElementConstructor HTMLInputElement;
    attribute HTMLKeygenElementConstructor HTMLKeygenElement;
    attribute HTMLLIElementConstructor HTMLLIElement;
    attribute HTMLLabelElementConstructor HTMLLabelElement;
    attribute HTMLLegendElementConstructor HTMLLegendElement;
    attribute HTMLLinkElementConstructor HTMLLinkElement;
    attribute HTMLMapElementConstructor HTMLMapElement;
    attribute HTMLMarqueeElementConstructor HTMLMarqueeElement;
    [Conditional=VIDEO] attribute HTMLMediaElementConstructor HTMLMediaElement;
    attribute HTMLMenuElementConstructor HTMLMenuElement;
    attribute HTMLMetaElementConstructor HTMLMetaElement;
    [Conditional=METER_ELEMENT] attribute HTMLMeterElementConstructor HTMLMeterElement;
    attribute HTMLModElementConstructor HTMLModElement;
    attribute HTMLOListElementConstructor HTMLOListElement;
    attribute HTMLObjectElementConstructor HTMLObjectElement;
    attribute HTMLOptGroupElementConstructor HTMLOptGroupElement;
    attribute HTMLOptionElementConstructor HTMLOptionElement;
    attribute HTMLOptionElementNamedConstructor Option;
    attribute HTMLOptionsCollectionConstructor HTMLOptionsCollection;
    attribute HTMLOutputElementConstructor HTMLOutputElement;
    attribute HTMLParagraphElementConstructor HTMLParagraphElement;
    attribute HTMLParamElementConstructor HTMLParamElement;
    attribute HTMLPreElementConstructor HTMLPreElement;
    attribute HTMLProgressElementConstructor HTMLProgressElement;
    attribute HTMLQuoteElementConstructor HTMLQuoteElement;
    attribute HTMLScriptElementConstructor HTMLScriptElement;
    attribute HTMLSelectElementConstructor HTMLSelectElement;
    [Conditional=VIDEO] attribute HTMLSourceElementConstructor HTMLSourceElement;
    attribute HTMLSpanElementConstructor HTMLSpanElement;
    attribute HTMLStyleElementConstructor HTMLStyleElement;
    attribute HTMLTableCaptionElementConstructor HTMLTableCaptionElement;
    attribute HTMLTableCellElementConstructor HTMLTableCellElement;
    attribute HTMLTableColElementConstructor HTMLTableColElement;
    attribute HTMLTableElementConstructor HTMLTableElement;
    attribute HTMLTableRowElementConstructor HTMLTableRowElement;
    attribute HTMLTableSectionElementConstructor HTMLTableSectionElement;
    [Conditional=TEMPLATE_ELEMENT] attribute HTMLTemplateElementConstructor HTMLTemplateElement;
    attribute HTMLTextAreaElementConstructor HTMLTextAreaElement;
    attribute HTMLTitleElementConstructor HTMLTitleElement;
    [Conditional=VIDEO_TRACK] attribute HTMLTrackElementConstructor HTMLTrackElement;
    attribute HTMLUListElementConstructor HTMLUListElement;
    attribute HTMLUnknownElementConstructor HTMLUnknownElement;
    [Conditional=VIDEO] attribute HTMLVideoElementConstructor HTMLVideoElement;
    attribute ImageDataConstructor ImageData;
    [Conditional=VIDEO] attribute MediaControllerConstructor MediaController;
    [Conditional=VIDEO] attribute MediaErrorConstructor MediaError;
    [Conditional=ENCRYPTED_MEDIA|ENCRYPTED_MEDIA_V2] attribute MediaKeyErrorConstructor WebKitMediaKeyError;
    [Conditional=ENCRYPTED_MEDIA] attribute MediaKeyEventConstructor MediaKeyEvent;
    attribute TextMetricsConstructor TextMetrics;
    [Conditional=VIDEO] attribute TimeRangesConstructor TimeRanges;
    attribute CanvasGradientConstructor CanvasGradient;
    attribute CanvasPatternConstructor CanvasPattern;
    [Conditional=CANVAS_PROXY] attribute CanvasProxyConstructor CanvasProxy;
    attribute CanvasRenderingContext2DConstructor CanvasRenderingContext2D;
    attribute DOMPathConstructor Path2D;
    [Conditional=WEBGL2] attribute WebGL2RenderingContextConstructor WebGL2RenderingContext;
    [Conditional=WEBGL] attribute WebGLActiveInfoConstructor WebGLActiveInfo;
    [Conditional=WEBGL] attribute WebGLBufferConstructor WebGLBuffer;
    [Conditional=WEBGL] attribute WebGLContextEventConstructor WebGLContextEvent;
    [Conditional=WEBGL] attribute WebGLFramebufferConstructor WebGLFramebuffer;
    [Conditional=WEBGL] attribute WebGLProgramConstructor WebGLProgram;
    [Conditional=WEBGL] attribute WebGLQueryConstructor WebGLQuery;
    [Conditional=WEBGL] attribute WebGLRenderbufferConstructor WebGLRenderbuffer;
    [Conditional=WEBGL] attribute WebGLRenderingContextConstructor WebGLRenderingContext;
    [Conditional=WEBGL] attribute WebGLSamplerConstructor WebGLSampler;
    [Conditional=WEBGL] attribute WebGLShaderConstructor WebGLShader;
    [Conditional=WEBGL] attribute WebGLShaderPrecisionFormatConstructor WebGLShaderPrecisionFormat;
    [Conditional=WEBGL] attribute WebGLSyncConstructor WebGLSync;
    [Conditional=WEBGL] attribute WebGLTextureConstructor WebGLTexture;
    [Conditional=WEBGL] attribute WebGLTransformFeedbackConstructor WebGLTransformFeedback;
    [Conditional=WEBGL] attribute WebGLUniformLocationConstructor WebGLUniformLocation;
    [Conditional=WEBGL2] attribute WebGLVertexArrayObjectConstructor WebGLVertexArrayObject;
    [Conditional=VIDEO_TRACK] attribute DataCueConstructor WebKitDataCue;
    [Conditional=VIDEO_TRACK] attribute TextTrackConstructor TextTrack;
    [Conditional=VIDEO_TRACK] attribute TextTrackCueConstructor TextTrackCue;
    [Conditional=VIDEO_TRACK] attribute TextTrackCueListConstructor TextTrackCueList;
    [Conditional=VIDEO_TRACK] attribute TextTrackListConstructor TextTrackList;
    [Conditional=VIDEO_TRACK] attribute TrackEventConstructor TrackEvent;
    [Conditional=VIDEO_TRACK] attribute VTTCueConstructor VTTCue;
    [Conditional=VIDEO_TRACK & WEBVTT_REGIONS] attribute VTTRegionConstructor VTTRegion;
    attribute BarPropConstructor BarProp;
    [Conditional=CSP_NEXT] attribute DOMSecurityPolicyConstructor SecurityPolicy;
    attribute DOMSelectionConstructor Selection;
    attribute DOMWindowConstructor Window;
    attribute EventSourceConstructor EventSource;
    attribute HistoryConstructor History;
    attribute LocationConstructor Location;
    attribute NavigatorConstructor Navigator;
    [Conditional=WEB_TIMING] attribute PerformanceConstructor Performance;
    [Conditional=WEB_TIMING] attribute PerformanceNavigationConstructor PerformanceNavigation;
    [Conditional=WEB_TIMING] attribute PerformanceTimingConstructor PerformanceTiming;
    attribute ScreenConstructor Screen;
    [Conditional=USER_MESSAGE_HANDLERS] attribute UserMessageHandlerConstructor UserMessageHandler;
    [Conditional=USER_MESSAGE_HANDLERS] attribute UserMessageHandlersNamespaceConstructor UserMessageHandlersNamespace;
    [Conditional=USER_MESSAGE_HANDLERS] attribute WebKitNamespaceConstructor WebKitNamespace;
    attribute WebKitPointConstructor WebKitPoint;
    attribute DOMMimeTypeConstructor MimeType;
    attribute DOMMimeTypeArrayConstructor MimeTypeArray;
    attribute DOMPluginConstructor Plugin;
    attribute DOMPluginArrayConstructor PluginArray;
    attribute StorageConstructor Storage;
    attribute StorageEventConstructor StorageEvent;
    attribute SVGAElementConstructor SVGAElement;
    [Conditional=SVG_FONTS] attribute SVGAltGlyphDefElementConstructor SVGAltGlyphDefElement;
    [Conditional=SVG_FONTS] attribute SVGAltGlyphElementConstructor SVGAltGlyphElement;
    [Conditional=SVG_FONTS] attribute SVGAltGlyphItemElementConstructor SVGAltGlyphItemElement;
    attribute SVGAngleConstructor SVGAngle;
    attribute SVGAnimateColorElementConstructor SVGAnimateColorElement;
    attribute SVGAnimateElementConstructor SVGAnimateElement;
    attribute SVGAnimateMotionElementConstructor SVGAnimateMotionElement;
    attribute SVGAnimateTransformElementConstructor SVGAnimateTransformElement;
    attribute SVGAnimatedAngleConstructor SVGAnimatedAngle;
    attribute SVGAnimatedBooleanConstructor SVGAnimatedBoolean;
    attribute SVGAnimatedEnumerationConstructor SVGAnimatedEnumeration;
    attribute SVGAnimatedIntegerConstructor SVGAnimatedInteger;
    attribute SVGAnimatedLengthConstructor SVGAnimatedLength;
    attribute SVGAnimatedLengthListConstructor SVGAnimatedLengthList;
    attribute SVGAnimatedNumberConstructor SVGAnimatedNumber;
    attribute SVGAnimatedNumberListConstructor SVGAnimatedNumberList;
    attribute SVGAnimatedPreserveAspectRatioConstructor SVGAnimatedPreserveAspectRatio;
    attribute SVGAnimatedRectConstructor SVGAnimatedRect;
    attribute SVGAnimatedStringConstructor SVGAnimatedString;
    attribute SVGAnimatedTransformListConstructor SVGAnimatedTransformList;
    attribute SVGAnimationElementConstructor SVGAnimationElement;
    attribute SVGCircleElementConstructor SVGCircleElement;
    attribute SVGClipPathElementConstructor SVGClipPathElement;
    attribute SVGColorConstructor SVGColor;
    attribute SVGComponentTransferFunctionElementConstructor SVGComponentTransferFunctionElement;
    attribute SVGCursorElementConstructor SVGCursorElement;
    attribute SVGDefsElementConstructor SVGDefsElement;
    attribute SVGDescElementConstructor SVGDescElement;
    attribute SVGDocumentConstructor SVGDocument;
    attribute SVGElementConstructor SVGElement;
    attribute SVGEllipseElementConstructor SVGEllipseElement;
    attribute SVGExceptionConstructor SVGException;
    attribute SVGFEBlendElementConstructor SVGFEBlendElement;
    attribute SVGFEColorMatrixElementConstructor SVGFEColorMatrixElement;
    attribute SVGFEComponentTransferElementConstructor SVGFEComponentTransferElement;
    attribute SVGFECompositeElementConstructor SVGFECompositeElement;
    attribute SVGFEConvolveMatrixElementConstructor SVGFEConvolveMatrixElement;
    attribute SVGFEDiffuseLightingElementConstructor SVGFEDiffuseLightingElement;
    attribute SVGFEDisplacementMapElementConstructor SVGFEDisplacementMapElement;
    attribute SVGFEDistantLightElementConstructor SVGFEDistantLightElement;
    attribute SVGFEDropShadowElementConstructor SVGFEDropShadowElement;
    attribute SVGFEFloodElementConstructor SVGFEFloodElement;
    attribute SVGFEFuncAElementConstructor SVGFEFuncAElement;
    attribute SVGFEFuncBElementConstructor SVGFEFuncBElement;
    attribute SVGFEFuncGElementConstructor SVGFEFuncGElement;
    attribute SVGFEFuncRElementConstructor SVGFEFuncRElement;
    attribute SVGFEGaussianBlurElementConstructor SVGFEGaussianBlurElement;
    attribute SVGFEImageElementConstructor SVGFEImageElement;
    attribute SVGFEMergeElementConstructor SVGFEMergeElement;
    attribute SVGFEMergeNodeElementConstructor SVGFEMergeNodeElement;
    attribute SVGFEMorphologyElementConstructor SVGFEMorphologyElement;
    attribute SVGFEOffsetElementConstructor SVGFEOffsetElement;
    attribute SVGFEPointLightElementConstructor SVGFEPointLightElement;
    attribute SVGFESpecularLightingElementConstructor SVGFESpecularLightingElement;
    attribute SVGFESpotLightElementConstructor SVGFESpotLightElement;
    attribute SVGFETileElementConstructor SVGFETileElement;
    attribute SVGFETurbulenceElementConstructor SVGFETurbulenceElement;
    attribute SVGFilterElementConstructor SVGFilterElement;
    [Conditional=SVG_FONTS] attribute SVGFontElementConstructor SVGFontElement;
    [Conditional=SVG_FONTS] attribute SVGFontFaceElementConstructor SVGFontFaceElement;
    [Conditional=SVG_FONTS] attribute SVGFontFaceFormatElementConstructor SVGFontFaceFormatElement;
    [Conditional=SVG_FONTS] attribute SVGFontFaceNameElementConstructor SVGFontFaceNameElement;
    [Conditional=SVG_FONTS] attribute SVGFontFaceSrcElementConstructor SVGFontFaceSrcElement;
    [Conditional=SVG_FONTS] attribute SVGFontFaceUriElementConstructor SVGFontFaceUriElement;
    attribute SVGForeignObjectElementConstructor SVGForeignObjectElement;
    attribute SVGGElementConstructor SVGGElement;
    [Conditional=SVG_FONTS] attribute SVGGlyphElementConstructor SVGGlyphElement;
    [Conditional=SVG_FONTS] attribute SVGGlyphRefElementConstructor SVGGlyphRefElement;
    attribute SVGGradientElementConstructor SVGGradientElement;
    attribute SVGGraphicsElementConstructor SVGGraphicsElement;
    [Conditional=SVG_FONTS] attribute SVGHKernElementConstructor SVGHKernElement;
    attribute SVGImageElementConstructor SVGImageElement;
    attribute SVGLengthConstructor SVGLength;
    attribute SVGLengthListConstructor SVGLengthList;
    attribute SVGLineElementConstructor SVGLineElement;
    attribute SVGLinearGradientElementConstructor SVGLinearGradientElement;
    attribute SVGMPathElementConstructor SVGMPathElement;
    attribute SVGMarkerElementConstructor SVGMarkerElement;
    attribute SVGMaskElementConstructor SVGMaskElement;
    attribute SVGMatrixConstructor SVGMatrix;
    attribute SVGMetadataElementConstructor SVGMetadataElement;
    [Conditional=SVG_FONTS] attribute SVGMissingGlyphElementConstructor SVGMissingGlyphElement;
    attribute SVGNumberConstructor SVGNumber;
    attribute SVGNumberListConstructor SVGNumberList;
    attribute SVGPaintConstructor SVGPaint;
    attribute SVGPathElementConstructor SVGPathElement;
    attribute SVGPathSegConstructor SVGPathSeg;
    attribute SVGPathSegArcAbsConstructor SVGPathSegArcAbs;
    attribute SVGPathSegArcRelConstructor SVGPathSegArcRel;
    attribute SVGPathSegClosePathConstructor SVGPathSegClosePath;
    attribute SVGPathSegCurvetoCubicAbsConstructor SVGPathSegCurvetoCubicAbs;
    attribute SVGPathSegCurvetoCubicRelConstructor SVGPathSegCurvetoCubicRel;
    attribute SVGPathSegCurvetoCubicSmoothAbsConstructor SVGPathSegCurvetoCubicSmoothAbs;
    attribute SVGPathSegCurvetoCubicSmoothRelConstructor SVGPathSegCurvetoCubicSmoothRel;
    attribute SVGPathSegCurvetoQuadraticAbsConstructor SVGPathSegCurvetoQuadraticAbs;
    attribute SVGPathSegCurvetoQuadraticRelConstructor SVGPathSegCurvetoQuadraticRel;
    attribute SVGPathSegCurvetoQuadraticSmoothAbsConstructor SVGPathSegCurvetoQuadraticSmoothAbs;
    attribute SVGPathSegCurvetoQuadraticSmoothRelConstructor SVGPathSegCurvetoQuadraticSmoothRel;
    attribute SVGPathSegLinetoAbsConstructor SVGPathSegLinetoAbs;
    attribute SVGPathSegLinetoHorizontalAbsConstructor SVGPathSegLinetoHorizontalAbs;
    attribute SVGPathSegLinetoHorizontalRelConstructor SVGPathSegLinetoHorizontalRel;
    attribute SVGPathSegLinetoRelConstructor SVGPathSegLinetoRel;
    attribute SVGPathSegLinetoVerticalAbsConstructor SVGPathSegLinetoVerticalAbs;
    attribute SVGPathSegLinetoVerticalRelConstructor SVGPathSegLinetoVerticalRel;
    attribute SVGPathSegListConstructor SVGPathSegList;
    attribute SVGPathSegMovetoAbsConstructor SVGPathSegMovetoAbs;
    attribute SVGPathSegMovetoRelConstructor SVGPathSegMovetoRel;
    attribute SVGPatternElementConstructor SVGPatternElement;
    attribute SVGPointConstructor SVGPoint;
    attribute SVGPointListConstructor SVGPointList;
    attribute SVGPolygonElementConstructor SVGPolygonElement;
    attribute SVGPolylineElementConstructor SVGPolylineElement;
    attribute SVGPreserveAspectRatioConstructor SVGPreserveAspectRatio;
    attribute SVGRadialGradientElementConstructor SVGRadialGradientElement;
    attribute SVGRectConstructor SVGRect;
    attribute SVGRectElementConstructor SVGRectElement;
    attribute SVGRenderingIntentConstructor SVGRenderingIntent;
    attribute SVGSVGElementConstructor SVGSVGElement;
    attribute SVGScriptElementConstructor SVGScriptElement;
    attribute SVGSetElementConstructor SVGSetElement;
    attribute SVGStopElementConstructor SVGStopElement;
    attribute SVGStringListConstructor SVGStringList;
    attribute SVGStyleElementConstructor SVGStyleElement;
    attribute SVGSwitchElementConstructor SVGSwitchElement;
    attribute SVGSymbolElementConstructor SVGSymbolElement;
    attribute SVGTRefElementConstructor SVGTRefElement;
    attribute SVGTSpanElementConstructor SVGTSpanElement;
    attribute SVGTextContentElementConstructor SVGTextContentElement;
    attribute SVGTextElementConstructor SVGTextElement;
    attribute SVGTextPathElementConstructor SVGTextPathElement;
    attribute SVGTextPositioningElementConstructor SVGTextPositioningElement;
    attribute SVGTitleElementConstructor SVGTitleElement;
    attribute SVGTransformConstructor SVGTransform;
    attribute SVGTransformListConstructor SVGTransformList;
    attribute SVGUnitTypesConstructor SVGUnitTypes;
    attribute SVGUseElementConstructor SVGUseElement;
    [Conditional=SVG_FONTS] attribute SVGVKernElementConstructor SVGVKernElement;
    attribute SVGViewElementConstructor SVGViewElement;
    attribute SVGViewSpecConstructor SVGViewSpec;
    attribute SVGZoomEventConstructor SVGZoomEvent;
    attribute WorkerConstructor Worker;
    attribute DOMParserConstructor DOMParser;
    attribute XMLHttpRequestConstructor XMLHttpRequest;
    attribute XMLHttpRequestExceptionConstructor XMLHttpRequestException;
    attribute XMLHttpRequestProgressEventConstructor XMLHttpRequestProgressEvent;
    attribute XMLHttpRequestUploadConstructor XMLHttpRequestUpload;
    attribute XMLSerializerConstructor XMLSerializer;
    attribute XPathEvaluatorConstructor XPathEvaluator;
    attribute XPathExceptionConstructor XPathException;
    attribute XPathExpressionConstructor XPathExpression;
    attribute XPathResultConstructor XPathResult;
    [Conditional=XSLT] attribute XSLTProcessorConstructor XSLTProcessor;
};
